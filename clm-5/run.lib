#0Y_ #0Y |CHARSET|::|UTF-8|
(|COMMON-LISP|::|SETQ| |COMMON-LISP|::|*PACKAGE*|
 (|SYSTEM|::|%FIND-PACKAGE| "CLM"))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |CLM|::|*CLM-REPORT-UNTYPED-VARS*|))
(|SYSTEM|::|C-PROCLAIM-CONSTANT| '|CLM|::|+SETF+| '0.)
(|SYSTEM|::|C-PROCLAIM-CONSTANT| '|CLM|::|+INCF+| '1.)
(|SYSTEM|::|C-PROCLAIM-CONSTANT| '|CLM|::|+DECF+| '2.)
(|SYSTEM|::|C-PROCLAIM-CONSTANT| '|CLM|::|+AS-NEEDED-INPUT+| '0.)
(|SYSTEM|::|C-PROCLAIM-CONSTANT| '|CLM|::|+AS-NEEDED-EDIT+| '1.)
(|SYSTEM|::|C-PROCLAIM-CONSTANT| '|CLM|::|+AS-NEEDED-ANALYZE+| '2.)
(|SYSTEM|::|C-PROCLAIM-CONSTANT| '|CLM|::|+AS-NEEDED-SYNTHESIZE+| '3.)
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |CLM|::|NEW-PROG|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |CLM|::|LOOP-VAR|))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|WF|)
(|SYSTEM|::|%PUTD| '|CLM|::|WF|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|WF|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|X| (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|WF|
       `(|WALKER|::|WALK-FORM| ,|CLM|::|X| |WALKER|::|*TOPLEVEL-ENVIRONMENT*|
         '|CLM|::|LISP->C|))))))
  '(|CLM|::|X|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|FULLY-EXPAND|)
(|SYSTEM|::|%PUTD| '|CLM|::|FULLY-EXPAND|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|FULLY-EXPAND|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|X| (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|FULLY-EXPAND|
       `(|WALKER|::|WALK-FORM| ,|CLM|::|X| |WALKER|::|*TOPLEVEL-ENVIRONMENT*|
         #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|X| |CLM|::|Y| |CLM|::|Z|)
            |CLM|::|X|)))))))
  '(|CLM|::|X|)))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |CLM|::|UNHAPPY|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |CLM|::|OLD-PROG|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |CLM|::|LOOP-BEG|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |CLM|::|LOOP-END|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |CLM|::|LOOP-LABEL-STACK|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |CLM|::|RETURN-STACK|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |CLM|::|CLM-FUNCTIONS|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |CLM|::|VARS|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |CLM|::|FUNCTION-CTR|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |CLM|::|LAMBDA-ARGS|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |CLM|::|*GEN-TYPE*|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |CLM|::|*AS-NEEDED*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |CLM|::|*AS-NEEDED-FUNCTIONS*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |CLM|::|*AS-NEEDED-FUNCTION-TYPES*|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |CLM|::|*GLOBAL*|))
(|COMMON-LISP|::|LET| |COMMON-LISP|::|NIL|
 (|COMMON-LISP|::|LET|
  ((#1=#:|G31524|
    (|COMMON-LISP|::|CONS| '|CLM|::|VARINFO|
     (|CLOS|::|CLASS-NAMES|
      (|COMMON-LISP|::|GET| '|COMMON-LISP|::|STRUCTURE-OBJECT|
       '|CLOS|::|CLOSCLASS|)))))
  (|SYSTEM|::|STRUCTURE-UNDEFINE-ACCESSORIES| '|CLM|::|VARINFO|)
  (|COMMON-LISP|::|REMPROP| '|CLM|::|VARINFO|
   '|SYSTEM|::|DEFSTRUCT-DESCRIPTION|)
  (|CLOS|::|DEFINE-STRUCTURE-CLASS| '|CLM|::|VARINFO| #1#
   '|CLM|::|MAKE-VARINFO| '|COMMON-LISP|::|NIL| '|CLM|::|COPY-VARINFO|
   '|CLM|::|VARINFO-P|
   (|COMMON-LISP|::|LIST|
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME| '|CLM|::|NAME|
     :|INITARGS| '#2=(:|NAME|) :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION|
     ':|INSTANCE| #3='|CLOS|::|INHERITABLE-INITER|
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #4=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
     #5='|CLOS|::|INHERITABLE-DOC| '(|COMMON-LISP|::|NIL|)
     #6='|CLOS|::|LOCATION| '1. #7='|CLOS|::|READONLY| '|COMMON-LISP|::|NIL|)
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME| '|CLM|::|DEPTH|
     :|INITARGS| '#8=(:|DEPTH|) :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION|
     ':|INSTANCE| #3#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '0.
      #9=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| 0.))
     #5# '(|COMMON-LISP|::|NIL|) #6# '2. #7# '|COMMON-LISP|::|NIL|)
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
     '|CLM|::|MAX-DEPTH| :|INITARGS| '#10=(:|MAX-DEPTH|) :|TYPE|
     '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE| #3#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '1.
      #11=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| 1.))
     #5# '(|COMMON-LISP|::|NIL|) #6# '3. #7# '|COMMON-LISP|::|NIL|)
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME| '|CLM|::|REFD|
     :|INITARGS| '#12=(:|REFD|) :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION|
     ':|INSTANCE| #3#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #13=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
     #5# '(|COMMON-LISP|::|NIL|) #6# '4. #7# '|COMMON-LISP|::|NIL|)
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME| '|CLM|::|PARALLEL|
     :|INITARGS| '#14=(:|PARALLEL|) :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION|
     ':|INSTANCE| #3#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #15=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
     #5# '(|COMMON-LISP|::|NIL|) #6# '5. #7# '|COMMON-LISP|::|NIL|)
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
     '|COMMON-LISP|::|TYPE| :|INITARGS| '#16=(:|TYPE|) :|TYPE|
     '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE| #3#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #17=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
     #5# '(|COMMON-LISP|::|NIL|) #6# '6. #7# '|COMMON-LISP|::|NIL|)
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME| '|CLM|::|ILOC|
     :|INITARGS| '#18=(:|ILOC|) :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION|
     ':|INSTANCE| #3#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #19=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
     #5# '(|COMMON-LISP|::|NIL|) #6# '7. #7# '|COMMON-LISP|::|NIL|)
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME| '|CLM|::|RLOC|
     :|INITARGS| '#20=(:|RLOC|) :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION|
     ':|INSTANCE| #3#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #21=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
     #5# '(|COMMON-LISP|::|NIL|) #6# '8. #7# '|COMMON-LISP|::|NIL|)
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
     '|CLM|::|INITIALIZE| :|INITARGS| '#22=(:|INITIALIZE|) :|TYPE|
     '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE| #3#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #23=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
     #5# '(|COMMON-LISP|::|NIL|) #6# '9. #7# '|COMMON-LISP|::|NIL|)
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME| '|CLM|::|TEMP|
     :|INITARGS| '#24=(:|TEMP|) :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION|
     ':|INSTANCE| #3#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #25=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
     #5# '(|COMMON-LISP|::|NIL|) #6# '10. #7# '|COMMON-LISP|::|NIL|)
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME| '|CLM|::|SHADOWED|
     :|INITARGS| '#26=(:|SHADOWED|) :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION|
     ':|INSTANCE| #3#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #27=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
     #5# '(|COMMON-LISP|::|NIL|) #6# '11. #7# '|COMMON-LISP|::|NIL|)
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME| '|CLM|::|GEN-TYPE|
     :|INITARGS| '#28=(:|GEN-TYPE|) :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION|
     ':|INSTANCE| #3#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #29=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
     #5# '(|COMMON-LISP|::|NIL|) #6# '12. #7# '|COMMON-LISP|::|NIL|)
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
     '|CLM|::|ARR-GEN-TYPE| :|INITARGS| '#30=(:|ARR-GEN-TYPE|) :|TYPE|
     '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE| #3#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #31=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
     #5# '(|COMMON-LISP|::|NIL|) #6# '13. #7# '|COMMON-LISP|::|NIL|)
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME| '|CLM|::|GLOBAL|
     :|INITARGS| '#32=(:|GLOBAL|) :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION|
     ':|INSTANCE| #3#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #33=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
     #5# '(|COMMON-LISP|::|NIL|) #6# '14. #7# '|COMMON-LISP|::|NIL|)
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME| '|CLM|::|CTR|
     :|INITARGS| '#34=(:|CTR|) :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION|
     ':|INSTANCE| #3#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #35=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
     #5# '(|COMMON-LISP|::|NIL|) #6# '15. #7# '|COMMON-LISP|::|NIL|)
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME| '|CLM|::|LOADED|
     :|INITARGS| '#36=(:|LOADED|) :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION|
     ':|INSTANCE| #3#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #37=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
     #5# '(|COMMON-LISP|::|NIL|) #6# '16. #7# '|COMMON-LISP|::|NIL|)
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
     '|CLM|::|REF-CHAIN| :|INITARGS| '#38=(:|REF-CHAIN|) :|TYPE|
     '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE| #3#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #39=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
     #5# '(|COMMON-LISP|::|NIL|) #6# '17. #7# '|COMMON-LISP|::|NIL|))
   (|COMMON-LISP|::|LIST|
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME| '|CLM|::|NAME|
     :|INITARGS| '#2# :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE|
     #40='|CLOS|::|INHERITABLE-INITER|
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #4#)
     #41='|CLOS|::|INHERITABLE-DOC| '(|COMMON-LISP|::|NIL|) :|READERS|
     '(|CLM|::|VARINFO-NAME|) :|WRITERS|
     '((|COMMON-LISP|::|SETF| |CLM|::|VARINFO-NAME|)))
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME| '|CLM|::|DEPTH|
     :|INITARGS| '#8# :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE|
     #40# (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '0. #9#) #41#
     '(|COMMON-LISP|::|NIL|) :|READERS| '(|CLM|::|VARINFO-DEPTH|) :|WRITERS|
     '((|COMMON-LISP|::|SETF| |CLM|::|VARINFO-DEPTH|)))
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME| '|CLM|::|MAX-DEPTH|
     :|INITARGS| '#10# :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE|
     #40# (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '1. #11#) #41#
     '(|COMMON-LISP|::|NIL|) :|READERS| '(|CLM|::|VARINFO-MAX-DEPTH|)
     :|WRITERS| '((|COMMON-LISP|::|SETF| |CLM|::|VARINFO-MAX-DEPTH|)))
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME| '|CLM|::|REFD|
     :|INITARGS| '#12# :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE|
     #40#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #13#)
     #41# '(|COMMON-LISP|::|NIL|) :|READERS| '(|CLM|::|VARINFO-REFD|)
     :|WRITERS| '((|COMMON-LISP|::|SETF| |CLM|::|VARINFO-REFD|)))
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME| '|CLM|::|PARALLEL|
     :|INITARGS| '#14# :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE|
     #40#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #15#)
     #41# '(|COMMON-LISP|::|NIL|) :|READERS| '(|CLM|::|VARINFO-PARALLEL|)
     :|WRITERS| '((|COMMON-LISP|::|SETF| |CLM|::|VARINFO-PARALLEL|)))
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME|
     '|COMMON-LISP|::|TYPE| :|INITARGS| '#16# :|TYPE| '|COMMON-LISP|::|T|
     :|ALLOCATION| ':|INSTANCE| #40#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #17#)
     #41# '(|COMMON-LISP|::|NIL|) :|READERS| '(|CLM|::|VARINFO-TYPE|)
     :|WRITERS| '((|COMMON-LISP|::|SETF| |CLM|::|VARINFO-TYPE|)))
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME| '|CLM|::|ILOC|
     :|INITARGS| '#18# :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE|
     #40#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #19#)
     #41# '(|COMMON-LISP|::|NIL|) :|READERS| '(|CLM|::|VARINFO-ILOC|)
     :|WRITERS| '((|COMMON-LISP|::|SETF| |CLM|::|VARINFO-ILOC|)))
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME| '|CLM|::|RLOC|
     :|INITARGS| '#20# :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE|
     #40#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #21#)
     #41# '(|COMMON-LISP|::|NIL|) :|READERS| '(|CLM|::|VARINFO-RLOC|)
     :|WRITERS| '((|COMMON-LISP|::|SETF| |CLM|::|VARINFO-RLOC|)))
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME| '|CLM|::|INITIALIZE|
     :|INITARGS| '#22# :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE|
     #40#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #23#)
     #41# '(|COMMON-LISP|::|NIL|) :|READERS| '(|CLM|::|VARINFO-INITIALIZE|)
     :|WRITERS| '((|COMMON-LISP|::|SETF| |CLM|::|VARINFO-INITIALIZE|)))
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME| '|CLM|::|TEMP|
     :|INITARGS| '#24# :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE|
     #40#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #25#)
     #41# '(|COMMON-LISP|::|NIL|) :|READERS| '(|CLM|::|VARINFO-TEMP|)
     :|WRITERS| '((|COMMON-LISP|::|SETF| |CLM|::|VARINFO-TEMP|)))
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME| '|CLM|::|SHADOWED|
     :|INITARGS| '#26# :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE|
     #40#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #27#)
     #41# '(|COMMON-LISP|::|NIL|) :|READERS| '(|CLM|::|VARINFO-SHADOWED|)
     :|WRITERS| '((|COMMON-LISP|::|SETF| |CLM|::|VARINFO-SHADOWED|)))
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME| '|CLM|::|GEN-TYPE|
     :|INITARGS| '#28# :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE|
     #40#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #29#)
     #41# '(|COMMON-LISP|::|NIL|) :|READERS| '(|CLM|::|VARINFO-GEN-TYPE|)
     :|WRITERS| '((|COMMON-LISP|::|SETF| |CLM|::|VARINFO-GEN-TYPE|)))
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME|
     '|CLM|::|ARR-GEN-TYPE| :|INITARGS| '#30# :|TYPE| '|COMMON-LISP|::|T|
     :|ALLOCATION| ':|INSTANCE| #40#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #31#)
     #41# '(|COMMON-LISP|::|NIL|) :|READERS| '(|CLM|::|VARINFO-ARR-GEN-TYPE|)
     :|WRITERS| '((|COMMON-LISP|::|SETF| |CLM|::|VARINFO-ARR-GEN-TYPE|)))
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME| '|CLM|::|GLOBAL|
     :|INITARGS| '#32# :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE|
     #40#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #33#)
     #41# '(|COMMON-LISP|::|NIL|) :|READERS| '(|CLM|::|VARINFO-GLOBAL|)
     :|WRITERS| '((|COMMON-LISP|::|SETF| |CLM|::|VARINFO-GLOBAL|)))
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME| '|CLM|::|CTR|
     :|INITARGS| '#34# :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE|
     #40#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #35#)
     #41# '(|COMMON-LISP|::|NIL|) :|READERS| '(|CLM|::|VARINFO-CTR|) :|WRITERS|
     '((|COMMON-LISP|::|SETF| |CLM|::|VARINFO-CTR|)))
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME| '|CLM|::|LOADED|
     :|INITARGS| '#36# :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE|
     #40#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #37#)
     #41# '(|COMMON-LISP|::|NIL|) :|READERS| '(|CLM|::|VARINFO-LOADED|)
     :|WRITERS| '((|COMMON-LISP|::|SETF| |CLM|::|VARINFO-LOADED|)))
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME| '|CLM|::|REF-CHAIN|
     :|INITARGS| '#38# :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE|
     #40#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #39#)
     #41# '(|COMMON-LISP|::|NIL|) :|READERS| '(|CLM|::|VARINFO-REF-CHAIN|)
     :|WRITERS| '((|COMMON-LISP|::|SETF| |CLM|::|VARINFO-REF-CHAIN|))))
   '|COMMON-LISP|::|NIL|)
  (|COMMON-LISP|::|DEFUN| |CLM|::|MAKE-VARINFO|
   (|COMMON-LISP|::|&KEY| (#42=#:|NAME| |COMMON-LISP|::|NIL|)
    (#43=#:|DEPTH| 0.) (#44=#:|MAX-DEPTH| 1.)
    (#45=#:|REFD| |COMMON-LISP|::|NIL|) (#46=#:|PARALLEL| |COMMON-LISP|::|NIL|)
    (#47=#:|TYPE| |COMMON-LISP|::|NIL|) (#48=#:|ILOC| |COMMON-LISP|::|NIL|)
    (#49=#:|RLOC| |COMMON-LISP|::|NIL|)
    (#50=#:|INITIALIZE| |COMMON-LISP|::|NIL|)
    (#51=#:|TEMP| |COMMON-LISP|::|NIL|) (#52=#:|SHADOWED| |COMMON-LISP|::|NIL|)
    (#53=#:|GEN-TYPE| |COMMON-LISP|::|NIL|)
    (#54=#:|ARR-GEN-TYPE| |COMMON-LISP|::|NIL|)
    (#55=#:|GLOBAL| |COMMON-LISP|::|NIL|) (#56=#:|CTR| |COMMON-LISP|::|NIL|)
    (#57=#:|LOADED| |COMMON-LISP|::|NIL|)
    (#58=#:|REF-CHAIN| |COMMON-LISP|::|NIL|))
   (|COMMON-LISP|::|LET|
    ((|SYSTEM|::|OBJECT| (|SYSTEM|::|%MAKE-STRUCTURE| #1# 18.)))
    (|COMMON-LISP|::|SETF|
     (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 1.)
     (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #42#))
    (|COMMON-LISP|::|SETF|
     (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 2.)
     (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #43#))
    (|COMMON-LISP|::|SETF|
     (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 3.)
     (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #44#))
    (|COMMON-LISP|::|SETF|
     (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 4.)
     (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #45#))
    (|COMMON-LISP|::|SETF|
     (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 5.)
     (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #46#))
    (|COMMON-LISP|::|SETF|
     (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 6.)
     (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #47#))
    (|COMMON-LISP|::|SETF|
     (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 7.)
     (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #48#))
    (|COMMON-LISP|::|SETF|
     (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 8.)
     (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #49#))
    (|COMMON-LISP|::|SETF|
     (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 9.)
     (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #50#))
    (|COMMON-LISP|::|SETF|
     (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 10.)
     (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #51#))
    (|COMMON-LISP|::|SETF|
     (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 11.)
     (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #52#))
    (|COMMON-LISP|::|SETF|
     (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 12.)
     (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #53#))
    (|COMMON-LISP|::|SETF|
     (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 13.)
     (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #54#))
    (|COMMON-LISP|::|SETF|
     (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 14.)
     (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #55#))
    (|COMMON-LISP|::|SETF|
     (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 15.)
     (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #56#))
    (|COMMON-LISP|::|SETF|
     (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 16.)
     (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #57#))
    (|COMMON-LISP|::|SETF|
     (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 17.)
     (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #58#))
    |SYSTEM|::|OBJECT|)))
 (|COMMON-LISP|::|PROCLAIM| '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-P|))
 (|COMMON-LISP|::|DEFUN| |CLM|::|VARINFO-P| (|SYSTEM|::|OBJECT|)
  (|SYSTEM|::|%STRUCTURE-TYPE-P| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT|))
 (|COMMON-LISP|::|PROCLAIM| '(|COMMON-LISP|::|INLINE| |CLM|::|COPY-VARINFO|))
 (|COMMON-LISP|::|DEFUN| |CLM|::|COPY-VARINFO| (|COMMON-LISP|::|STRUCTURE|)
  (|COMMON-LISP|::|COPY-STRUCTURE| |COMMON-LISP|::|STRUCTURE|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |CLM|::|VARINFO-NAME| (|CLM|::|VARINFO|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM| '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-NAME|))
 (|COMMON-LISP|::|DEFUN| |CLM|::|VARINFO-NAME| #59=(|SYSTEM|::|OBJECT|)
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 1.)))
 (|SYSTEM|::|%PUT| '|CLM|::|VARINFO-NAME| #60='|SYSTEM|::|DEFSTRUCT-READER|
  '|CLM|::|VARINFO|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |CLM|::|VARINFO-DEPTH| (|CLM|::|VARINFO|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM| '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-DEPTH|))
 (|COMMON-LISP|::|DEFUN| |CLM|::|VARINFO-DEPTH| #59#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 2.)))
 (|SYSTEM|::|%PUT| '|CLM|::|VARINFO-DEPTH| #60# '|CLM|::|VARINFO|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |CLM|::|VARINFO-MAX-DEPTH| (|CLM|::|VARINFO|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-MAX-DEPTH|))
 (|COMMON-LISP|::|DEFUN| |CLM|::|VARINFO-MAX-DEPTH| #59#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 3.)))
 (|SYSTEM|::|%PUT| '|CLM|::|VARINFO-MAX-DEPTH| #60# '|CLM|::|VARINFO|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |CLM|::|VARINFO-REFD| (|CLM|::|VARINFO|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM| '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-REFD|))
 (|COMMON-LISP|::|DEFUN| |CLM|::|VARINFO-REFD| #59#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 4.)))
 (|SYSTEM|::|%PUT| '|CLM|::|VARINFO-REFD| #60# '|CLM|::|VARINFO|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |CLM|::|VARINFO-PARALLEL| (|CLM|::|VARINFO|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-PARALLEL|))
 (|COMMON-LISP|::|DEFUN| |CLM|::|VARINFO-PARALLEL| #59#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 5.)))
 (|SYSTEM|::|%PUT| '|CLM|::|VARINFO-PARALLEL| #60# '|CLM|::|VARINFO|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |CLM|::|VARINFO-TYPE| (|CLM|::|VARINFO|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM| '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-TYPE|))
 (|COMMON-LISP|::|DEFUN| |CLM|::|VARINFO-TYPE| #59#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 6.)))
 (|SYSTEM|::|%PUT| '|CLM|::|VARINFO-TYPE| #60# '|CLM|::|VARINFO|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |CLM|::|VARINFO-ILOC| (|CLM|::|VARINFO|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM| '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-ILOC|))
 (|COMMON-LISP|::|DEFUN| |CLM|::|VARINFO-ILOC| #59#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 7.)))
 (|SYSTEM|::|%PUT| '|CLM|::|VARINFO-ILOC| #60# '|CLM|::|VARINFO|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |CLM|::|VARINFO-RLOC| (|CLM|::|VARINFO|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM| '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-RLOC|))
 (|COMMON-LISP|::|DEFUN| |CLM|::|VARINFO-RLOC| #59#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 8.)))
 (|SYSTEM|::|%PUT| '|CLM|::|VARINFO-RLOC| #60# '|CLM|::|VARINFO|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |CLM|::|VARINFO-INITIALIZE| (|CLM|::|VARINFO|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-INITIALIZE|))
 (|COMMON-LISP|::|DEFUN| |CLM|::|VARINFO-INITIALIZE| #59#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 9.)))
 (|SYSTEM|::|%PUT| '|CLM|::|VARINFO-INITIALIZE| #60# '|CLM|::|VARINFO|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |CLM|::|VARINFO-TEMP| (|CLM|::|VARINFO|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM| '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-TEMP|))
 (|COMMON-LISP|::|DEFUN| |CLM|::|VARINFO-TEMP| #59#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 10.)))
 (|SYSTEM|::|%PUT| '|CLM|::|VARINFO-TEMP| #60# '|CLM|::|VARINFO|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |CLM|::|VARINFO-SHADOWED| (|CLM|::|VARINFO|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-SHADOWED|))
 (|COMMON-LISP|::|DEFUN| |CLM|::|VARINFO-SHADOWED| #59#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 11.)))
 (|SYSTEM|::|%PUT| '|CLM|::|VARINFO-SHADOWED| #60# '|CLM|::|VARINFO|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |CLM|::|VARINFO-GEN-TYPE| (|CLM|::|VARINFO|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-GEN-TYPE|))
 (|COMMON-LISP|::|DEFUN| |CLM|::|VARINFO-GEN-TYPE| #59#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 12.)))
 (|SYSTEM|::|%PUT| '|CLM|::|VARINFO-GEN-TYPE| #60# '|CLM|::|VARINFO|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |CLM|::|VARINFO-ARR-GEN-TYPE| (|CLM|::|VARINFO|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-ARR-GEN-TYPE|))
 (|COMMON-LISP|::|DEFUN| |CLM|::|VARINFO-ARR-GEN-TYPE| #59#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 13.)))
 (|SYSTEM|::|%PUT| '|CLM|::|VARINFO-ARR-GEN-TYPE| #60# '|CLM|::|VARINFO|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |CLM|::|VARINFO-GLOBAL| (|CLM|::|VARINFO|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM| '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-GLOBAL|))
 (|COMMON-LISP|::|DEFUN| |CLM|::|VARINFO-GLOBAL| #59#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 14.)))
 (|SYSTEM|::|%PUT| '|CLM|::|VARINFO-GLOBAL| #60# '|CLM|::|VARINFO|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |CLM|::|VARINFO-CTR| (|CLM|::|VARINFO|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM| '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-CTR|))
 (|COMMON-LISP|::|DEFUN| |CLM|::|VARINFO-CTR| #59#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 15.)))
 (|SYSTEM|::|%PUT| '|CLM|::|VARINFO-CTR| #60# '|CLM|::|VARINFO|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |CLM|::|VARINFO-LOADED| (|CLM|::|VARINFO|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM| '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-LOADED|))
 (|COMMON-LISP|::|DEFUN| |CLM|::|VARINFO-LOADED| #59#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 16.)))
 (|SYSTEM|::|%PUT| '|CLM|::|VARINFO-LOADED| #60# '|CLM|::|VARINFO|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |CLM|::|VARINFO-REF-CHAIN| (|CLM|::|VARINFO|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-REF-CHAIN|))
 (|COMMON-LISP|::|DEFUN| |CLM|::|VARINFO-REF-CHAIN| #59#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 17.)))
 (|SYSTEM|::|%PUT| '|CLM|::|VARINFO-REF-CHAIN| #60# '|CLM|::|VARINFO|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-NAME|)
    (|COMMON-LISP|::|T| |CLM|::|VARINFO|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-NAME|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-NAME|)
  #61=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|)
  (|SYSTEM|::|%STRUCTURE-STORE| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 1.
   |SYSTEM|::|VALUE|))
 (|SYSTEM|::|%PUT| '|CLM|::|VARINFO-NAME| #62='|SYSTEM|::|DEFSTRUCT-WRITER|
  '|CLM|::|VARINFO|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-DEPTH|)
    (|COMMON-LISP|::|T| |CLM|::|VARINFO|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-DEPTH|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-DEPTH|) #61#
  (|SYSTEM|::|%STRUCTURE-STORE| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 2.
   |SYSTEM|::|VALUE|))
 (|SYSTEM|::|%PUT| '|CLM|::|VARINFO-DEPTH| #62# '|CLM|::|VARINFO|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION|
    (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-MAX-DEPTH|)
    (|COMMON-LISP|::|T| |CLM|::|VARINFO|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE|
    (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-MAX-DEPTH|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-MAX-DEPTH|)
  #61#
  (|SYSTEM|::|%STRUCTURE-STORE| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 3.
   |SYSTEM|::|VALUE|))
 (|SYSTEM|::|%PUT| '|CLM|::|VARINFO-MAX-DEPTH| #62# '|CLM|::|VARINFO|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-REFD|)
    (|COMMON-LISP|::|T| |CLM|::|VARINFO|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-REFD|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-REFD|) #61#
  (|SYSTEM|::|%STRUCTURE-STORE| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 4.
   |SYSTEM|::|VALUE|))
 (|SYSTEM|::|%PUT| '|CLM|::|VARINFO-REFD| #62# '|CLM|::|VARINFO|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-PARALLEL|)
    (|COMMON-LISP|::|T| |CLM|::|VARINFO|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-PARALLEL|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-PARALLEL|) #61#
  (|SYSTEM|::|%STRUCTURE-STORE| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 5.
   |SYSTEM|::|VALUE|))
 (|SYSTEM|::|%PUT| '|CLM|::|VARINFO-PARALLEL| #62# '|CLM|::|VARINFO|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-TYPE|)
    (|COMMON-LISP|::|T| |CLM|::|VARINFO|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-TYPE|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-TYPE|) #61#
  (|SYSTEM|::|%STRUCTURE-STORE| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 6.
   |SYSTEM|::|VALUE|))
 (|SYSTEM|::|%PUT| '|CLM|::|VARINFO-TYPE| #62# '|CLM|::|VARINFO|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-ILOC|)
    (|COMMON-LISP|::|T| |CLM|::|VARINFO|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-ILOC|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-ILOC|) #61#
  (|SYSTEM|::|%STRUCTURE-STORE| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 7.
   |SYSTEM|::|VALUE|))
 (|SYSTEM|::|%PUT| '|CLM|::|VARINFO-ILOC| #62# '|CLM|::|VARINFO|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-RLOC|)
    (|COMMON-LISP|::|T| |CLM|::|VARINFO|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-RLOC|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-RLOC|) #61#
  (|SYSTEM|::|%STRUCTURE-STORE| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 8.
   |SYSTEM|::|VALUE|))
 (|SYSTEM|::|%PUT| '|CLM|::|VARINFO-RLOC| #62# '|CLM|::|VARINFO|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION|
    (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-INITIALIZE|)
    (|COMMON-LISP|::|T| |CLM|::|VARINFO|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE|
    (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-INITIALIZE|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-INITIALIZE|)
  #61#
  (|SYSTEM|::|%STRUCTURE-STORE| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 9.
   |SYSTEM|::|VALUE|))
 (|SYSTEM|::|%PUT| '|CLM|::|VARINFO-INITIALIZE| #62# '|CLM|::|VARINFO|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-TEMP|)
    (|COMMON-LISP|::|T| |CLM|::|VARINFO|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-TEMP|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-TEMP|) #61#
  (|SYSTEM|::|%STRUCTURE-STORE| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 10.
   |SYSTEM|::|VALUE|))
 (|SYSTEM|::|%PUT| '|CLM|::|VARINFO-TEMP| #62# '|CLM|::|VARINFO|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-SHADOWED|)
    (|COMMON-LISP|::|T| |CLM|::|VARINFO|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-SHADOWED|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-SHADOWED|) #61#
  (|SYSTEM|::|%STRUCTURE-STORE| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 11.
   |SYSTEM|::|VALUE|))
 (|SYSTEM|::|%PUT| '|CLM|::|VARINFO-SHADOWED| #62# '|CLM|::|VARINFO|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-GEN-TYPE|)
    (|COMMON-LISP|::|T| |CLM|::|VARINFO|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-GEN-TYPE|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-GEN-TYPE|) #61#
  (|SYSTEM|::|%STRUCTURE-STORE| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 12.
   |SYSTEM|::|VALUE|))
 (|SYSTEM|::|%PUT| '|CLM|::|VARINFO-GEN-TYPE| #62# '|CLM|::|VARINFO|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION|
    (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-ARR-GEN-TYPE|)
    (|COMMON-LISP|::|T| |CLM|::|VARINFO|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE|
    (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-ARR-GEN-TYPE|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-ARR-GEN-TYPE|)
  #61#
  (|SYSTEM|::|%STRUCTURE-STORE| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 13.
   |SYSTEM|::|VALUE|))
 (|SYSTEM|::|%PUT| '|CLM|::|VARINFO-ARR-GEN-TYPE| #62# '|CLM|::|VARINFO|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-GLOBAL|)
    (|COMMON-LISP|::|T| |CLM|::|VARINFO|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-GLOBAL|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-GLOBAL|) #61#
  (|SYSTEM|::|%STRUCTURE-STORE| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 14.
   |SYSTEM|::|VALUE|))
 (|SYSTEM|::|%PUT| '|CLM|::|VARINFO-GLOBAL| #62# '|CLM|::|VARINFO|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-CTR|)
    (|COMMON-LISP|::|T| |CLM|::|VARINFO|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-CTR|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-CTR|) #61#
  (|SYSTEM|::|%STRUCTURE-STORE| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 15.
   |SYSTEM|::|VALUE|))
 (|SYSTEM|::|%PUT| '|CLM|::|VARINFO-CTR| #62# '|CLM|::|VARINFO|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-LOADED|)
    (|COMMON-LISP|::|T| |CLM|::|VARINFO|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-LOADED|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-LOADED|) #61#
  (|SYSTEM|::|%STRUCTURE-STORE| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 16.
   |SYSTEM|::|VALUE|))
 (|SYSTEM|::|%PUT| '|CLM|::|VARINFO-LOADED| #62# '|CLM|::|VARINFO|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION|
    (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-REF-CHAIN|)
    (|COMMON-LISP|::|T| |CLM|::|VARINFO|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE|
    (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-REF-CHAIN|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-REF-CHAIN|)
  #61#
  (|SYSTEM|::|%STRUCTURE-STORE| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 17.
   |SYSTEM|::|VALUE|))
 (|SYSTEM|::|%PUT| '|CLM|::|VARINFO-REF-CHAIN| #62# '|CLM|::|VARINFO|)
 (|CLOS|::|DEFSTRUCT-REMOVE-PRINT-OBJECT-METHOD| '|CLM|::|VARINFO|)
 '|CLM|::|VARINFO|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|MAKE-VARINFO|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&KEY| (#:|NAME| |COMMON-LISP|::|NIL|) (#:|DEPTH| 0.)
    (#:|MAX-DEPTH| 1.) (#:|REFD| |COMMON-LISP|::|NIL|)
    (#:|PARALLEL| |COMMON-LISP|::|NIL|) (#:|TYPE| |COMMON-LISP|::|NIL|)
    (#:|ILOC| |COMMON-LISP|::|NIL|) (#:|RLOC| |COMMON-LISP|::|NIL|)
    (#:|INITIALIZE| |COMMON-LISP|::|NIL|) (#:|TEMP| |COMMON-LISP|::|NIL|)
    (#:|SHADOWED| |COMMON-LISP|::|NIL|) (#:|GEN-TYPE| |COMMON-LISP|::|NIL|)
    (#:|ARR-GEN-TYPE| |COMMON-LISP|::|NIL|) (#:|GLOBAL| |COMMON-LISP|::|NIL|)
    (#:|CTR| |COMMON-LISP|::|NIL|) (#:|LOADED| |COMMON-LISP|::|NIL|)
    (#:|REF-CHAIN| |COMMON-LISP|::|NIL|))))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-P|))
(|SYSTEM|::|C-DEFUN| '|CLM|::|VARINFO-P|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |CLM|::|VARINFO-P|))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-P|
    (|SYSTEM|::|%STRUCTURE-TYPE-P| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT|))))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |CLM|::|COPY-VARINFO|))
(|SYSTEM|::|C-DEFUN| '|CLM|::|COPY-VARINFO|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|COMMON-LISP|::|STRUCTURE|))
 '(#1# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |CLM|::|COPY-VARINFO|))
   (|COMMON-LISP|::|BLOCK| |CLM|::|COPY-VARINFO|
    (|COMMON-LISP|::|COPY-STRUCTURE| |COMMON-LISP|::|STRUCTURE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |CLM|::|VARINFO-NAME| (|CLM|::|VARINFO|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-NAME|))
(|SYSTEM|::|C-DEFUN| '|CLM|::|VARINFO-NAME|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |CLM|::|VARINFO-NAME|))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-NAME|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 1.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |CLM|::|VARINFO-DEPTH| (|CLM|::|VARINFO|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-DEPTH|))
(|SYSTEM|::|C-DEFUN| '|CLM|::|VARINFO-DEPTH|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |CLM|::|VARINFO-DEPTH|))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-DEPTH|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 2.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |CLM|::|VARINFO-MAX-DEPTH| (|CLM|::|VARINFO|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-MAX-DEPTH|))
(|SYSTEM|::|C-DEFUN| '|CLM|::|VARINFO-MAX-DEPTH|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |CLM|::|VARINFO-MAX-DEPTH|))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-MAX-DEPTH|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 3.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |CLM|::|VARINFO-REFD| (|CLM|::|VARINFO|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-REFD|))
(|SYSTEM|::|C-DEFUN| '|CLM|::|VARINFO-REFD|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |CLM|::|VARINFO-REFD|))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-REFD|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 4.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |CLM|::|VARINFO-PARALLEL| (|CLM|::|VARINFO|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-PARALLEL|))
(|SYSTEM|::|C-DEFUN| '|CLM|::|VARINFO-PARALLEL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |CLM|::|VARINFO-PARALLEL|))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-PARALLEL|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 5.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |CLM|::|VARINFO-TYPE| (|CLM|::|VARINFO|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-TYPE|))
(|SYSTEM|::|C-DEFUN| '|CLM|::|VARINFO-TYPE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |CLM|::|VARINFO-TYPE|))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-TYPE|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 6.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |CLM|::|VARINFO-ILOC| (|CLM|::|VARINFO|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-ILOC|))
(|SYSTEM|::|C-DEFUN| '|CLM|::|VARINFO-ILOC|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |CLM|::|VARINFO-ILOC|))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-ILOC|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 7.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |CLM|::|VARINFO-RLOC| (|CLM|::|VARINFO|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-RLOC|))
(|SYSTEM|::|C-DEFUN| '|CLM|::|VARINFO-RLOC|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |CLM|::|VARINFO-RLOC|))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-RLOC|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 8.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |CLM|::|VARINFO-INITIALIZE| (|CLM|::|VARINFO|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-INITIALIZE|))
(|SYSTEM|::|C-DEFUN| '|CLM|::|VARINFO-INITIALIZE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE|
    (|SYSTEM|::|IN-DEFUN| |CLM|::|VARINFO-INITIALIZE|))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-INITIALIZE|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 9.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |CLM|::|VARINFO-TEMP| (|CLM|::|VARINFO|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-TEMP|))
(|SYSTEM|::|C-DEFUN| '|CLM|::|VARINFO-TEMP|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |CLM|::|VARINFO-TEMP|))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-TEMP|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 10.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |CLM|::|VARINFO-SHADOWED| (|CLM|::|VARINFO|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-SHADOWED|))
(|SYSTEM|::|C-DEFUN| '|CLM|::|VARINFO-SHADOWED|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |CLM|::|VARINFO-SHADOWED|))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-SHADOWED|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 11.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |CLM|::|VARINFO-GEN-TYPE| (|CLM|::|VARINFO|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-GEN-TYPE|))
(|SYSTEM|::|C-DEFUN| '|CLM|::|VARINFO-GEN-TYPE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |CLM|::|VARINFO-GEN-TYPE|))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-GEN-TYPE|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 12.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |CLM|::|VARINFO-ARR-GEN-TYPE| (|CLM|::|VARINFO|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-ARR-GEN-TYPE|))
(|SYSTEM|::|C-DEFUN| '|CLM|::|VARINFO-ARR-GEN-TYPE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE|
    (|SYSTEM|::|IN-DEFUN| |CLM|::|VARINFO-ARR-GEN-TYPE|))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-ARR-GEN-TYPE|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 13.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |CLM|::|VARINFO-GLOBAL| (|CLM|::|VARINFO|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-GLOBAL|))
(|SYSTEM|::|C-DEFUN| '|CLM|::|VARINFO-GLOBAL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |CLM|::|VARINFO-GLOBAL|))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-GLOBAL|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 14.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |CLM|::|VARINFO-CTR| (|CLM|::|VARINFO|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-CTR|))
(|SYSTEM|::|C-DEFUN| '|CLM|::|VARINFO-CTR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |CLM|::|VARINFO-CTR|))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-CTR|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 15.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |CLM|::|VARINFO-LOADED| (|CLM|::|VARINFO|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-LOADED|))
(|SYSTEM|::|C-DEFUN| '|CLM|::|VARINFO-LOADED|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |CLM|::|VARINFO-LOADED|))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-LOADED|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 16.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |CLM|::|VARINFO-REF-CHAIN| (|CLM|::|VARINFO|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |CLM|::|VARINFO-REF-CHAIN|))
(|SYSTEM|::|C-DEFUN| '|CLM|::|VARINFO-REF-CHAIN|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |CLM|::|VARINFO-REF-CHAIN|))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-REF-CHAIN|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|SYSTEM|::|%STRUCTURE-REF| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 17.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-NAME|)
   (|COMMON-LISP|::|T| |CLM|::|VARINFO|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-NAME|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |CLM|::|VARINFO-NAME|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-NAME|
    (|SYSTEM|::|%STRUCTURE-STORE| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 1.
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-DEPTH|)
   (|COMMON-LISP|::|T| |CLM|::|VARINFO|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-DEPTH|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |CLM|::|VARINFO-DEPTH|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-DEPTH|
    (|SYSTEM|::|%STRUCTURE-STORE| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 2.
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-MAX-DEPTH|)
   (|COMMON-LISP|::|T| |CLM|::|VARINFO|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-MAX-DEPTH|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |CLM|::|VARINFO-MAX-DEPTH|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-MAX-DEPTH|
    (|SYSTEM|::|%STRUCTURE-STORE| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 3.
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-REFD|)
   (|COMMON-LISP|::|T| |CLM|::|VARINFO|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-REFD|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |CLM|::|VARINFO-REFD|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-REFD|
    (|SYSTEM|::|%STRUCTURE-STORE| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 4.
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-PARALLEL|)
   (|COMMON-LISP|::|T| |CLM|::|VARINFO|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-PARALLEL|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |CLM|::|VARINFO-PARALLEL|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-PARALLEL|
    (|SYSTEM|::|%STRUCTURE-STORE| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 5.
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-TYPE|)
   (|COMMON-LISP|::|T| |CLM|::|VARINFO|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-TYPE|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |CLM|::|VARINFO-TYPE|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-TYPE|
    (|SYSTEM|::|%STRUCTURE-STORE| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 6.
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-ILOC|)
   (|COMMON-LISP|::|T| |CLM|::|VARINFO|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-ILOC|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |CLM|::|VARINFO-ILOC|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-ILOC|
    (|SYSTEM|::|%STRUCTURE-STORE| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 7.
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-RLOC|)
   (|COMMON-LISP|::|T| |CLM|::|VARINFO|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-RLOC|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |CLM|::|VARINFO-RLOC|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-RLOC|
    (|SYSTEM|::|%STRUCTURE-STORE| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 8.
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION|
   (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-INITIALIZE|)
   (|COMMON-LISP|::|T| |CLM|::|VARINFO|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE|
   (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-INITIALIZE|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |CLM|::|VARINFO-INITIALIZE|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-INITIALIZE|
    (|SYSTEM|::|%STRUCTURE-STORE| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 9.
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-TEMP|)
   (|COMMON-LISP|::|T| |CLM|::|VARINFO|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-TEMP|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |CLM|::|VARINFO-TEMP|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-TEMP|
    (|SYSTEM|::|%STRUCTURE-STORE| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 10.
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-SHADOWED|)
   (|COMMON-LISP|::|T| |CLM|::|VARINFO|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-SHADOWED|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |CLM|::|VARINFO-SHADOWED|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-SHADOWED|
    (|SYSTEM|::|%STRUCTURE-STORE| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 11.
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-GEN-TYPE|)
   (|COMMON-LISP|::|T| |CLM|::|VARINFO|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-GEN-TYPE|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |CLM|::|VARINFO-GEN-TYPE|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-GEN-TYPE|
    (|SYSTEM|::|%STRUCTURE-STORE| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 12.
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION|
   (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-ARR-GEN-TYPE|)
   (|COMMON-LISP|::|T| |CLM|::|VARINFO|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE|
   (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-ARR-GEN-TYPE|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |CLM|::|VARINFO-ARR-GEN-TYPE|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-ARR-GEN-TYPE|
    (|SYSTEM|::|%STRUCTURE-STORE| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 13.
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-GLOBAL|)
   (|COMMON-LISP|::|T| |CLM|::|VARINFO|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-GLOBAL|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |CLM|::|VARINFO-GLOBAL|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-GLOBAL|
    (|SYSTEM|::|%STRUCTURE-STORE| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 14.
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-CTR|)
   (|COMMON-LISP|::|T| |CLM|::|VARINFO|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-CTR|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |CLM|::|VARINFO-CTR|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-CTR|
    (|SYSTEM|::|%STRUCTURE-STORE| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 15.
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-LOADED|)
   (|COMMON-LISP|::|T| |CLM|::|VARINFO|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-LOADED|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |CLM|::|VARINFO-LOADED|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-LOADED|
    (|SYSTEM|::|%STRUCTURE-STORE| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 16.
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-REF-CHAIN|)
   (|COMMON-LISP|::|T| |CLM|::|VARINFO|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |CLM|::|VARINFO-REF-CHAIN|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |CLM|::|VARINFO-REF-CHAIN|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |CLM|::|VARINFO-REF-CHAIN|
    (|SYSTEM|::|%STRUCTURE-STORE| '|CLM|::|VARINFO| |SYSTEM|::|OBJECT| 17.
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-DEFUN| '|CLM|::|CLM-FUNCTION|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|X|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|DEF-CLM-FUN|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|X| |CLM|::|Y|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|RUN|)
(|SYSTEM|::|%PUTD| '|CLM|::|RUN|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|RUN|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RUN-TIME-CODE|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|RUN|
       `(|COMMON-LISP|::|MACROEXPAND-1|
         (|CLM|::|RUN-1| ,|CLM|::|RUN-TIME-CODE|)))))))
  '(|CLM|::|RUN-TIME-CODE|)))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |CLM|::|OUTER-ENVIRONMENT|))
(|SYSTEM|::|C-DEFUN| '|CLM|::|MAKE-VAR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|VAR| |COMMON-LISP|::|&OPTIONAL| |COMMON-LISP|::|TYPE|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|MAKE-USER-VAR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|VAR| |COMMON-LISP|::|&OPTIONAL| |COMMON-LISP|::|TYPE|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|MAKE-LOCAL-VAR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|VAR| |COMMON-LISP|::|&OPTIONAL| |CLM|::|PARALLEL|
    |COMMON-LISP|::|TYPE|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|CURRENT-VAR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|VAR| |COMMON-LISP|::|&OPTIONAL| |CLM|::|DO-INIT|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|PROVISIONAL-VAR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|VAR|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|CHAINED-VAR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|VAR| |CLM|::|REF|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|MAKE-COMPILER-TEMP|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&OPTIONAL| |COMMON-LISP|::|TYPE|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|NEW-LABEL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&OPTIONAL| |CLM|::|NAME|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|RUN-1|)
(|SYSTEM|::|%PUTD| '|CLM|::|RUN-1|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|RUN-1|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |CLM|::|ENV|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RUN-TIME-CODE|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|RUN-1|
       (|COMMON-LISP|::|SETF| |CLM|::|NEW-PROG| |COMMON-LISP|::|NIL|
        |CLM|::|UNHAPPY| |COMMON-LISP|::|NIL| |CLM|::|LOOP-BEG|
        |COMMON-LISP|::|NIL| |CLM|::|LOOP-END| |COMMON-LISP|::|NIL|
        |CLM|::|LOOP-VAR| |COMMON-LISP|::|NIL| |CLM|::|LOOP-LABEL-STACK|
        |COMMON-LISP|::|NIL| |CLM|::|VARS| |COMMON-LISP|::|NIL|
        |CLM|::|FUNCTION-CTR| 0. |CLM|::|LAMBDA-ARGS| |COMMON-LISP|::|NIL|
        |CLM|::|RETURN-STACK| |COMMON-LISP|::|NIL| |CLM|::|*SAFETY*|
        |CLM|::|*CLM-SAFETY*| |CLM|::|*DEBUG*| |CLM|::|*CLM-DEBUG*|
        |CLM|::|*GEN-TYPE*| |COMMON-LISP|::|NIL| |CLM|::|*AS-NEEDED*|
        |COMMON-LISP|::|NIL| |CLM|::|*GLOBAL*| |COMMON-LISP|::|NIL|
        |CLM|::|*AS-NEEDED-FUNCTIONS*| |COMMON-LISP|::|NIL|
        |CLM|::|*AS-NEEDED-FUNCTION-TYPES*| |COMMON-LISP|::|NIL|
        |CLM|::|OUTER-ENVIRONMENT| |CLM|::|ENV|)
       (|CLM|::|WF| |CLM|::|RUN-TIME-CODE|)
       (|COMMON-LISP|::|IF| |CLM|::|*CLM-DEBUG*|
        (|COMMON-LISP|::|PROGN|
         (|COMMON-LISP|::|PPRINT|
          (|COMMON-LISP|::|APPEND|
           (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|PROGN|)
           (|COMMON-LISP|::|REVERSE| |CLM|::|NEW-PROG|)))
         (|COMMON-LISP|::|TERPRI|) (|CLM|::|PRINT-HASH| |CLM|::|VARS|)
         (|COMMON-LISP|::|TERPRI|)
         (|COMMON-LISP|::|PPRINT|
          (|COMMON-LISP|::|APPEND|
           (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|PROGN|)
           (|COMMON-LISP|::|REVERSE| |CLM|::|*AS-NEEDED-FUNCTIONS*|)))))
       (|COMMON-LISP|::|IF| |CLM|::|UNHAPPY| |CLM|::|RUN-TIME-CODE|
        `(|COMMON-LISP|::|PROGN| (|CLM|::|<START>| ,|CLM|::|LOOP-END|)
          ,@(|COMMON-LISP|::|NREVERSE| |CLM|::|NEW-PROG|) (|CLM|::|<END-1>|)
          ,@(|COMMON-LISP|::|OR|
             (|COMMON-LISP|::|NREVERSE| |CLM|::|*AS-NEEDED-FUNCTIONS*|)
             '|COMMON-LISP|::|NIL|)
          (|CLM|::|<END-2>| ,(|COMMON-LISP|::|OR| |CLM|::|LOOP-BEG| 0.)
           ,(|COMMON-LISP|::|OR| |CLM|::|LOOP-END| 0.)
           ,|CLM|::|LOOP-END|))))))))
  '(|CLM|::|RUN-TIME-CODE| |COMMON-LISP|::|&ENVIRONMENT| |CLM|::|ENV|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GIVE-UP|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|X|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|ARITH-TYPE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|ARGS| |COMMON-LISP|::|&OPTIONAL|
    (|CLM|::|RESTYP| :|CLM-INTEGER|))))
(|SYSTEM|::|C-DEFUN| '|CLM|::|PACKAGE-OP|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|CLM-NAME| |CLM|::|VAR| |CLM|::|X| |COMMON-LISP|::|&OPTIONAL|
    |CLM|::|TYPE-FUNC| |CLM|::|SPEC| |CLM|::|PROVISIONAL-RESULT|
    |CLM|::|ARG-FUNC|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|SET-GEN-TYPE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|GEN| |CLM|::|GEN-TYPE|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-PACKAGE-OP|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|CLM-NAME| |CLM|::|VAR| |CLM|::|X| |COMMON-LISP|::|&OPTIONAL|
    |CLM|::|TYPE-FUNC| |CLM|::|GEN-TYPE| |CLM|::|ARG-FUNC|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN2-PACKAGE-OP|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|CLM-NAME| |CLM|::|VAR| |CLM|::|X| |COMMON-LISP|::|&OPTIONAL|
    |CLM|::|TYPE-FUNC| |CLM|::|GEN-TYPE| |CLM|::|GEN2-TYPE|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|BANK-PACKAGE-OP|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|CLM-NAME| |CLM|::|VAR| |CLM|::|X| |COMMON-LISP|::|&OPTIONAL|
    |CLM|::|TYPE-FUNC| |CLM|::|GEN-TYPE|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|FIND-LOOP-CONTROL-INFO|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|VAR| |CLM|::|X|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|LISP->C|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|X| |CLM|::|Y| |CLM|::|ENV|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|RETURN-BRANCH|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|VAR| |CLM|::|X|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|RETURN-FROM-BRANCH|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|VAR| |CLM|::|X|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|BLOCK-BRANCH|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|VAR| |CLM|::|X|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|TAGBODY-BRANCH|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|VAR| |CLM|::|X|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|IF-BRANCH|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|VAR| |CLM|::|X|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|COND-BRANCH|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|VAR| |CLM|::|X|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|CASE-BRANCH|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|VAR| |CLM|::|X|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|DOTIMES-BRANCH|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|VAR| |CLM|::|X|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|DO-BRANCH|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|VAR| |CLM|::|X| |CLM|::|STARRED|)))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |CLM|::|SETF-FUNCTIONS|))
(|SYSTEM|::|C-DEFUN| '|CLM|::|SETF-BRANCH|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|VAR| |CLM|::|X| |COMMON-LISP|::|&OPTIONAL|
    (|CLM|::|SET-TYPE| |CLM|::|+SETF+|))))
(|SYSTEM|::|C-DEFUN| '|CLM|::|AREF-BRANCH|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|VAR| |CLM|::|X|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|LET-BRANCH|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|VAR| |CLM|::|X| |CLM|::|STARRED|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|LAMBDA-BRANCH|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|VAR| |CLM|::|X|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|MARK-AS-STRING|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|VAL| |CLM|::|NUM|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|MARK-AS-FRAMPLE2FRAMPLE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|VAL| |CLM|::|NUM|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|MARK-ARG2-AS-INTEGER|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|VAL| |CLM|::|NUM|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|MARK-ARG1-AS-INTEGER|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|VAL| |CLM|::|NUM|)))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |CLM|::|FUNCTION-TYPE|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |CLM|::|ARG-FUNCS|))
(|SYSTEM|::|C-DEFUN| '|CLM|::|SUBMAC|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|NAME| |CLM|::|BODY| |CLM|::|CODE|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|TO-BIGNUM|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|NUM| |CLM|::|ARR| |CLM|::|LOC|)))
(|SYSTEM|::|C-PROCLAIM-CONSTANT| '|CLM|::|+AREF-TYPE+| '0.)
(|SYSTEM|::|C-PROCLAIM-CONSTANT| '|CLM|::|+AREF-IBLOCK+| '1.)
(|SYSTEM|::|C-PROCLAIM-CONSTANT| '|CLM|::|+AREF-RBLOCK+| '2.)
(|SYSTEM|::|C-PROCLAIM-CONSTANT| '|CLM|::|+AREF-SIZE+| '3.)
(|SYSTEM|::|C-PROCLAIM-CONSTANT| '|CLM|::|+AREF-DIMS+| '4.)
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |CLM|::|*C-FILE*|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |CLM|::|VARIABLE-NAME|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |CLM|::|C-NAMES|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |CLM|::|OK-CHARS|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |CLM|::|OK-NUMBERS|))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE-1|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|TYPE-OR-LIST| |COMMON-LISP|::|STREAM| |CLM|::|RESULT| |CLM|::|ILOC|
    |CLM|::|INDENT| |CLM|::|CTR|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT-1|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|TYPE-OR-LIST| |CLM|::|KEY| |CLM|::|VAL|)))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |CLM|::|EMPTY-NAME-CTR|))
(|SYSTEM|::|C-DEFUN| '|CLM|::|LISP->C-NAME|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|N|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|LC|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|N|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|LC2|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|N|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|LC-NUM-REF|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|N| |COMMON-LISP|::|&OPTIONAL| |COMMON-LISP|::|TYPE|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|SETF-TYPE->C-OP|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|SETF-TYPE|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|SETF-TYPE->LISP-OP|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|SETF-TYPE|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|SETF-OP|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|VAR| |CLM|::|VAL|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|POINTER-VAR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|VAR|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|LC-SET|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|SETF-TYPE| |CLM|::|VAR| |CLM|::|VAL| |COMMON-LISP|::|&OPTIONAL|
    |CLM|::|VAL-TYPE|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|LC-TYPE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|N|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|CLEAN-ARG|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<LOOP-FINISH>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<LOOP-FINISH>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<LOOP-FINISH>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 1. 1.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*| |COMMON-LISP|::|NIL|
      (|COMMON-LISP|::|BLOCK| |CLM|::|<LOOP-FINISH>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  goto RUN_ALL_DONE;~%")
       |COMMON-LISP|::|NIL|)))))
  '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<SETF>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<SETF>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<SETF>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|SETF-TYPE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|RESULT| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CLM|::|RESTYPE| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<SETF>|
       (|COMMON-LISP|::|LET|
        ((|CLM|::|DAT|
          (|COMMON-LISP|::|GETHASH| (|COMMON-LISP|::|SECOND| |CLM|::|RESULT|)
           |CLM|::|VARS|)))
        (|COMMON-LISP|::|IF| (|CLM|::|VARINFO-REFD| |CLM|::|DAT|)
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  ~A~80,1T/* (~A ~A ~A) */~%"
          (|CLM|::|LC-SET| |CLM|::|SETF-TYPE| |CLM|::|RESULT| |CLM|::|ARG|
           |CLM|::|RESTYPE|)
          (|COMMON-LISP|::|IF|
           (|COMMON-LISP|::|=| |CLM|::|SETF-TYPE| |CLM|::|+SETF+|) "setf"
           (|COMMON-LISP|::|IF|
            (|COMMON-LISP|::|=| |CLM|::|SETF-TYPE| |CLM|::|+INCF+|) "incf"
            "decf"))
          (|CLM|::|CLEAN-ARG| |CLM|::|RESULT|)
          (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|SETF-TYPE| |CLM|::|RESULT| |CLM|::|ARG| |COMMON-LISP|::|&OPTIONAL|
    |CLM|::|RESTYPE|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|LC-CHECK-TYPE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|RES| |CLM|::|ARG| |CLM|::|RUN-TYPE| |CLM|::|NAME|
    |COMMON-LISP|::|&OPTIONAL| |CLM|::|CONSF| |CLM|::|VARF|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<INTEGER?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<INTEGER?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<INTEGER?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<INTEGER?>|
       (|CLM|::|LC-CHECK-TYPE| |CLM|::|RES| |CLM|::|ARG| |CLM|::|+INTEGER+|
        "integer?"
        #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|ARG|)
           (|COMMON-LISP|::|IF|
            (|COMMON-LISP|::|AND| |CLM|::|ARG|
             (|COMMON-LISP|::|INTEGERP| |CLM|::|ARG|))
            "true" "false"))
        #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|TYP|)
           (|COMMON-LISP|::|IF|
            (|COMMON-LISP|::|MEMBER| |CLM|::|TYP| '(:|CLM-INTEGER| :|INTEGER|))
            "true" "false")))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<BIGNUM?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<BIGNUM?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<BIGNUM?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<BIGNUM?>|
       (|CLM|::|LC-CHECK-TYPE| |CLM|::|RES| |CLM|::|ARG| |CLM|::|+INTEGER+|
        "bignum?"
        #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|ARG|)
           (|COMMON-LISP|::|IF|
            (|COMMON-LISP|::|AND| |CLM|::|ARG|
             (|COMMON-LISP|::|INTEGERP| |CLM|::|ARG|))
            "true" "false"))
        #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|TYP|)
           (|COMMON-LISP|::|IF|
            (|COMMON-LISP|::|MEMBER| |CLM|::|TYP|
             '(:|CLM-INTEGER| :|INTEGER| :|BIGNUM|))
            "true" "false")))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<FLOAT?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<FLOAT?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<FLOAT?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<FLOAT?>|
       (|CLM|::|LC-CHECK-TYPE| |CLM|::|RES| |CLM|::|ARG| |CLM|::|+REAL+|
        "float?"
        #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|ARG|)
           (|COMMON-LISP|::|IF|
            (|COMMON-LISP|::|AND| |CLM|::|ARG|
             (|COMMON-LISP|::|NUMBERP| |CLM|::|ARG|)
             (|COMMON-LISP|::|NOT| (|COMMON-LISP|::|INTEGERP| |CLM|::|ARG|)))
            "true" "false"))
        #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|TYP|)
           (|COMMON-LISP|::|IF|
            (|COMMON-LISP|::|MEMBER| |CLM|::|TYP| '(:|CLM-REAL| :|REAL|))
            "true" "false")))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<NUMBER?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<NUMBER?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<NUMBER?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<NUMBER?>|
       (|CLM|::|LC-CHECK-TYPE| |CLM|::|RES| |CLM|::|ARG|
        (|COMMON-LISP|::|LIST| |CLM|::|+REAL+| |CLM|::|+INTEGER+|) "number?"
        #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|ARG|)
           (|COMMON-LISP|::|IF|
            (|COMMON-LISP|::|AND| |CLM|::|ARG|
             (|COMMON-LISP|::|NUMBERP| |CLM|::|ARG|))
            "true" "false"))
        #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|TYP|)
           (|COMMON-LISP|::|IF|
            (|COMMON-LISP|::|AND| |CLM|::|TYP|
             (|COMMON-LISP|::|NOT|
              (|COMMON-LISP|::|EQ| |CLM|::|TYP| :|CLM-BOOLEAN|)))
            "true" "false")))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<EQ>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<EQ>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<EQ>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG1| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|ARG2| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<EQ>|
       (|COMMON-LISP|::|LET|
        ((|CLM|::|ARG1DAT| |COMMON-LISP|::|NIL|)
         (|CLM|::|ARG2DAT| |COMMON-LISP|::|NIL|)
         (|CLM|::|POSSIBLE-EQ| |COMMON-LISP|::|NIL|))
        (|COMMON-LISP|::|WHEN|
         (|COMMON-LISP|::|AND| |CLM|::|ARG1| |CLM|::|ARG2|
          (|COMMON-LISP|::|LISTP| |CLM|::|ARG1|)
          (|COMMON-LISP|::|LISTP| |CLM|::|ARG2|)
          (|COMMON-LISP|::|EQ| (|COMMON-LISP|::|CAR| |CLM|::|ARG1|) :|VAR|)
          (|COMMON-LISP|::|EQ| (|COMMON-LISP|::|CAR| |CLM|::|ARG2|) :|VAR|))
         (|COMMON-LISP|::|SETF| |CLM|::|ARG1DAT|
          (|COMMON-LISP|::|GETHASH| (|COMMON-LISP|::|SECOND| |CLM|::|ARG1|)
           |CLM|::|VARS|))
         (|COMMON-LISP|::|SETF| |CLM|::|ARG2DAT|
          (|COMMON-LISP|::|GETHASH| (|COMMON-LISP|::|SECOND| |CLM|::|ARG2|)
           |CLM|::|VARS|))
         (|COMMON-LISP|::|SETF| |CLM|::|POSSIBLE-EQ|
          (|COMMON-LISP|::|AND|
           (|COMMON-LISP|::|NULL| (|CLM|::|VARINFO-TYPE| |CLM|::|ARG1DAT|))
           (|COMMON-LISP|::|NULL| (|CLM|::|VARINFO-TYPE| |CLM|::|ARG2DAT|)))))
        (|COMMON-LISP|::|IF| |CLM|::|POSSIBLE-EQ|
         (|COMMON-LISP|::|LET|
          ((|CLM|::|CNAME1| (|CLM|::|LC2| |CLM|::|ARG1|))
           (|CLM|::|CNAME2| (|CLM|::|LC2| |CLM|::|ARG2|))
           (|CLM|::|DEPTH1|
            (|COMMON-LISP|::|*| 2. (|COMMON-LISP|::|THIRD| |CLM|::|ARG1|)))
           (|CLM|::|DEPTH2|
            (|COMMON-LISP|::|*| 2. (|COMMON-LISP|::|THIRD| |CLM|::|ARG2|))))
          (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
           "  ~A = ((clm_int[~A + ~D] == clm_int[~A + ~D]) && (clm_int[~A + ~D + 1] == clm_int[~A + ~D + 1]));~80,1T/* (eq ~A ~A) */~%"
           (|CLM|::|LC2| |CLM|::|RES|) |CLM|::|CNAME1| |CLM|::|DEPTH1|
           |CLM|::|CNAME2| |CLM|::|DEPTH2| |CLM|::|CNAME1| |CLM|::|DEPTH1|
           |CLM|::|CNAME2| |CLM|::|DEPTH2|
           (|COMMON-LISP|::|SECOND| |CLM|::|ARG1|)
           (|COMMON-LISP|::|SECOND| |CLM|::|ARG2|)))
         (|COMMON-LISP|::|IF|
          (|COMMON-LISP|::|AND| (|CLM|::|VARINFO-GEN-TYPE| |CLM|::|ARG1DAT|)
           (|CLM|::|VARINFO-GEN-TYPE| |CLM|::|ARG2DAT|))
          (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = (~A == ~A);~%"
           (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|ARG1|)
           (|CLM|::|LC2| |CLM|::|ARG2|))
          (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
           "  ~A = ~A;~80,1T/* (eq ~A~A~A) */~%" (|CLM|::|LC2| |CLM|::|RES|)
           (|COMMON-LISP|::|IF|
            (|COMMON-LISP|::|OR| (|COMMON-LISP|::|NOT| |CLM|::|ARG2|)
             (|COMMON-LISP|::|EQ| |CLM|::|ARG1| |CLM|::|ARG2|))
            "true" "false")
           |CLM|::|ARG1| (|COMMON-LISP|::|IF| |CLM|::|ARG2| " " "")
           (|COMMON-LISP|::|OR| |CLM|::|ARG2| "")))))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG1| |COMMON-LISP|::|&OPTIONAL| |CLM|::|ARG2|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<EQL>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<EQL>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<EQL>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG1| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|ARG2| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<EQL>|
       (|COMMON-LISP|::|IF|
        (|COMMON-LISP|::|AND| |CLM|::|ARG1| |CLM|::|ARG2|
         (|COMMON-LISP|::|LISTP| |CLM|::|ARG1|)
         (|COMMON-LISP|::|LISTP| |CLM|::|ARG2|))
        (|COMMON-LISP|::|LET|
         ((|CLM|::|CNAME1| (|CLM|::|LC2| |CLM|::|ARG1|))
          (|CLM|::|CNAME2| (|CLM|::|LC2| |CLM|::|ARG2|))
          (|CLM|::|DEPTH1|
           (|COMMON-LISP|::|*| 2. (|COMMON-LISP|::|THIRD| |CLM|::|ARG1|)))
          (|CLM|::|DEPTH2|
           (|COMMON-LISP|::|*| 2. (|COMMON-LISP|::|THIRD| |CLM|::|ARG2|)))
          (|CLM|::|ARG1DAT|
           (|COMMON-LISP|::|GETHASH| (|COMMON-LISP|::|SECOND| |CLM|::|ARG1|)
            |CLM|::|VARS|))
          (|CLM|::|ARG2DAT|
           (|COMMON-LISP|::|GETHASH| (|COMMON-LISP|::|SECOND| |CLM|::|ARG2|)
            |CLM|::|VARS|)))
         (|COMMON-LISP|::|IF|
          (|COMMON-LISP|::|AND| (|CLM|::|VARINFO-GEN-TYPE| |CLM|::|ARG1DAT|)
           (|CLM|::|VARINFO-GEN-TYPE| |CLM|::|ARG2DAT|))
          (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = (~A == ~A);~%"
           (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|ARG1|)
           (|CLM|::|LC2| |CLM|::|ARG2|))
          (|COMMON-LISP|::|PROGN|
           (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
            "  ~A = ((clm_int[~A + ~D] == clm_int[~A + ~D]) &&~80,1T/* (eql ~A ~A) */~%"
            (|CLM|::|LC2| |CLM|::|RES|) |CLM|::|CNAME1| |CLM|::|DEPTH1|
            |CLM|::|CNAME2| |CLM|::|DEPTH2|
            (|COMMON-LISP|::|SECOND| |CLM|::|ARG1|)
            (|COMMON-LISP|::|SECOND| |CLM|::|ARG2|))
           (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
            "        ((clm_int[~A + ~D + 1] == clm_int[~A + ~D + 1]) ||~%"
            |CLM|::|CNAME1| |CLM|::|DEPTH1| |CLM|::|CNAME2| |CLM|::|DEPTH2|)
           (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
            "         ((clm_int[~A + ~D] == ~D) && (~A == ~A))));~%"
            |CLM|::|CNAME1| |CLM|::|DEPTH1| |CLM|::|+REAL+|
            (|CLM|::|LC-NUM-REF| |CLM|::|ARG1|)
            (|CLM|::|LC-NUM-REF| |CLM|::|ARG2|)))))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A = ~A;~80,1T/* (eql ~A ~A) */~%" (|CLM|::|LC2| |CLM|::|RES|)
         (|COMMON-LISP|::|IF|
          (|COMMON-LISP|::|EQL| |CLM|::|ARG1| |CLM|::|ARG2|) "true" "false")
         |CLM|::|ARG1| |CLM|::|ARG2|)))))))
  '(|CLM|::|RES| |CLM|::|ARG1| |CLM|::|ARG2|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|CHECKED-OP1|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|RESULT| |CLM|::|OPI| |CLM|::|OPR| |CLM|::|ARG|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|CHECKED-OPALL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|RESULT| |CLM|::|OPI| |CLM|::|OPR| |CLM|::|ARGS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<NEGATE>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<NEGATE>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<NEGATE>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<NEGATE>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "~80,1T/* (- ~A) */~%"
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       (|CLM|::|CHECKED-OP1| |CLM|::|RESULT|
        #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|RES| |CLM|::|VAR|)
           (|COMMON-LISP|::|DECLARE|
            (|COMMON-LISP|::|IGNORE| |CLM|::|RES| |CLM|::|VAR|))
           (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
            (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "-(~A)"
             (|CLM|::|LC-NUM-REF| |CLM|::|ARG| :|INTEGER|))
            :|INTEGER|))
        #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|RES| |CLM|::|VAR|)
           (|COMMON-LISP|::|DECLARE|
            (|COMMON-LISP|::|IGNORE| |CLM|::|RES| |CLM|::|VAR|))
           (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
            (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "-(~A)"
             (|CLM|::|LC-NUM-REF| |CLM|::|ARG| :|REAL|))
            :|REAL|))
        |CLM|::|ARG|)
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ABS>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ABS>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ABS>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<ABS>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "~80,1T/* (abs ~A) */~%"
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       (|CLM|::|CHECKED-OP1| |CLM|::|RESULT|
        #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|RES| |CLM|::|VAR|)
           (|COMMON-LISP|::|DECLARE|
            (|COMMON-LISP|::|IGNORE| |CLM|::|RES| |CLM|::|VAR|))
           (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
            (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "abs(~A)"
             (|CLM|::|LC-NUM-REF| |CLM|::|ARG| :|INTEGER|))
            :|INTEGER|))
        #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|RES| |CLM|::|VAR|)
           (|COMMON-LISP|::|DECLARE|
            (|COMMON-LISP|::|IGNORE| |CLM|::|RES| |CLM|::|VAR|))
           (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
            (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "fabs(~A)"
             (|CLM|::|LC-NUM-REF| |CLM|::|ARG| :|REAL|))
            :|REAL|))
        |CLM|::|ARG|)
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|CLEANSE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|ARGS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ADD>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ADD>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ADD>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARGS| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<ADD>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "~80,1T/* (+~{ ~(~A~)~}) */~%" (|CLM|::|CLEANSE| |CLM|::|ARGS|))
       (|CLM|::|CHECKED-OPALL| |CLM|::|RESULT|
        #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|RES| |CLM|::|EVARS|)
           (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RES|
            (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "(~{(~A)~^ + ~})"
             (|COMMON-LISP|::|LOOP| |CLM|::|FOR| |CLM|::|ARG| |CLM|::|IN|
              |CLM|::|EVARS| |CLM|::|COLLECT|
              (|CLM|::|LC-NUM-REF| |CLM|::|ARG| :|INTEGER|)))
            :|INTEGER|))
        #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|RES| |CLM|::|EVARS|)
           (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RES|
            (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "(~{(~A)~^ + ~})"
             (|COMMON-LISP|::|LOOP| |CLM|::|FOR| |CLM|::|ARG| |CLM|::|IN|
              |CLM|::|EVARS| |CLM|::|COLLECT|
              (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)))))
        |CLM|::|ARGS|)
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |COMMON-LISP|::|&REST| |CLM|::|ARGS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<SUBTRACT>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<SUBTRACT>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<SUBTRACT>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARGS| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<SUBTRACT>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "~80,1T/* (-~{ ~(~A~)~}) */~%" (|CLM|::|CLEANSE| |CLM|::|ARGS|))
       (|CLM|::|CHECKED-OPALL| |CLM|::|RESULT|
        #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|RES| |CLM|::|EVARS|)
           (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RES|
            (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "(~{(~A)~^ - ~})"
             (|COMMON-LISP|::|LOOP| |CLM|::|FOR| |CLM|::|ARG| |CLM|::|IN|
              |CLM|::|EVARS| |CLM|::|COLLECT|
              (|CLM|::|LC-NUM-REF| |CLM|::|ARG| :|INTEGER|)))
            :|INTEGER|))
        #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|RES| |CLM|::|EVARS|)
           (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RES|
            (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "(~{(~A)~^ - ~})"
             (|COMMON-LISP|::|LOOP| |CLM|::|FOR| |CLM|::|ARG| |CLM|::|IN|
              |CLM|::|EVARS| |CLM|::|COLLECT|
              (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)))))
        |CLM|::|ARGS|)
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |COMMON-LISP|::|&REST| |CLM|::|ARGS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MULTIPLY>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MULTIPLY>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MULTIPLY>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARGS| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MULTIPLY>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "~80,1T/* (*~{ ~(~A~)~}) */~%" (|CLM|::|CLEANSE| |CLM|::|ARGS|))
       (|CLM|::|CHECKED-OPALL| |CLM|::|RESULT|
        #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|RES| |CLM|::|EVARS|)
           (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RES|
            (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "(~{(~A)~^ * ~})"
             (|COMMON-LISP|::|LOOP| |CLM|::|FOR| |CLM|::|ARG| |CLM|::|IN|
              |CLM|::|EVARS| |CLM|::|COLLECT|
              (|CLM|::|LC-NUM-REF| |CLM|::|ARG| :|INTEGER|)))
            :|INTEGER|))
        #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|RES| |CLM|::|EVARS|)
           (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RES|
            (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "(~{(~A)~^ * ~})"
             (|COMMON-LISP|::|LOOP| |CLM|::|FOR| |CLM|::|ARG| |CLM|::|IN|
              |CLM|::|EVARS| |CLM|::|COLLECT|
              (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)))))
        |CLM|::|ARGS|)
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |COMMON-LISP|::|&REST| |CLM|::|ARGS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<DIVIDE>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<DIVIDE>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<DIVIDE>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|VAL| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|ARGS| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<DIVIDE>|
       (|COMMON-LISP|::|IF| |CLM|::|ARGS|
        (|COMMON-LISP|::|LET|
         ((|CLM|::|ARGL|
           (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL|
            "((double)~A / (double)(~{(~A)~^ * ~}))"
            (|CLM|::|LC-NUM-REF| |CLM|::|VAL|)
            (|COMMON-LISP|::|LOOP| |CLM|::|FOR| |CLM|::|ARG| |CLM|::|IN|
             |CLM|::|ARGS| |CLM|::|COLLECT|
             (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)))))
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  ~A~%~80,1T/* (/ ~A~{ ~(~A~)~}) */~%"
          (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT| |CLM|::|ARGL|)
          (|CLM|::|CLEAN-ARG| |CLM|::|VAL|) (|CLM|::|CLEANSE| |CLM|::|ARGS|)))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A~80,1T/* (/ ~A) */~%"
         (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
          (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "(1.0 / (double)~A)"
           (|CLM|::|LC-NUM-REF| |CLM|::|VAL|)))
         (|CLM|::|CLEAN-ARG| |CLM|::|VAL|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|VAL| |COMMON-LISP|::|&REST| |CLM|::|ARGS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MAX>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MAX>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MAX>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARGS| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MAX>|
       (|COMMON-LISP|::|IF|
        (|COMMON-LISP|::|=| (|COMMON-LISP|::|LENGTH| |CLM|::|ARGS|) 1.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A~80,1T/* (max ~A) */~%"
         (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
          (|COMMON-LISP|::|CAR| |CLM|::|ARGS|))
         (|CLM|::|CLEAN-ARG| (|COMMON-LISP|::|FIRST| |CLM|::|ARGS|)))
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|=| (|COMMON-LISP|::|LENGTH| |CLM|::|ARGS|) 2.)
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  ~A~80,1T/* (max ~A ~A) */~%"
          (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
           (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL|
            "((~A > ~A) ? ~A : ~A)"
            (|CLM|::|LC-NUM-REF| (|COMMON-LISP|::|FIRST| |CLM|::|ARGS|))
            (|CLM|::|LC-NUM-REF| (|COMMON-LISP|::|SECOND| |CLM|::|ARGS|))
            (|CLM|::|LC-NUM-REF| (|COMMON-LISP|::|FIRST| |CLM|::|ARGS|))
            (|CLM|::|LC-NUM-REF| (|COMMON-LISP|::|SECOND| |CLM|::|ARGS|))))
          (|CLM|::|CLEAN-ARG| (|COMMON-LISP|::|FIRST| |CLM|::|ARGS|))
          (|CLM|::|CLEAN-ARG| (|COMMON-LISP|::|SECOND| |CLM|::|ARGS|)))
         (|COMMON-LISP|::|PROGN|
          (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
           "  ~A~80,1T/* (max~{ ~A~}) */~%"
           (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
            (|COMMON-LISP|::|FIRST| |CLM|::|ARGS|))
           (|CLM|::|CLEANSE| |CLM|::|ARGS|))
          (|COMMON-LISP|::|LOOP| |CLM|::|FOR| |CLM|::|ARG| |CLM|::|IN|
           (|COMMON-LISP|::|CDR| |CLM|::|ARGS|) |COMMON-LISP|::|DO|
           (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  if (~A > ~A) {~A}~%"
            (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)
            (|CLM|::|LC-NUM-REF| |CLM|::|RESULT|)
            (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT| |CLM|::|ARG|))))))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |COMMON-LISP|::|&REST| |CLM|::|ARGS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MIN>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MIN>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MIN>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARGS| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MIN>|
       (|COMMON-LISP|::|IF|
        (|COMMON-LISP|::|=| (|COMMON-LISP|::|LENGTH| |CLM|::|ARGS|) 1.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A~80,1T/* (min ~A) */~%"
         (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
          (|COMMON-LISP|::|CAR| |CLM|::|ARGS|))
         (|CLM|::|CLEAN-ARG| (|COMMON-LISP|::|FIRST| |CLM|::|ARGS|)))
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|=| (|COMMON-LISP|::|LENGTH| |CLM|::|ARGS|) 2.)
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  ~A~80,1T/* (min ~A ~A) */~%"
          (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
           (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL|
            "((~A < ~A) ? ~A : ~A)"
            (|CLM|::|LC-NUM-REF| (|COMMON-LISP|::|FIRST| |CLM|::|ARGS|))
            (|CLM|::|LC-NUM-REF| (|COMMON-LISP|::|SECOND| |CLM|::|ARGS|))
            (|CLM|::|LC-NUM-REF| (|COMMON-LISP|::|FIRST| |CLM|::|ARGS|))
            (|CLM|::|LC-NUM-REF| (|COMMON-LISP|::|SECOND| |CLM|::|ARGS|))))
          (|CLM|::|CLEAN-ARG| (|COMMON-LISP|::|FIRST| |CLM|::|ARGS|))
          (|CLM|::|CLEAN-ARG| (|COMMON-LISP|::|SECOND| |CLM|::|ARGS|)))
         (|COMMON-LISP|::|PROGN|
          (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
           "  ~A~80,1T/* (min~{ ~A~}) */~%"
           (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
            (|COMMON-LISP|::|FIRST| |CLM|::|ARGS|))
           (|CLM|::|CLEANSE| |CLM|::|ARGS|))
          (|COMMON-LISP|::|LOOP| |CLM|::|FOR| |CLM|::|ARG| |CLM|::|IN|
           (|COMMON-LISP|::|CDR| |CLM|::|ARGS|) |COMMON-LISP|::|DO|
           (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  if (~A < ~A) {~A}~%"
            (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)
            (|CLM|::|LC-NUM-REF| |CLM|::|RESULT|)
            (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT| |CLM|::|ARG|))))))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |COMMON-LISP|::|&REST| |CLM|::|ARGS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<LOG>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<LOG>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<LOG>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|BASE| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<LOG>|
       (|COMMON-LISP|::|IF| |CLM|::|BASE|
        (|COMMON-LISP|::|IF| (|COMMON-LISP|::|CONSTANTP| |CLM|::|BASE|)
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  ~A~80,1T/* (log ~A ~A) */~%"
          (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
           (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL|
            "log((double)(~A)) / ~A" (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)
            (|CLM|::|LC-NUM-REF| (|COMMON-LISP|::|LOG| |CLM|::|BASE|))))
          (|CLM|::|CLEAN-ARG| |CLM|::|ARG|) |CLM|::|BASE|)
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  ~A~80,1T/* (log ~A ~A) */~%"
          (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
           (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL|
            "log((double)(~A)) / log((double)(~A))"
            (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)
            (|CLM|::|LC-NUM-REF| |CLM|::|BASE|)))
          (|CLM|::|CLEAN-ARG| |CLM|::|ARG|)
          (|CLM|::|CLEAN-ARG| |CLM|::|BASE|)))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A~80,1T/* (log ~A) */~%"
         (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
          (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "log((double)(~A))"
           (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)))
         (|CLM|::|CLEAN-ARG| |CLM|::|ARG|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG| |COMMON-LISP|::|&OPTIONAL| |CLM|::|BASE|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<SIN>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<SIN>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<SIN>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<SIN>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A~80,1T/* (sin ~A) */~%"
        (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "sin((double)(~A))"
          (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)))
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<COS>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<COS>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<COS>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<COS>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A~80,1T/* (cos ~A) */~%"
        (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "cos((double)(~A))"
          (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)))
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<TAN>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<TAN>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<TAN>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<TAN>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A~80,1T/* (tan ~A) */~%"
        (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "tan((double)(~A))"
          (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)))
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ASIN>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ASIN>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ASIN>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<ASIN>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A~80,1T/* (asin ~A) */~%"
        (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "asin((double)(~A))"
          (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)))
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ACOS>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ACOS>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ACOS>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<ACOS>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A~80,1T/* (acos ~A) */~%"
        (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "acos((double)(~A))"
          (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)))
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ATAN>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ATAN>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ATAN>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|ARG2| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<ATAN>|
       (|COMMON-LISP|::|IF| |CLM|::|ARG2|
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A~80,1T/* (atan ~A ~A) */~%"
         (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
          (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL|
           "atan2((double)(~A),(double)(~A))"
           (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)
           (|CLM|::|LC-NUM-REF| |CLM|::|ARG2|)))
         (|CLM|::|CLEAN-ARG| |CLM|::|ARG|) (|CLM|::|CLEAN-ARG| |CLM|::|ARG2|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A~80,1T/* (atan ~A) */~%"
         (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
          (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "atan((double)(~A))"
           (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)))
         (|CLM|::|CLEAN-ARG| |CLM|::|ARG|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG| |COMMON-LISP|::|&OPTIONAL| |CLM|::|ARG2|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<SINH>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<SINH>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<SINH>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<SINH>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A~80,1T/* (sinh ~A) */~%"
        (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "sinh((double)(~A))"
          (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)))
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<COSH>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<COSH>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<COSH>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<COSH>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A~80,1T/* (cosh ~A) */~%"
        (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "cosh((double)(~A))"
          (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)))
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<TANH>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<TANH>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<TANH>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<TANH>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A~80,1T/* (tanh ~A) */~%"
        (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "tanh((double)(~A))"
          (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)))
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ASINH>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ASINH>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ASINH>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<ASINH>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A~80,1T/* (asinh ~A) */~%"
        (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "asinh((double)(~A))"
          (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)))
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ACOSH>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ACOSH>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ACOSH>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<ACOSH>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A~80,1T/* (acosh ~A) */~%"
        (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "acosh((double)(~A))"
          (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)))
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ATANH>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ATANH>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ATANH>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<ATANH>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A~80,1T/* (atanh ~A) */~%"
        (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "atanh((double)(~A))"
          (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)))
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ATAN2>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ATAN2>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ATAN2>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARGY| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|ARGX| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<ATAN2>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A~80,1T/* (atan2 ~A ~A) */~%"
        (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL|
          "atan2((double)(~A),(double)(~A))"
          (|CLM|::|LC-NUM-REF| |CLM|::|ARGY|)
          (|CLM|::|LC-NUM-REF| |CLM|::|ARGX|)))
        (|CLM|::|CLEAN-ARG| |CLM|::|ARGY|) (|CLM|::|CLEAN-ARG| |CLM|::|ARGX|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARGY| |CLM|::|ARGX|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ERF>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ERF>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ERF>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<ERF>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A~80,1T/* (erf ~A) */~%"
        (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "erf((double)(~A))"
          (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)))
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ERFC>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ERFC>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ERFC>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<ERFC>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A~80,1T/* (erfc ~A) */~%"
        (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "erfc((double)(~A))"
          (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)))
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<LGAMMA>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<LGAMMA>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<LGAMMA>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<LGAMMA>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A~80,1T/* (lgamma ~A) */~%"
        (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "lgamma((double)(~A))"
          (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)))
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<BES-J0>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<BES-J0>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<BES-J0>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<BES-J0>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A~80,1T/* (bes-j0 ~A) */~%"
        (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "j0((double)(~A))"
          (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)))
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<BES-J1>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<BES-J1>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<BES-J1>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<BES-J1>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A~80,1T/* (bes-j1 ~A) */~%"
        (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "j1((double)(~A))"
          (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)))
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<BES-JN>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<BES-JN>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<BES-JN>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|ARG2| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<BES-JN>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A~80,1T/* (bes-jn ~A ~A) */~%"
        (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL|
          "jn((double)(~A),(double)(~A))" (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)
          (|CLM|::|LC-NUM-REF| |CLM|::|ARG2|)))
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|) (|CLM|::|CLEAN-ARG| |CLM|::|ARG2|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG| |CLM|::|ARG2|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<BES-Y0>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<BES-Y0>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<BES-Y0>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<BES-Y0>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A~80,1T/* (bes-y0 ~A) */~%"
        (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "y0((double)(~A))"
          (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)))
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<BES-Y1>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<BES-Y1>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<BES-Y1>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<BES-Y1>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A~80,1T/* (bes-y1 ~A) */~%"
        (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "y1((double)(~A))"
          (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)))
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<BES-YN>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<BES-YN>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<BES-YN>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|ARG2| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<BES-YN>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A~80,1T/* (bes-yn ~A ~A) */~%"
        (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL|
          "yn((double)(~A),(double)(~A))" (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)
          (|CLM|::|LC-NUM-REF| |CLM|::|ARG2|)))
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|) (|CLM|::|CLEAN-ARG| |CLM|::|ARG2|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG| |CLM|::|ARG2|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<BES-I0>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<BES-I0>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<BES-I0>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<BES-I0>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A~80,1T/* (bes-i0 ~A) */~%"
        (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL|
          "mus_bessi0((double)(~A))" (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)))
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<SIGNUM>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<SIGNUM>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<SIGNUM>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<SIGNUM>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "~80,1T/* (signum ~A) */~%"
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       (|CLM|::|CHECKED-OP1| |CLM|::|RESULT|
        #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|RES| |CLM|::|VAR|)
           (|COMMON-LISP|::|DECLARE|
            (|COMMON-LISP|::|IGNORE| |CLM|::|RES| |CLM|::|VAR|))
           (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
            (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL|
             "((~A > 0) ? 1 : (~A == 0) ? 0 : -1)"
             (|CLM|::|LC-NUM-REF| |CLM|::|ARG| :|INTEGER|)
             (|CLM|::|LC-NUM-REF| |CLM|::|ARG| :|INTEGER|))
            :|INTEGER|))
        #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|RES| |CLM|::|VAR|)
           (|COMMON-LISP|::|DECLARE|
            (|COMMON-LISP|::|IGNORE| |CLM|::|RES| |CLM|::|VAR|))
           (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
            (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL|
             "((~A > 0.0) ? 1.0 : (~A == 0.0) ? 0.0 : -1.0)"
             (|CLM|::|LC-NUM-REF| |CLM|::|ARG| :|REAL|)
             (|CLM|::|LC-NUM-REF| |CLM|::|ARG| :|REAL|))
            :|REAL|))
        |CLM|::|ARG|)
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<RANDOM>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<RANDOM>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<RANDOM>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<RANDOM>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "~80,1T/* (random ~A) */~%"
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       (|CLM|::|CHECKED-OP1| |CLM|::|RESULT|
        #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|RES| |CLM|::|VAR|)
           (|COMMON-LISP|::|DECLARE|
            (|COMMON-LISP|::|IGNORE| |CLM|::|RES| |CLM|::|VAR|))
           (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
            (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL|
             "(mus_long_t)(mus_frandom((double)(~A)))"
             (|CLM|::|LC-NUM-REF| |CLM|::|ARG| :|INTEGER|))
            :|INTEGER|))
        #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|RES| |CLM|::|VAR|)
           (|COMMON-LISP|::|DECLARE|
            (|COMMON-LISP|::|IGNORE| |CLM|::|RES| |CLM|::|VAR|))
           (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
            (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL|
             "mus_frandom((double)(~A))"
             (|CLM|::|LC-NUM-REF| |CLM|::|ARG| :|REAL|))
            :|REAL|))
        |CLM|::|ARG|)
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<CENTERED-RANDOM>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<CENTERED-RANDOM>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<CENTERED-RANDOM>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<CENTERED-RANDOM>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_random((double)(~A));~80,1T/* (centered-random ~A) */~%"
        (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<EXPT>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<EXPT>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<EXPT>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|BASE| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<EXPT>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A~80,1T/* (expt ~A ~A) */~%"
        (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL|
          "pow((double)(~A), (double)(~A))" (|CLM|::|LC-NUM-REF| |CLM|::|BASE|)
          (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)))
        (|CLM|::|CLEAN-ARG| |CLM|::|BASE|) (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|BASE| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<EXP>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<EXP>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<EXP>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<EXP>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A~80,1T/* (exp ~A) */~%"
        (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "exp((double)(~A))"
          (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)))
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<FLOOR>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<FLOOR>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<FLOOR>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|DIV-1| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<FLOOR>|
       (|COMMON-LISP|::|IF| |CLM|::|DIV-1|
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A~80,1T/* (floor ~A ~A) */~%"
         (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
          (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL|
           "(mus_long_t)floor((double)(~A) / (double)(~A))"
           (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)
           (|CLM|::|LC-NUM-REF| |CLM|::|DIV-1|)))
         (|CLM|::|CLEAN-ARG| |CLM|::|ARG|) (|CLM|::|CLEAN-ARG| |CLM|::|DIV-1|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A~80,1T/* (floor ~A) */~%"
         (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
          (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL|
           "(mus_long_t)floor((double)(~A))"
           (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)))
         (|CLM|::|CLEAN-ARG| |CLM|::|ARG|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG| |COMMON-LISP|::|&OPTIONAL| |CLM|::|DIV-1|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<CEILING>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<CEILING>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<CEILING>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|DIV-1| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<CEILING>|
       (|COMMON-LISP|::|IF| |CLM|::|DIV-1|
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A~80,1T/* (ceiling ~A ~A) */~%"
         (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
          (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL|
           "(mus_long_t)ceil((double)(~A) / (double)(~A))"
           (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)
           (|CLM|::|LC-NUM-REF| |CLM|::|DIV-1|)))
         (|CLM|::|CLEAN-ARG| |CLM|::|ARG|) (|CLM|::|CLEAN-ARG| |CLM|::|DIV-1|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A~80,1T/* (ceiling ~A) */~%"
         (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
          (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL|
           "(mus_long_t)ceil((double)(~A))"
           (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)))
         (|CLM|::|CLEAN-ARG| |CLM|::|ARG|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG| |COMMON-LISP|::|&OPTIONAL| |CLM|::|DIV-1|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ROUND>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ROUND>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ROUND>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|DIV-1| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<ROUND>|
       (|COMMON-LISP|::|IF| |CLM|::|DIV-1|
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A~80,1T/* (round ~A ~A) */~%"
         (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
          (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL|
           "(mus_long_t)floor((double)(~A) / (double)(~A) + .5)"
           (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)
           (|CLM|::|LC-NUM-REF| |CLM|::|DIV-1|)))
         (|CLM|::|CLEAN-ARG| |CLM|::|ARG|) (|CLM|::|CLEAN-ARG| |CLM|::|DIV-1|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A~80,1T/* (round ~A) */~%"
         (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
          (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL|
           "(mus_long_t)floor((double)((~A) + .5))"
           (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)))
         (|CLM|::|CLEAN-ARG| |CLM|::|ARG|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  if ( (((~A) - (~A)) == .5) && (((mus_long_t)(~A)) & 1) ) ~A;~%"
        (|CLM|::|LC-NUM-REF| |CLM|::|RESULT|)
        (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)
        (|CLM|::|LC-NUM-REF| |CLM|::|RESULT|)
        (|CLM|::|LC-SET| |CLM|::|+DECF+| |CLM|::|RESULT| "1"))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG| |COMMON-LISP|::|&OPTIONAL| |CLM|::|DIV-1|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<TRUNCATE>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<TRUNCATE>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<TRUNCATE>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|DIV-1| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<TRUNCATE>|
       (|COMMON-LISP|::|IF| |CLM|::|DIV-1|
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A~80,1T/* (truncate ~A ~A) */~%"
         (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
          (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL|
           "(mus_long_t)floor((double)(~A) / (double)(~A))"
           (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)
           (|CLM|::|LC-NUM-REF| |CLM|::|DIV-1|)))
         (|CLM|::|CLEAN-ARG| |CLM|::|ARG|) (|CLM|::|CLEAN-ARG| |CLM|::|DIV-1|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A~80,1T/* (truncate ~A) */~%"
         (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
          (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL|
           "(mus_long_t)floor((double)(~A))"
           (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)))
         (|CLM|::|CLEAN-ARG| |CLM|::|ARG|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  if ((~A) < 0.0) ~A;~%"
        (|CLM|::|LC-NUM-REF| |CLM|::|RESULT|)
        (|CLM|::|LC-SET| |CLM|::|+INCF+| |CLM|::|RESULT| "1"))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG| |COMMON-LISP|::|&OPTIONAL| |CLM|::|DIV-1|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ADD-1>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ADD-1>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ADD-1>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<ADD-1>|
       (|CLM|::|CHECKED-OP1| |CLM|::|RESULT|
        #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|RES| |CLM|::|VAR|)
           (|COMMON-LISP|::|DECLARE|
            (|COMMON-LISP|::|IGNORE| |CLM|::|RES| |CLM|::|VAR|))
           (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
            (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "~A + 1"
             (|CLM|::|LC-NUM-REF| |CLM|::|ARG| :|INTEGER|))
            :|INTEGER|))
        #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|RES| |CLM|::|VAR|)
           (|COMMON-LISP|::|DECLARE|
            (|COMMON-LISP|::|IGNORE| |CLM|::|RES| |CLM|::|VAR|))
           (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
            (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "~A + 1.0"
             (|CLM|::|LC-NUM-REF| |CLM|::|ARG| :|REAL|))
            :|REAL|))
        |CLM|::|ARG|)
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<SUB-1>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<SUB-1>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<SUB-1>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<SUB-1>|
       (|CLM|::|CHECKED-OP1| |CLM|::|RESULT|
        #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|RES| |CLM|::|VAR|)
           (|COMMON-LISP|::|DECLARE|
            (|COMMON-LISP|::|IGNORE| |CLM|::|RES| |CLM|::|VAR|))
           (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
            (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "~A - 1"
             (|CLM|::|LC-NUM-REF| |CLM|::|ARG| :|INTEGER|))
            :|INTEGER|))
        #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|RES| |CLM|::|VAR|)
           (|COMMON-LISP|::|DECLARE|
            (|COMMON-LISP|::|IGNORE| |CLM|::|RES| |CLM|::|VAR|))
           (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
            (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "~A - 1.0"
             (|CLM|::|LC-NUM-REF| |CLM|::|ARG| :|REAL|))
            :|REAL|))
        |CLM|::|ARG|)
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<SQRT>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<SQRT>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<SQRT>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<SQRT>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A~80,1T/* (sqrt ~A) */~%"
        (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "sqrt((double)(~A))"
          (|CLM|::|LC-NUM-REF| |CLM|::|ARG|)))
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ASH>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ASH>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ASH>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG1| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|ARG2| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<ASH>|
       (|COMMON-LISP|::|LET|
        ((|CLM|::|L1| (|CLM|::|LC-NUM-REF| |CLM|::|ARG1| :|INTEGER|))
         (|CLM|::|L2| (|CLM|::|LC-NUM-REF| |CLM|::|ARG2| :|INTEGER|)))
        (|COMMON-LISP|::|IF| (|COMMON-LISP|::|CONSTANTP| |CLM|::|ARG2|)
         (|COMMON-LISP|::|IF| (|COMMON-LISP|::|=| |CLM|::|ARG2| 0.)
          (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
           "  ~A~80,1T/* (ash ~A 0) */~%"
           (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT| |CLM|::|ARG1|
            :|INTEGER|)
           (|CLM|::|CLEAN-ARG| |CLM|::|ARG1|))
          (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
           "  ~A~80,1T/* (ash ~A ~A) */~%"
           (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
            (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "(~A ~A ~A)"
             |CLM|::|L1|
             (|COMMON-LISP|::|IF| (|COMMON-LISP|::|>| |CLM|::|ARG2| 0.) "<<"
              ">>")
             (|COMMON-LISP|::|IF| (|COMMON-LISP|::|>| |CLM|::|ARG2| 0.)
              |CLM|::|ARG2| (|COMMON-LISP|::|ABS| |CLM|::|ARG2|)))
            :|INTEGER|)
           (|CLM|::|CLEAN-ARG| |CLM|::|ARG1|)
           (|CLM|::|CLEAN-ARG| |CLM|::|ARG2|)))
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  if (~A >= 0) ~A else ~A~80,1T/* (ash ~A ~A) */~%" |CLM|::|L2|
          (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
           (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "~A << ~A" |CLM|::|L1|
            |CLM|::|L2|)
           :|INTEGER|)
          (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
           (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "~A >> (-~A)"
            |CLM|::|L1| |CLM|::|L2|)
           :|INTEGER|)
          (|CLM|::|CLEAN-ARG| |CLM|::|ARG1|)
          (|CLM|::|CLEAN-ARG| |CLM|::|ARG2|))))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG1| |CLM|::|ARG2|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MOD>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MOD>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MOD>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG1| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|ARG2| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MOD>|
       (|CLM|::|CHECKED-OPALL| |CLM|::|RESULT|
        #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|RES| |CLM|::|EVARS|)
           (|COMMON-LISP|::|LET|
            ((|CLM|::|LCARG1|
              (|CLM|::|LC-NUM-REF| (|COMMON-LISP|::|FIRST| |CLM|::|EVARS|)
               :|INTEGER|))
             (|CLM|::|LCARG2|
              (|CLM|::|LC-NUM-REF| (|COMMON-LISP|::|SECOND| |CLM|::|EVARS|)
               :|INTEGER|))
             (|CLM|::|RESNAME| (|CLM|::|LC-NUM-REF| |CLM|::|RES| :|INTEGER|)))
            (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL|
             "~A~%  if (((~A > 0) && (~A < 0)) || ((~A < 0) && (~A > 0)))~%  {~A}~%"
             (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RES|
              (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "~A % ~A"
               |CLM|::|LCARG1| |CLM|::|LCARG2|)
              :|INTEGER|)
             |CLM|::|RESNAME| |CLM|::|LCARG2| |CLM|::|RESNAME| |CLM|::|LCARG2|
             (|CLM|::|LC-SET| |CLM|::|+INCF+| |CLM|::|RES| |CLM|::|LCARG2|
              :|INTEGER|))))
        #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|RES| |CLM|::|EVARS|)
           (|COMMON-LISP|::|LET|
            ((|CLM|::|LCARG1|
              (|CLM|::|LC-NUM-REF| (|COMMON-LISP|::|FIRST| |CLM|::|EVARS|)))
             (|CLM|::|LCARG2|
              (|CLM|::|LC-NUM-REF| (|COMMON-LISP|::|SECOND| |CLM|::|EVARS|)))
             (|CLM|::|RESNAME| (|CLM|::|LC-NUM-REF| |CLM|::|RES| :|REAL|)))
            (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL|
             "~A~%  if (((~A > 0.0) && (~A < 0.0)) || ((~A < 0.0) && (~A > 0.0)))~%  {~A}~%~%"
             (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RES|
              (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL|
               "fmod((double)~A,(double)~A)" |CLM|::|LCARG1| |CLM|::|LCARG2|))
             |CLM|::|RESNAME| |CLM|::|LCARG2| |CLM|::|RESNAME| |CLM|::|LCARG2|
             (|CLM|::|LC-SET| |CLM|::|+INCF+| |CLM|::|RES| |CLM|::|LCARG2|))))
        (|COMMON-LISP|::|LIST| |CLM|::|ARG1| |CLM|::|ARG2|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG1| |CLM|::|ARG2|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<REM>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<REM>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<REM>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG1| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|ARG2| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<REM>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A~80,1T/* (rem ~A ~A) */~%"
        (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL|
          "~A~A((double)~A,(double)~A)"
          (|COMMON-LISP|::|IF|
           (|COMMON-LISP|::|MEMBER|
            (|CLM|::|VARINFO-TYPE|
             (|COMMON-LISP|::|GETHASH|
              (|COMMON-LISP|::|SECOND| |CLM|::|RESULT|) |CLM|::|VARS|))
            '(:|INTEGER| :|CLM-INTEGER| :|BIGNUM|))
           "(mus_long_t)" "")
          "remainder" (|CLM|::|LC-NUM-REF| |CLM|::|ARG1|)
          (|CLM|::|LC-NUM-REF| |CLM|::|ARG2|)))
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG1|) (|CLM|::|CLEAN-ARG| |CLM|::|ARG2|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG1| |CLM|::|ARG2|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|LC-STR-REF|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|ARG|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|LC-REF|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|ARG| |CLM|::|TYP|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|LISP-TO-C-FORMAT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|NL| |CLM|::|FSTR| |COMMON-LISP|::|&REST| |CLM|::|ARGS|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|LISP-TO-C-PRINT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|NL| |CLM|::|NAME| |CLM|::|FSTR1| |COMMON-LISP|::|&REST|
    |CLM|::|ARGS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<WARN>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<WARN>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<WARN>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|LET*|
     ((|CLM|::|FSTR| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
      (|CLM|::|ARGS| (|COMMON-LISP|::|CDDR| . #1#)))
     (|COMMON-LISP|::|BLOCK| |CLM|::|<WARN>|
      (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A"
       (|COMMON-LISP|::|APPLY| #'|CLM|::|LISP-TO-C-PRINT| |COMMON-LISP|::|NIL|
        "warning:" |CLM|::|FSTR| |CLM|::|ARGS|))
      |COMMON-LISP|::|NIL|))))
  '(|COMMON-LISP|::|&OPTIONAL| |CLM|::|FSTR| |COMMON-LISP|::|&REST|
    |CLM|::|ARGS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ERROR>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ERROR>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ERROR>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|LET*|
     ((|CLM|::|FSTR| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
      (|CLM|::|ARGS| (|COMMON-LISP|::|CDDR| . #1#)))
     (|COMMON-LISP|::|BLOCK| |CLM|::|<ERROR>|
      (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  {~A"
       (|COMMON-LISP|::|APPLY| #'|CLM|::|LISP-TO-C-PRINT| |COMMON-LISP|::|NIL|
        "error:" |CLM|::|FSTR| |CLM|::|ARGS|))
      (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "   clm_int[~D] = -1;~%"
       |CLM|::|+CLM-INTERRUPTED+|)
      (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "   goto RUN_ALL_DONE;}~%")
      |COMMON-LISP|::|NIL|))))
  '(|COMMON-LISP|::|&OPTIONAL| |CLM|::|FSTR| |COMMON-LISP|::|&REST|
    |CLM|::|ARGS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<PRINT>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<PRINT>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<PRINT>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|FSTR| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|NL|
        (|COMMON-LISP|::|IF| (|COMMON-LISP|::|CDDR| . #1#)
         (|COMMON-LISP|::|CADDR| . #1#) |COMMON-LISP|::|T|)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<PRINT>|
       (|COMMON-LISP|::|IF| (|COMMON-LISP|::|STRINGP| |CLM|::|FSTR|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "~A"
         (|COMMON-LISP|::|APPLY| #'|CLM|::|LISP-TO-C-PRINT| |CLM|::|NL| ""
          |CLM|::|FSTR| |COMMON-LISP|::|NIL|))
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|AND| |CLM|::|FSTR|
          (|COMMON-LISP|::|LISTP| |CLM|::|FSTR|)
          (|COMMON-LISP|::|EQ| (|COMMON-LISP|::|FIRST| |CLM|::|FSTR|) :|VAR|))
         (|COMMON-LISP|::|LET*|
          ((|CLM|::|LNAME| (|COMMON-LISP|::|SECOND| |CLM|::|FSTR|))
           (|CLM|::|LST|
            (|COMMON-LISP|::|GETHASH| |CLM|::|LNAME| |CLM|::|VARS|)))
          (|COMMON-LISP|::|IF|
           (|COMMON-LISP|::|MEMBER| (|CLM|::|VARINFO-TYPE| |CLM|::|LST|)
            '(:|INTEGER| :|CLM-INTEGER|))
           (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
            "  mus_error(0, \"%d\", (int)~A);~80,1T/* (print ~A) */~%"
            (|CLM|::|LC-NUM-REF| |CLM|::|FSTR| :|INTEGER|)
            (|CLM|::|CLEAN-ARG| |CLM|::|FSTR|))
           (|COMMON-LISP|::|IF|
            (|COMMON-LISP|::|MEMBER| (|CLM|::|VARINFO-TYPE| |CLM|::|LST|)
             '(:|REAL| :|CLM-REAL|))
            (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
             "  mus_error(0, \"%f\", ~A);~80,1T/* (print ~A) */~%"
             (|CLM|::|LC-NUM-REF| |CLM|::|FSTR| :|REAL|)
             (|CLM|::|CLEAN-ARG| |CLM|::|FSTR|))
            (|COMMON-LISP|::|IF|
             (|COMMON-LISP|::|MEMBER| (|CLM|::|VARINFO-TYPE| |CLM|::|LST|)
              '(:|BOOLEAN| :|CLM-BOOLEAN|))
             (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
              "  mus_error(0, \"%s\", (~A == 0) ? \"nil\" : \"t\");~80,1T/* (print ~A) */~%"
              (|CLM|::|LC-NUM-REF| |CLM|::|FSTR| :|INTEGER|)
              (|CLM|::|CLEAN-ARG| |CLM|::|FSTR|))
             (|COMMON-LISP|::|IF| (|CLM|::|VARINFO-GEN-TYPE| |CLM|::|LST|)
              (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
               "  mus_error(0, \"%s\", mus_describe(~A));~80,1T/* (print ~A) */~%"
               (|CLM|::|LC| |CLM|::|LNAME|) (|CLM|::|CLEAN-ARG| |CLM|::|FSTR|))
              (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
               "  mus_error(0, \"~A\");~%" |CLM|::|FSTR|))))))))
       (|COMMON-LISP|::|IF| |CLM|::|NL|
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  mus_error(0, \"\\n\");~%"))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|FSTR| |COMMON-LISP|::|&OPTIONAL|
    (|CLM|::|NL| |COMMON-LISP|::|T|))))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<PRINC>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<PRINC>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<PRINC>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|FSTR| (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<PRINC>|
       `(|CLM|::|<PRINT>| ,|CLM|::|FSTR| |COMMON-LISP|::|NIL|))))))
  '(|CLM|::|FSTR|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<CLM-PRINT>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<CLM-PRINT>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<CLM-PRINT>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|LET*|
     ((|CLM|::|FSTR| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
      (|CLM|::|ARGS| (|COMMON-LISP|::|CDDR| . #1#)))
     (|COMMON-LISP|::|BLOCK| |CLM|::|<CLM-PRINT>|
      (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
       "~80,1T/* (clm-print ~S ~A) */~%" (|CLM|::|CLEAN-ARG| |CLM|::|FSTR|)
       (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "~{ ~A~}"
        (|COMMON-LISP|::|MAPCAR| #'|CLM|::|CLEAN-ARG| |CLM|::|ARGS|)))
      (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "~A"
       (|COMMON-LISP|::|APPLY| #'|CLM|::|LISP-TO-C-PRINT| |COMMON-LISP|::|NIL|
        "" |CLM|::|FSTR| |CLM|::|ARGS|))
      |COMMON-LISP|::|NIL|))))
  '(|COMMON-LISP|::|&OPTIONAL| |CLM|::|FSTR| |COMMON-LISP|::|&REST|
    |CLM|::|ARGS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<SND-MEMO>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<SND-MEMO>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<SND-MEMO>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|FILENAME| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|FSTR| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CLM|::|ARGS| (|COMMON-LISP|::|CDDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<SND-MEMO>|
       (|COMMON-LISP|::|LET| ((|CLM|::|FD| (|CLM|::|LC2| |CLM|::|RESULT|)))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  {char *memo_file; int addr;~1,80T/* (snd-memo ~A ~A ~A) */~%"
         (|CLM|::|CLEAN-ARG| |CLM|::|FILENAME|)
         (|CLM|::|CLEAN-ARG| |CLM|::|FSTR|)
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "~{ ~A~}"
          (|COMMON-LISP|::|MAPCAR| #'|CLM|::|CLEAN-ARG| |CLM|::|ARGS|)))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "   memo_file = \"~A.scm\";~%" |CLM|::|FILENAME|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "   ~A = mus_file_open_write(memo_file);~%" |CLM|::|FD|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "   if (~A != -1) {~%"
         |CLM|::|FD|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "   ~A"
         (|COMMON-LISP|::|APPLY| #'|CLM|::|LISP-TO-C-PRINT|
          |COMMON-LISP|::|NIL| "" |CLM|::|RESULT|
          (|COMMON-LISP|::|APPEND| (|COMMON-LISP|::|LIST| |CLM|::|FSTR|)
           |CLM|::|ARGS|)))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "     close(~A);}~%"
         |CLM|::|FD|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "   else mus_error(0,\"can't open snd memo file\");~%")
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|NOT| (|COMMON-LISP|::|STRINGP| |CLM|::|FILENAME|))
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "   FREE(memo_file);~%"))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "   }~%"))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|FILENAME| |CLM|::|FSTR| |COMMON-LISP|::|&REST|
    |CLM|::|ARGS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<TERPRI>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<TERPRI>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<TERPRI>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 1. 1.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*| |COMMON-LISP|::|NIL|
      (|COMMON-LISP|::|BLOCK| |CLM|::|<TERPRI>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  mus_error(0, \"\\n\");~80,1T/* (terpri) */~%")
       |COMMON-LISP|::|NIL|)))))
  '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<LABEL>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<LABEL>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<LABEL>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|ARG| (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<LABEL>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "~A:~%"
        (|CLM|::|LC| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|ARG|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|LC-BOOL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|VAR|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|LC-BOOL-NOT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|VAR|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<JUMP>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<JUMP>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<JUMP>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|ARG| (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<JUMP>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  goto ~A;~%"
        (|CLM|::|LC| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<JUMP-IF>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<JUMP-IF>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<JUMP-IF>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|VAR| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<JUMP-IF>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  if (~A) goto ~A;~%"
        (|CLM|::|LC-BOOL| |CLM|::|VAR|) (|CLM|::|LC| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|VAR| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<JUMP-IF-NOT>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<JUMP-IF-NOT>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<JUMP-IF-NOT>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|VAR| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<JUMP-IF-NOT>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  if (~A) goto ~A;~%"
        (|CLM|::|LC-BOOL-NOT| |CLM|::|VAR|) (|CLM|::|LC| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|VAR| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<CASE>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<CASE>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<CASE>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|INDEX| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|NAME-LIST| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|LABEL-LIST| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<CASE>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  switch ((int)~A){~%"
        (|CLM|::|LC-NUM-REF| |CLM|::|INDEX|))
       (|COMMON-LISP|::|LOOP| |CLM|::|FOR| |CLM|::|NAME| |CLM|::|IN|
        |CLM|::|NAME-LIST| |COMMON-LISP|::|AND| |CLM|::|LABEL| |CLM|::|IN|
        |CLM|::|LABEL-LIST| |COMMON-LISP|::|DO|
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "    ~A: goto ~A; break;~%"
         (|COMMON-LISP|::|IF|
          (|COMMON-LISP|::|NOT|
           (|COMMON-LISP|::|MEMBER| |CLM|::|NAME|
            '(|COMMON-LISP|::|T| |COMMON-LISP|::|OTHERWISE|)))
          (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "case ~A"
           |CLM|::|NAME|)
          "default")
         (|CLM|::|LC| |CLM|::|LABEL|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "    }~%")
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|INDEX| |CLM|::|NAME-LIST| |CLM|::|LABEL-LIST|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|LC-NUM-COMPARE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|RES| |CLM|::|N| |CLM|::|CMP| |CLM|::|I| |COMMON-LISP|::|&OPTIONAL|
    |CLM|::|NOT-CMP| |CLM|::|ARGTYPE|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ZEROP>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ZEROP>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ZEROP>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<ZEROP>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A;~80,1T/* (zerop ~A) */~%"
        (|CLM|::|LC-NUM-COMPARE| |CLM|::|RESULT| |CLM|::|ARG| "==" 0.)
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MINUSP>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MINUSP>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MINUSP>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MINUSP>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A;~80,1T/* (minusp ~A) */~%"
        (|CLM|::|LC-NUM-COMPARE| |CLM|::|RESULT| |CLM|::|ARG| "<" 0.)
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<PLUSP>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<PLUSP>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<PLUSP>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<PLUSP>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A;~80,1T/* (plusp ~A) */~%"
        (|CLM|::|LC-NUM-COMPARE| |CLM|::|RESULT| |CLM|::|ARG| ">" 0.)
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ODDP>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ODDP>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ODDP>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<ODDP>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A;~80,1T/* (oddp ~A) */~%"
        (|CLM|::|LC-NUM-COMPARE| |CLM|::|RESULT| |CLM|::|ARG| "%" 2.
         |COMMON-LISP|::|NIL| :|INTEGER|)
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<EVENP>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<EVENP>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<EVENP>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<EVENP>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A;~80,1T/* (evenp ~A) */~%"
        (|CLM|::|LC-NUM-COMPARE| |CLM|::|RESULT| |CLM|::|ARG| "%" 2.
         |COMMON-LISP|::|T| :|INTEGER|)
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<NULL>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<NULL>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<NULL>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<NULL>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A~80,1T/* (null ~A) */~%"
        (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
         (|CLM|::|LC-BOOL-NOT| |CLM|::|ARG|) :|PBOOLEAN|)
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<NOT>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<NOT>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<NOT>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<NOT>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A~80,1T/* (null ~A) */~%"
        (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
         (|CLM|::|LC-BOOL-NOT| |CLM|::|ARG|) :|PBOOLEAN|)
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<NEQ>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<NEQ>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<NEQ>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARGS| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<NEQ>|
       (|COMMON-LISP|::|IF|
        (|COMMON-LISP|::|=| (|COMMON-LISP|::|LENGTH| |CLM|::|ARGS|) 1.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A~80,1T/* (neq ~A) */~%"
         (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT| "true" :|PBOOLEAN|)
         (|CLM|::|CLEAN-ARG| (|COMMON-LISP|::|FIRST| |CLM|::|ARGS|)))
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|=| (|COMMON-LISP|::|LENGTH| |CLM|::|ARGS|) 2.)
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  ~A~80,1T/* (neq ~A ~A) */~%"
          (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
           (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "(~A != ~A)"
            (|CLM|::|LC-NUM-REF| (|COMMON-LISP|::|FIRST| |CLM|::|ARGS|))
            (|CLM|::|LC-NUM-REF| (|COMMON-LISP|::|SECOND| |CLM|::|ARGS|)))
           :|PBOOLEAN|)
          (|CLM|::|CLEAN-ARG| (|COMMON-LISP|::|FIRST| |CLM|::|ARGS|))
          (|CLM|::|CLEAN-ARG| (|COMMON-LISP|::|SECOND| |CLM|::|ARGS|)))
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  ~A~80,1T/* (neq~{ ~A~}) */~%"
          (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
           (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL|
            "(~{(~A != ~A)~^ && ~})"
            (|COMMON-LISP|::|LOOP| |CLM|::|FOR| |CLM|::|ARG| |CLM|::|ON|
             |CLM|::|ARGS| |COMMON-LISP|::|APPEND|
             (|COMMON-LISP|::|LOOP| |CLM|::|FOR| |CLM|::|ARG1| |CLM|::|IN|
              (|COMMON-LISP|::|CDR| |CLM|::|ARG|) |CLM|::|COLLECT|
              (|CLM|::|LC-NUM-REF| (|COMMON-LISP|::|FIRST| |CLM|::|ARG|))
              |CLM|::|COLLECT| (|CLM|::|LC-NUM-REF| |CLM|::|ARG1|))))
           :|PBOOLEAN|)
          (|COMMON-LISP|::|MAPCAR| #'|CLM|::|CLEAN-ARG| |CLM|::|ARGS|))))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |COMMON-LISP|::|&REST| |CLM|::|ARGS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<COMPARE>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<COMPARE>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<COMPARE>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|COMPARE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|RESULT| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|ARGS| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<COMPARE>|
       (|COMMON-LISP|::|IF|
        (|COMMON-LISP|::|=| (|COMMON-LISP|::|LENGTH| |CLM|::|ARGS|) 1.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A~80,1T/* (~A ~A) */~%"
         (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT| "true" :|PBOOLEAN|)
         |CLM|::|COMPARE|
         (|CLM|::|CLEAN-ARG| (|COMMON-LISP|::|FIRST| |CLM|::|ARGS|)))
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|=| (|COMMON-LISP|::|LENGTH| |CLM|::|ARGS|) 2.)
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  ~A~80,1T/* (~A ~A ~A) */~%"
          (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
           (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "(~A ~A ~A)"
            (|CLM|::|LC-NUM-REF| (|COMMON-LISP|::|FIRST| |CLM|::|ARGS|))
            |CLM|::|COMPARE|
            (|CLM|::|LC-NUM-REF| (|COMMON-LISP|::|SECOND| |CLM|::|ARGS|)))
           :|PBOOLEAN|)
          |CLM|::|COMPARE|
          (|CLM|::|CLEAN-ARG| (|COMMON-LISP|::|FIRST| |CLM|::|ARGS|))
          (|CLM|::|CLEAN-ARG| (|COMMON-LISP|::|SECOND| |CLM|::|ARGS|)))
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  ~A~80,1T/* (~A~{ ~A~}) */~%"
          (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
           (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL|
            "(~{(~A ~A ~A)~^ && ~})"
            (|COMMON-LISP|::|LOOP| |CLM|::|FOR| |CLM|::|ARG| |CLM|::|IN|
             |CLM|::|ARGS| |COMMON-LISP|::|AND| |CLM|::|ARG1| |CLM|::|IN|
             (|COMMON-LISP|::|CDR| |CLM|::|ARGS|) |CLM|::|COLLECT|
             (|CLM|::|LC-NUM-REF| |CLM|::|ARG|) |CLM|::|COLLECT|
             |CLM|::|COMPARE| |CLM|::|COLLECT|
             (|CLM|::|LC-NUM-REF| |CLM|::|ARG1|)))
           :|PBOOLEAN|)
          |CLM|::|COMPARE|
          (|COMMON-LISP|::|MAPCAR| #'|CLM|::|CLEAN-ARG| |CLM|::|ARGS|))))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|COMPARE| |CLM|::|RESULT| |COMMON-LISP|::|&REST| |CLM|::|ARGS|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|ARRAY-HEADER-SIZE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|ARR|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ARRAY?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ARRAY?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ARRAY?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<ARRAY?>|
       (|CLM|::|LC-CHECK-TYPE| |CLM|::|RESULT| |CLM|::|ARG|
        (|COMMON-LISP|::|LIST| |CLM|::|+REAL-ARRAY+| |CLM|::|+INTEGER-ARRAY+|
         |CLM|::|+ARRAY+|)
        "array?"
        #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|ARG|)
           (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |CLM|::|ARG|))
           "false")
        #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|TYP|)
           (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |CLM|::|TYP|))
           "false"))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARG|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|LOAD-REAL-ARRAY|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|ARR| |CLM|::|I| |CLM|::|R| |CLM|::|DATAI| |CLM|::|DATAR|
    |COMMON-LISP|::|&OPTIONAL| |CLM|::|SIZE|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|UNLOAD-REAL-ARRAY|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|I| |CLM|::|DATAI| |CLM|::|DATAR|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|LOAD-INTEGER-ARRAY|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|ARR| |CLM|::|I| |CLM|::|R| |CLM|::|DATAI| |CLM|::|DATAR|
    |COMMON-LISP|::|&OPTIONAL| |CLM|::|SIZE|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|UNLOAD-INTEGER-ARRAY|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|I| |CLM|::|DATAI|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|LOAD-SCALED-ARRAY|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|ARR| |CLM|::|I| |CLM|::|R| |CLM|::|DATAI| |CLM|::|DATAR|
    |CLM|::|SCALER|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|UNLOAD-SCALED-ARRAY|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|I| |CLM|::|DATAI| |CLM|::|DATAR| |CLM|::|SCALER|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|LOAD-ARRAY|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|ARR| |CLM|::|I| |CLM|::|R| |CLM|::|DATAI| |CLM|::|DATAR|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|UNLOAD-ARRAY|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|I| |CLM|::|R| |CLM|::|DATAI| |CLM|::|DATAR|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|CLM-ARRAY-ELEMENT-TYPE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|N|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|ARRAY-HEADER|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|TAB|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|ARRAY-IBLOCK|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|TAB|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|ARRAY-RBLOCK|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|TAB|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|ARRAY-SIZE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|TAB|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|ARRAY-TYPE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|TAB|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|ARRAY-DIMS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|TAB|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|ARRAY-DIM|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|TAB| |CLM|::|DIM|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|REAL-ARRAY-REF|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|TAB| |CLM|::|IND|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|INTEGER-ARRAY-REF|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|TAB| |CLM|::|IND|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-ARRAY-REF|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|RESULT| |CLM|::|TAB| |CLM|::|IND|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-ARRAY-MAKE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|KEY| |CLM|::|VAR|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ARRAY-RANK>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ARRAY-RANK>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ARRAY-RANK>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARR| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<ARRAY-RANK>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A/* (array-rank ~A) */~%"
        (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
         (|CLM|::|ARRAY-DIMS| |CLM|::|ARR|))
        (|CLM|::|CLEAN-ARG| |CLM|::|ARR|)))))))
  '(|CLM|::|RESULT| |CLM|::|ARR|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ARRAY-TOTAL-SIZE>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ARRAY-TOTAL-SIZE>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ARRAY-TOTAL-SIZE>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARR| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<ARRAY-TOTAL-SIZE>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A/* (array-total-size ~A) */~%"
        (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
         (|CLM|::|ARRAY-SIZE| |CLM|::|ARR|))
        (|CLM|::|CLEAN-ARG| |CLM|::|ARR|)))))))
  '(|CLM|::|RESULT| |CLM|::|ARR|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<LENGTH>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<LENGTH>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<LENGTH>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARR| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<LENGTH>|
       (|COMMON-LISP|::|IF|
        (|COMMON-LISP|::|AND| |CLM|::|ARR|
         (|COMMON-LISP|::|LISTP| |CLM|::|ARR|)
         (|COMMON-LISP|::|EQ| (|COMMON-LISP|::|FIRST| |CLM|::|ARR|) :|VAR|))
        (|COMMON-LISP|::|LET|
         ((|CLM|::|INFO|
           (|COMMON-LISP|::|GETHASH| (|COMMON-LISP|::|SECOND| |CLM|::|ARR|)
            |CLM|::|VARS|)))
         (|COMMON-LISP|::|IF|
          (|COMMON-LISP|::|AND| |CLM|::|INFO|
           (|COMMON-LISP|::|MEMBER| (|CLM|::|VARINFO-TYPE| |CLM|::|INFO|)
            '(:|DOUBLE-ARRAY| :|INTEGER-ARRAY|)))
          (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
           "  ~A = ~A;~80,1T/* (length ~A) */~%" (|CLM|::|LC2| |CLM|::|RESULT|)
           (|CLM|::|ARRAY-SIZE| |CLM|::|ARR|)
           (|CLM|::|CLEAN-ARG| |CLM|::|ARR|))
          (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
           "  ~A = ((clm_int[~A + ~D] == ~D) ? clm_int[clm_int[~A + ~D + 1] + 1] : ~A);~80,1T/* (length ~A) */~%"
           (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|ARR|)
           (|COMMON-LISP|::|THIRD| |CLM|::|ARR|) |CLM|::|+STRING+|
           (|CLM|::|LC2| |CLM|::|ARR|) (|COMMON-LISP|::|THIRD| |CLM|::|ARR|)
           (|CLM|::|ARRAY-SIZE| |CLM|::|ARR|)
           (|CLM|::|CLEAN-ARG| |CLM|::|ARR|))))
        (|COMMON-LISP|::|IF| (|COMMON-LISP|::|STRINGP| |CLM|::|ARR|)
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| " ~A = ~D;~%"
          (|CLM|::|LC2| |CLM|::|RESULT|)
          (|COMMON-LISP|::|LENGTH| |CLM|::|ARR|))))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARR|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ARRAY-DIMENSION>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ARRAY-DIMENSION>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ARRAY-DIMENSION>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARR| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|AXIS| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<ARRAY-DIMENSION>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A/* (array-dimension ~A ~A) */~%"
        (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL|
          "clm_int[~A + CLM_AREF_DIMS + 1 + ~A]"
          (|CLM|::|ARRAY-HEADER| |CLM|::|ARR|)
          (|CLM|::|LC-NUM-REF| |CLM|::|AXIS| :|INTEGER|)))
        (|CLM|::|CLEAN-ARG| |CLM|::|ARR|)
        (|CLM|::|CLEAN-ARG| |CLM|::|AXIS|)))))))
  '(|CLM|::|RESULT| |CLM|::|ARR| |CLM|::|AXIS|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|INDEX->CELL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|ARR| |CLM|::|INDICES|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<GEN-AREF>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<GEN-AREF>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<GEN-AREF>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARR| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|INDICES| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<GEN-AREF>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = ~A_array[(int)(~A)];~%" (|CLM|::|LC2| |CLM|::|RESULT|)
        (|CLM|::|LC2| |CLM|::|ARR|)
        (|CLM|::|INDEX->CELL| |CLM|::|ARR| |CLM|::|INDICES|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARR| |COMMON-LISP|::|&REST| |CLM|::|INDICES|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<FLOAT-AREF>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<FLOAT-AREF>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<FLOAT-AREF>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARR| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|INDEX| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<FLOAT-AREF>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = ~A[(int)(~A)];~%"
        (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|ARR|)
        (|CLM|::|LC-NUM-REF| |CLM|::|INDEX| :|INTEGER|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARR| |CLM|::|INDEX|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<SETF-FLOAT-AREF>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<SETF-FLOAT-AREF>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<SETF-FLOAT-AREF>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 5. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|TYPE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARR| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|INDEX| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CLM|::|VAL| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<SETF-FLOAT-AREF>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A[(int)(~A)] ~A ~A;~%"
        (|CLM|::|LC2| |CLM|::|ARR|)
        (|CLM|::|LC-NUM-REF| |CLM|::|INDEX| :|INTEGER|)
        (|CLM|::|SETF-TYPE->C-OP| |COMMON-LISP|::|TYPE|)
        (|CLM|::|LC-NUM-REF| |CLM|::|VAL| :|REAL|))
       |COMMON-LISP|::|NIL|)))))
  '(|COMMON-LISP|::|TYPE| |CLM|::|ARR| |CLM|::|INDEX| |CLM|::|VAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<DOUBLE-AREF>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<DOUBLE-AREF>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<DOUBLE-AREF>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARR| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|INDICES| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<DOUBLE-AREF>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = ~A[(int)(~A)];~%"
        (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|ARR|)
        (|CLM|::|INDEX->CELL| |CLM|::|ARR| |CLM|::|INDICES|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARR| |COMMON-LISP|::|&REST| |CLM|::|INDICES|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<INTEGER-AREF>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<INTEGER-AREF>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<INTEGER-AREF>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARR| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|INDICES| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<INTEGER-AREF>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = ~A[(int)(~A)];~%"
        (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|ARR|)
        (|CLM|::|INDEX->CELL| |CLM|::|ARR| |CLM|::|INDICES|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARR| |COMMON-LISP|::|&REST| |CLM|::|INDICES|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<SETF-DOUBLE-AREF>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<SETF-DOUBLE-AREF>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<SETF-DOUBLE-AREF>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|TYPE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARGS| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<SETF-DOUBLE-AREF>|
       (|COMMON-LISP|::|LET*|
        ((|CLM|::|ARR| (|COMMON-LISP|::|FIRST| |CLM|::|ARGS|))
         (|CLM|::|VAL|
          (|COMMON-LISP|::|FIRST| (|COMMON-LISP|::|LAST| |CLM|::|ARGS|)))
         (|CLM|::|INDICES|
          (|COMMON-LISP|::|BUTLAST| (|COMMON-LISP|::|CDR| |CLM|::|ARGS|))))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A[(int)(~A)] ~A ~A;~%"
         (|CLM|::|LC2| |CLM|::|ARR|)
         (|CLM|::|INDEX->CELL| |CLM|::|ARR| |CLM|::|INDICES|)
         (|CLM|::|SETF-TYPE->C-OP| |COMMON-LISP|::|TYPE|)
         (|CLM|::|LC-NUM-REF| |CLM|::|VAL| :|REAL|))
        |COMMON-LISP|::|NIL|))))))
  '(|COMMON-LISP|::|TYPE| |COMMON-LISP|::|&REST| |CLM|::|ARGS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<SETF-INTEGER-AREF>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<SETF-INTEGER-AREF>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<SETF-INTEGER-AREF>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|TYPE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARGS| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<SETF-INTEGER-AREF>|
       (|COMMON-LISP|::|LET*|
        ((|CLM|::|ARR| (|COMMON-LISP|::|FIRST| |CLM|::|ARGS|))
         (|CLM|::|VAL|
          (|COMMON-LISP|::|FIRST| (|COMMON-LISP|::|LAST| |CLM|::|ARGS|)))
         (|CLM|::|INDICES|
          (|COMMON-LISP|::|BUTLAST| (|COMMON-LISP|::|CDR| |CLM|::|ARGS|))))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A[(int)(~A)] ~A ~A;~%"
         (|CLM|::|LC2| |CLM|::|ARR|)
         (|CLM|::|INDEX->CELL| |CLM|::|ARR| |CLM|::|INDICES|)
         (|CLM|::|SETF-TYPE->C-OP| |COMMON-LISP|::|TYPE|)
         (|CLM|::|LC-NUM-REF| |CLM|::|VAL| :|INTEGER|))
        |COMMON-LISP|::|NIL|))))))
  '(|COMMON-LISP|::|TYPE| |COMMON-LISP|::|&REST| |CLM|::|ARGS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<AREF>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<AREF>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<AREF>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARR| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|INDICES| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<AREF>|
       (|COMMON-LISP|::|IF| (|COMMON-LISP|::|NULL| |CLM|::|INDICES|)
        (|COMMON-LISP|::|WARN| "(aref ~A~{ ~A~}))?" |CLM|::|ARR|
         |CLM|::|INDICES|))
       (|COMMON-LISP|::|LET*|
        ((|CLM|::|LRESNAME| (|COMMON-LISP|::|SECOND| |CLM|::|RESULT|))
         (|CLM|::|RESDEPTH|
          (|COMMON-LISP|::|*| 2. (|COMMON-LISP|::|THIRD| |CLM|::|RESULT|)))
         (|CLM|::|RESLST|
          (|COMMON-LISP|::|GETHASH| |CLM|::|LRESNAME| |CLM|::|VARS|))
         (|CLM|::|RESNAME| (|CLM|::|LC| |CLM|::|LRESNAME|))
         (|CLM|::|LCI| (|CLM|::|INDEX->CELL| |CLM|::|ARR| |CLM|::|INDICES|))
         (|CLM|::|ARRINFO|
          (|COMMON-LISP|::|GETHASH| (|COMMON-LISP|::|SECOND| |CLM|::|ARR|)
           |CLM|::|VARS|)))
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|OR| (|CLM|::|VARINFO-GEN-TYPE| |CLM|::|RESLST|)
          (|COMMON-LISP|::|AND| |CLM|::|ARRINFO|
           (|COMMON-LISP|::|EQ| (|CLM|::|VARINFO-GEN-TYPE| |CLM|::|ARRINFO|)
            :|MUS-ANY-ARRAY|)))
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  ~A = ~A_array[(int)(~A)];~%" (|CLM|::|LC2| |CLM|::|RESULT|)
          (|CLM|::|LC2| |CLM|::|ARR|)
          (|CLM|::|INDEX->CELL| |CLM|::|ARR| |CLM|::|INDICES|))
         (|COMMON-LISP|::|PROGN|
          (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  {int lci; lci = ~A;~%"
           |CLM|::|LCI|)
          (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
           (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
            "  if (lci < 0) {mus_error(0, \"~A[%d]?\", lci); goto RUN_ALL_DONE;}~%   ~\n
                          else if (lci >= ~A) {mus_error(0, \"invalid index: ~A[%d > %d]\", lci, ~A); goto RUN_ALL_DONE;}~%"
            (|CLM|::|CLEAN-ARG| |CLM|::|ARR|)
            (|CLM|::|ARRAY-SIZE| |CLM|::|ARR|)
            (|CLM|::|CLEAN-ARG| |CLM|::|ARR|)
            (|CLM|::|ARRAY-SIZE| |CLM|::|ARR|)))
          (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  switch (~A)~%    {~%"
           (|CLM|::|ARRAY-TYPE| |CLM|::|ARR|))
          (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "    case ~A: ~A break;~%"
           |CLM|::|+REAL-ARRAY+|
           (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
            (|CLM|::|REAL-ARRAY-REF| |CLM|::|ARR| "lci")))
          (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "    case ~A: ~A break;~%"
           |CLM|::|+INTEGER-ARRAY+|
           (|CLM|::|LC-SET| |CLM|::|+SETF+| |CLM|::|RESULT|
            (|CLM|::|INTEGER-ARRAY-REF| |CLM|::|ARR| "lci") :|INTEGER|))
          (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
           "    default: {~%      int iblock, rblock;~%")
          (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
           "      iblock = ~A + (lci * 2); rblock = ~A + lci;~%"
           (|CLM|::|ARRAY-IBLOCK| |CLM|::|ARR|)
           (|CLM|::|ARRAY-RBLOCK| |CLM|::|ARR|))
          (|COMMON-LISP|::|IF|
           (|COMMON-LISP|::|MEMBER| (|CLM|::|VARINFO-TYPE| |CLM|::|RESLST|)
            '(:|CLM-INTEGER| :|CLM-BOOLEAN| :|CLM-REAL|))
           (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
            "      if (clm_int[iblock] == ~A) ~A = (clm_double[rblock]); else ~A = (clm_int[iblock + 1]);~%"
            |CLM|::|+REAL+| |CLM|::|RESNAME| |CLM|::|RESNAME|)
           (|COMMON-LISP|::|IF|
            (|COMMON-LISP|::|MEMBER| (|CLM|::|VARINFO-TYPE| |CLM|::|RESLST|)
             '(:|INTEGER| :|REAL| :|BOOLEAN|))
            (|COMMON-LISP|::|IF|
             (|COMMON-LISP|::|AND| (|CLM|::|VARINFO-SHADOWED| |CLM|::|RESLST|)
              (|COMMON-LISP|::|>| |CLM|::|RESDEPTH| 0.))
             (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
              "      if (clm_int[iblock] == ~A) ~A_~D = (clm_double[rblock]); else ~A_~D = (clm_int[iblock + 1]);~%"
              |CLM|::|+REAL+| |CLM|::|RESNAME| |CLM|::|RESDEPTH|
              |CLM|::|RESNAME| |CLM|::|RESDEPTH|)
             (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
              "      if (clm_int[iblock] == ~A) ~A = (clm_double[rblock]); else ~A = (clm_int[iblock + 1]);~%"
              |CLM|::|+REAL+| |CLM|::|RESNAME| |CLM|::|RESNAME|))
            (|COMMON-LISP|::|PROGN|
             (|COMMON-LISP|::|IF| |CLM|::|*CLM-DEBUG*|
              (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|T| "untyped array: ~A~%"
               (|COMMON-LISP|::|SECOND| |CLM|::|ARR|)))
             (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
              "      clm_int[~A + ~D] = clm_int[iblock];~%" |CLM|::|RESNAME|
              |CLM|::|RESDEPTH|)
             (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
              "      clm_int[~A + ~D + 1] = clm_int[iblock+1];~%"
              |CLM|::|RESNAME| |CLM|::|RESDEPTH|)
             (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
              "      clm_double[~A_r + ~D] = clm_double[rblock];~%"
              |CLM|::|RESNAME| |CLM|::|RESDEPTH|))))
          (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  }}}~%~%"))))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARR| |COMMON-LISP|::|&REST| |CLM|::|INDICES|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<SETF-AREF>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<SETF-AREF>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<SETF-AREF>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|TYPE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARGS| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<SETF-AREF>|
       (|COMMON-LISP|::|IF|
        (|COMMON-LISP|::|<| (|COMMON-LISP|::|LENGTH| |CLM|::|ARGS|) 3.)
        (|COMMON-LISP|::|WARN| "(~A (aref~{ ~A~}))?"
         (|CLM|::|SETF-TYPE->LISP-OP| |COMMON-LISP|::|TYPE|)
         (|COMMON-LISP|::|BUTLAST| |CLM|::|ARGS|)))
       (|COMMON-LISP|::|LET*|
        ((|CLM|::|ARR| (|COMMON-LISP|::|FIRST| |CLM|::|ARGS|))
         (|CLM|::|VAL|
          (|COMMON-LISP|::|FIRST| (|COMMON-LISP|::|LAST| |CLM|::|ARGS|)))
         (|CLM|::|INDICES|
          (|COMMON-LISP|::|BUTLAST| (|COMMON-LISP|::|CDR| |CLM|::|ARGS|)))
         (|CLM|::|OP| (|CLM|::|SETF-TYPE->C-OP| |COMMON-LISP|::|TYPE|))
         (|CLM|::|LCI| (|CLM|::|INDEX->CELL| |CLM|::|ARR| |CLM|::|INDICES|)))
        (|COMMON-LISP|::|IF| (|COMMON-LISP|::|NULL| |CLM|::|LCI|)
         (|COMMON-LISP|::|WARN| "no array indices: (~A (aref ~{ ~A~}))?"
          (|CLM|::|SETF-TYPE->LISP-OP| |COMMON-LISP|::|TYPE|)
          (|COMMON-LISP|::|BUTLAST| |CLM|::|ARGS|)))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  {int lci; lci = ~A;~%"
         |CLM|::|LCI|)
        (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  if (lci < 0) mus_error(0, \"~A[%d]?\", lci);~%   ~\n
                          else if (lci >= ~A) mus_error(0, \"invalid index: ~A[%d > %d]\", lci, ~A);~%"
          (|CLM|::|CLEAN-ARG| |CLM|::|ARR|) (|CLM|::|ARRAY-SIZE| |CLM|::|ARR|)
          (|CLM|::|CLEAN-ARG| |CLM|::|ARR|)
          (|CLM|::|ARRAY-SIZE| |CLM|::|ARR|)))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  switch (~A)~%    {~%"
         (|CLM|::|ARRAY-TYPE| |CLM|::|ARR|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "    case ~A: ~A ~A ~A; break;~%" |CLM|::|+REAL-ARRAY+|
         (|CLM|::|REAL-ARRAY-REF| |CLM|::|ARR| "lci") |CLM|::|OP|
         (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "    case ~A: ~A ~A ~A; break;~%" |CLM|::|+INTEGER-ARRAY+|
         (|CLM|::|INTEGER-ARRAY-REF| |CLM|::|ARR| "lci") |CLM|::|OP|
         (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "    default: {~%      int iblock,rblock;~%")
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "      iblock = ~A + (lci*2); rblock = ~A + lci;~%"
         (|CLM|::|ARRAY-IBLOCK| |CLM|::|ARR|)
         (|CLM|::|ARRAY-RBLOCK| |CLM|::|ARR|))
        (|COMMON-LISP|::|IF| (|COMMON-LISP|::|CONSTANTP| |CLM|::|VAL|)
         (|COMMON-LISP|::|IF|
          (|COMMON-LISP|::|EQ| |CLM|::|VAL| |COMMON-LISP|::|T|)
          (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
           "    clm_int[iblock] = ~D; clm_int[iblock + 1] = 1;~%"
           |CLM|::|+NO-TYPE+|)
          (|COMMON-LISP|::|IF|
           (|COMMON-LISP|::|EQ| |CLM|::|VAL| |COMMON-LISP|::|NIL|)
           (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
            "    clm_int[iblock] = ~D; clm_int[iblock + 1] = 0;~%"
            |CLM|::|+NO-TYPE+|)
           (|COMMON-LISP|::|IF| (|COMMON-LISP|::|INTEGERP| |CLM|::|VAL|)
            (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
             "    clm_int[iblock] = ~D; clm_int[iblock + 1] ~A ~D;~%"
             |CLM|::|+INTEGER+| |CLM|::|OP| |CLM|::|VAL|)
            (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
             "    clm_int[iblock] = ~D; clm_double[rblock] ~A ~A;~%"
             |CLM|::|+REAL+| |CLM|::|OP| (|CLM|::|LC-NUM-REF| |CLM|::|VAL|)))))
         (|COMMON-LISP|::|LET*|
          ((|CLM|::|LRESNAME| (|COMMON-LISP|::|SECOND| |CLM|::|VAL|))
           (|CLM|::|RESDEPTH| (|COMMON-LISP|::|THIRD| |CLM|::|VAL|))
           (|CLM|::|RESLST|
            (|COMMON-LISP|::|GETHASH| |CLM|::|LRESNAME| |CLM|::|VARS|))
           (|CLM|::|RESNAME| (|CLM|::|LC| |CLM|::|LRESNAME|)))
          (|COMMON-LISP|::|IF|
           (|COMMON-LISP|::|MEMBER| (|CLM|::|VARINFO-TYPE| |CLM|::|RESLST|)
            '(:|CLM-INTEGER| :|CLM-BOOLEAN| :|INTEGER| :|BOOLEAN|))
           (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
            "      clm_int[iblock] = ~D; clm_int[iblock+1] ~A ~A;~%"
            |CLM|::|+INTEGER+| |CLM|::|OP| (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))
           (|COMMON-LISP|::|IF|
            (|COMMON-LISP|::|MEMBER| (|CLM|::|VARINFO-TYPE| |CLM|::|RESLST|)
             '(:|CLM-REAL| :|REAL|))
            (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
             "      clm_int[iblock] = ~D; clm_double[rblock] ~A ~A;~%"
             |CLM|::|+REAL+| |CLM|::|OP| (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))
            (|COMMON-LISP|::|PROGN|
             (|COMMON-LISP|::|IF| |CLM|::|*CLM-DEBUG*|
              (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|T|
               "set untyped array: ~A~%"
               (|COMMON-LISP|::|SECOND| |CLM|::|ARR|)))
             (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
              "      clm_int[iblock] = clm_int[~A + ~D];~%" |CLM|::|RESNAME|
              (|COMMON-LISP|::|*| 2. |CLM|::|RESDEPTH|))
             (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
              "      clm_int[iblock + 1] ~A clm_int[~A + ~D + 1];~%"
              |CLM|::|OP| |CLM|::|RESNAME|
              (|COMMON-LISP|::|*| 2. |CLM|::|RESDEPTH|))
             (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
              "      clm_double[rblock] ~A clm_double[~A_r+~D];~%" |CLM|::|OP|
              |CLM|::|RESNAME| |CLM|::|RESDEPTH|))))))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  }}}~%~%"))
       |COMMON-LISP|::|NIL|)))))
  '(|COMMON-LISP|::|TYPE| |COMMON-LISP|::|&REST| |CLM|::|ARGS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ARRAY-IN-BOUNDS-P>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ARRAY-IN-BOUNDS-P>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ARRAY-IN-BOUNDS-P>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARR| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|INDICES| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<ARRAY-IN-BOUNDS-P>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = (~{(~A >= 0) && (~A < ~A)~^ && ~});~%"
        (|CLM|::|LC2| |CLM|::|RESULT|)
        (|COMMON-LISP|::|LOOP| |CLM|::|FOR| |CLM|::|INDEX| |CLM|::|IN|
         |CLM|::|INDICES| |COMMON-LISP|::|AND| |CLM|::|I| |CLM|::|FROM| 0.
         |CLM|::|COLLECT| (|CLM|::|LC-NUM-REF| |CLM|::|INDEX|) |CLM|::|COLLECT|
         (|CLM|::|LC-NUM-REF| |CLM|::|INDEX|) |CLM|::|COLLECT|
         (|CLM|::|ARRAY-DIM| |CLM|::|ARR| |CLM|::|I|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|ARR| |COMMON-LISP|::|&REST| |CLM|::|INDICES|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|LC-ARR-REF|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|N|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<CLEAR-ARRAY>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<CLEAR-ARRAY>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<CLEAR-ARRAY>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|DATA| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|LEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<CLEAR-ARRAY>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  memset((void *)(~A), 0, (~A) * sizeof(mus_float_t));~%"
        (|CLM|::|LC-ARR-REF| |CLM|::|DATA|)
        (|COMMON-LISP|::|IF| |CLM|::|LEN|
         (|CLM|::|LC-NUM-REF| |CLM|::|LEN| :|INTEGER|)
         (|CLM|::|ARRAY-SIZE| |CLM|::|DATA|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|DATA| |COMMON-LISP|::|&OPTIONAL| |CLM|::|LEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<RECTANGULAR2POLAR>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<RECTANGULAR2POLAR>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<RECTANGULAR2POLAR>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RDATA| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|IDATA| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|LEN| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<RECTANGULAR2POLAR>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  mus_rectangular_to_polar(~A, ~A, ~A);~%"
        (|CLM|::|LC-ARR-REF| |CLM|::|RDATA|)
        (|CLM|::|LC-ARR-REF| |CLM|::|IDATA|)
        (|COMMON-LISP|::|IF| |CLM|::|LEN|
         (|CLM|::|LC-NUM-REF| |CLM|::|LEN| :|INTEGER|)
         (|CLM|::|ARRAY-SIZE| |CLM|::|RDATA|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RDATA| |CLM|::|IDATA| |COMMON-LISP|::|&OPTIONAL| |CLM|::|LEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<RECTANGULAR2MAGNITUDES>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<RECTANGULAR2MAGNITUDES>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<RECTANGULAR2MAGNITUDES>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RDATA| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|IDATA| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|LEN| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<RECTANGULAR2MAGNITUDES>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  mus_rectangular_to_magnitudes(~A, ~A, ~A);~%"
        (|CLM|::|LC-ARR-REF| |CLM|::|RDATA|)
        (|CLM|::|LC-ARR-REF| |CLM|::|IDATA|)
        (|COMMON-LISP|::|IF| |CLM|::|LEN|
         (|CLM|::|LC-NUM-REF| |CLM|::|LEN| :|INTEGER|)
         (|CLM|::|ARRAY-SIZE| |CLM|::|RDATA|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RDATA| |CLM|::|IDATA| |COMMON-LISP|::|&OPTIONAL| |CLM|::|LEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<POLAR2RECTANGULAR>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<POLAR2RECTANGULAR>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<POLAR2RECTANGULAR>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RDATA| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|IDATA| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|LEN| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<POLAR2RECTANGULAR>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  mus_polar_to_rectangular(~A, ~A, ~A);~%"
        (|CLM|::|LC-ARR-REF| |CLM|::|RDATA|)
        (|CLM|::|LC-ARR-REF| |CLM|::|IDATA|)
        (|COMMON-LISP|::|IF| |CLM|::|LEN|
         (|CLM|::|LC-NUM-REF| |CLM|::|LEN| :|INTEGER|)
         (|CLM|::|ARRAY-SIZE| |CLM|::|RDATA|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RDATA| |CLM|::|IDATA| |COMMON-LISP|::|&OPTIONAL| |CLM|::|LEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<POLYNOMIAL>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<POLYNOMIAL>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<POLYNOMIAL>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|TAB| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|X| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CLM|::|LEN| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<POLYNOMIAL>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_polynomial(~A, ~A, ~A);~%" (|CLM|::|LC2| |CLM|::|RESULT|)
        (|CLM|::|LC-ARR-REF| |CLM|::|TAB|) (|CLM|::|LC-NUM-REF| |CLM|::|X|)
        (|COMMON-LISP|::|IF| |CLM|::|LEN|
         (|CLM|::|LC-NUM-REF| |CLM|::|LEN| :|INTEGER|)
         (|CLM|::|ARRAY-SIZE| |CLM|::|TAB|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|TAB| |CLM|::|X| |COMMON-LISP|::|&OPTIONAL|
    |CLM|::|LEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<CHEBYSHEV-U-SUM>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<CHEBYSHEV-U-SUM>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<CHEBYSHEV-U-SUM>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|X| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|UN| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<CHEBYSHEV-U-SUM>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_chebyshev_u_sum(~A, ~A, ~A);~%"
        (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC-NUM-REF| |CLM|::|X|)
        (|CLM|::|ARRAY-SIZE| |CLM|::|UN|) (|CLM|::|LC-ARR-REF| |CLM|::|UN|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|X| |CLM|::|UN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<CHEBYSHEV-T-SUM>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<CHEBYSHEV-T-SUM>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<CHEBYSHEV-T-SUM>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|X| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|TN| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<CHEBYSHEV-T-SUM>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_chebyshev_t_sum(~A, ~A, ~A);~%"
        (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC-NUM-REF| |CLM|::|X|)
        (|CLM|::|ARRAY-SIZE| |CLM|::|TN|) (|CLM|::|LC-ARR-REF| |CLM|::|TN|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|X| |CLM|::|TN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<CHEBYSHEV-TU-SUM>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<CHEBYSHEV-TU-SUM>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<CHEBYSHEV-TU-SUM>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 5. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|X| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|TN| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CLM|::|UN| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<CHEBYSHEV-TU-SUM>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_chebyshev_tu_sum(~A, ~A, ~A, ~A);~%"
        (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC-NUM-REF| |CLM|::|X|)
        (|CLM|::|ARRAY-SIZE| |CLM|::|TN|) (|CLM|::|LC-ARR-REF| |CLM|::|TN|)
        (|CLM|::|LC-ARR-REF| |CLM|::|UN|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|X| |CLM|::|TN| |CLM|::|UN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<DOT-PRODUCT>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<DOT-PRODUCT>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<DOT-PRODUCT>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S1| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|S2| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CLM|::|LEN| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<DOT-PRODUCT>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_dot_product(~A, ~A, ~A);~%" (|CLM|::|LC2| |CLM|::|RESULT|)
        (|CLM|::|LC-ARR-REF| |CLM|::|S1|) (|CLM|::|LC-ARR-REF| |CLM|::|S2|)
        (|COMMON-LISP|::|IF| |CLM|::|LEN|
         (|CLM|::|LC-NUM-REF| |CLM|::|LEN| :|INTEGER|)
         (|CLM|::|ARRAY-SIZE| |CLM|::|S1|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S1| |CLM|::|S2| |COMMON-LISP|::|&OPTIONAL|
    |CLM|::|LEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<FFT>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<FFT>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<FFT>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RDATA| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|IDATA| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|N| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CLM|::|SIGN|
        (|COMMON-LISP|::|IF| (|COMMON-LISP|::|CDDDDR| . #1#)
         (|COMMON-LISP|::|FIFTH| . #1#) 1.)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<FFT>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  mus_fft(~A, ~A, ~A, ~A);"
        (|CLM|::|LC-ARR-REF| |CLM|::|RDATA|)
        (|CLM|::|LC-ARR-REF| |CLM|::|IDATA|)
        (|CLM|::|LC-NUM-REF| |CLM|::|N| :|INTEGER|)
        (|CLM|::|LC-NUM-REF| |CLM|::|SIGN| :|INTEGER|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RDATA| |CLM|::|IDATA| |CLM|::|N| |COMMON-LISP|::|&OPTIONAL|
    (|CLM|::|SIGN| 1.))))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<AUTOCORRELATE>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<AUTOCORRELATE>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<AUTOCORRELATE>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RDATA| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|N| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<AUTOCORRELATE>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  mus_autocorrelate(~A, ~A);" (|CLM|::|LC-ARR-REF| |CLM|::|RDATA|)
        (|CLM|::|LC-NUM-REF| |CLM|::|N| :|INTEGER|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RDATA| |CLM|::|N|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<CORRELATE>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<CORRELATE>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<CORRELATE>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RDATA| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|IDATA| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|N| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<CORRELATE>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  mus_correlate(~A, ~A, ~A);" (|CLM|::|LC-ARR-REF| |CLM|::|RDATA|)
        (|CLM|::|LC-ARR-REF| |CLM|::|IDATA|)
        (|CLM|::|LC-NUM-REF| |CLM|::|N| :|INTEGER|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RDATA| |CLM|::|IDATA| |CLM|::|N|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<CONVOLUTION>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<CONVOLUTION>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<CONVOLUTION>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RDATA| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|IDATA| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|N| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<CONVOLUTION>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  mus_convolution(~A, ~A, ~A);" (|CLM|::|LC-ARR-REF| |CLM|::|RDATA|)
        (|CLM|::|LC-ARR-REF| |CLM|::|IDATA|)
        (|CLM|::|LC-NUM-REF| |CLM|::|N| :|INTEGER|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RDATA| |CLM|::|IDATA| |CLM|::|N|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<SPECTRUM>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<SPECTRUM>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<SPECTRUM>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 5. 6.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RDATA| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|IDATA| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|WINDOW| (|COMMON-LISP|::|CADDDR| . #1#))
       (|COMMON-LISP|::|TYPE| (|COMMON-LISP|::|FIFTH| . #1#))
       (|CLM|::|LEN| (|COMMON-LISP|::|CADR| (|COMMON-LISP|::|CDDDDR| . #1#))))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<SPECTRUM>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  mus_spectrum(~A, ~A, ~A, ~A, ~A);~%"
        (|CLM|::|LC-ARR-REF| |CLM|::|RDATA|)
        (|CLM|::|LC-ARR-REF| |CLM|::|IDATA|)
        (|CLM|::|LC-ARR-REF| |CLM|::|WINDOW|)
        (|COMMON-LISP|::|IF| |CLM|::|LEN|
         (|CLM|::|LC-NUM-REF| |CLM|::|LEN| :|INTEGER|)
         (|CLM|::|ARRAY-SIZE| |CLM|::|WINDOW|))
        (|CLM|::|LC-NUM-REF| |COMMON-LISP|::|TYPE| :|INTEGER|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RDATA| |CLM|::|IDATA| |CLM|::|WINDOW| |COMMON-LISP|::|TYPE|
    |COMMON-LISP|::|&OPTIONAL| |CLM|::|LEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<COMMENT>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<COMMENT>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<COMMENT>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|FUNC| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARGS| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<COMMENT>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "~80,1T/* (~(~A~)~A */~%"
        |CLM|::|FUNC|
        (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "~{ ~(~A~)~}"
         |CLM|::|ARGS|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|FUNC| |COMMON-LISP|::|&REST| |CLM|::|ARGS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<HZ2RADIANS>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<HZ2RADIANS>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<HZ2RADIANS>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|VAL| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<HZ2RADIANS>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_hz_to_radians(~A);~%" (|CLM|::|LC2| |CLM|::|RESULT|)
        (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|VAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<RADIANS2HZ>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<RADIANS2HZ>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<RADIANS2HZ>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|VAL| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<RADIANS2HZ>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_radians_to_hz(~A);~%" (|CLM|::|LC2| |CLM|::|RESULT|)
        (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|VAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<DEGREES2RADIANS>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<DEGREES2RADIANS>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<DEGREES2RADIANS>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|VAL| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<DEGREES2RADIANS>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_degrees_to_radians(~A);~%" (|CLM|::|LC2| |CLM|::|RESULT|)
        (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|VAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<RADIANS2DEGREES>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<RADIANS2DEGREES>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<RADIANS2DEGREES>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|VAL| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<RADIANS2DEGREES>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_radians_to_degrees(~A);~%" (|CLM|::|LC2| |CLM|::|RESULT|)
        (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|VAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<DB2LINEAR>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<DB2LINEAR>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<DB2LINEAR>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|VAL| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<DB2LINEAR>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_db_to_linear(~A);~%" (|CLM|::|LC2| |CLM|::|RESULT|)
        (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|VAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<LINEAR2DB>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<LINEAR2DB>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<LINEAR2DB>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|VAL| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<LINEAR2DB>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_linear_to_db(~A);~%" (|CLM|::|LC2| |CLM|::|RESULT|)
        (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|VAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<SECONDS2SAMPLES>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<SECONDS2SAMPLES>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<SECONDS2SAMPLES>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|VAL| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<SECONDS2SAMPLES>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_seconds_to_samples(~A);~%" (|CLM|::|LC2| |CLM|::|RESULT|)
        (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|VAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<SAMPLES2SECONDS>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<SAMPLES2SECONDS>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<SAMPLES2SECONDS>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|VAL| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<SAMPLES2SECONDS>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_samples_to_seconds(~A);~%" (|CLM|::|LC2| |CLM|::|RESULT|)
        (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|VAL|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|PRETTY-COMMENT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|FUNC| |CLM|::|GEN| |COMMON-LISP|::|&OPTIONAL| |CLM|::|FM1|
    |CLM|::|FM2|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|RUN-TYPE->CLASS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|TYPE|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<STRING?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<STRING?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<STRING?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<STRING?>|
       (|CLM|::|LC-CHECK-TYPE| |CLM|::|RES| |CLM|::|ARG| |CLM|::|+STRING+|
        "string?"
        #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|ARG|)
           (|COMMON-LISP|::|IF|
            (|COMMON-LISP|::|AND| |CLM|::|ARG|
             (|COMMON-LISP|::|STRINGP| |CLM|::|ARG|))
            "true" "false"))
        #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|TYP|)
           (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |CLM|::|TYP|))
           "false"))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|UNLOAD-STRING|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|I| |CLM|::|R| |CLM|::|DATAI| |CLM|::|DATAR|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<PROBE-FILE>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<PROBE-FILE>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<PROBE-FILE>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<PROBE-FILE>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_file_probe((char *)(~A));~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC-REF| |CLM|::|ARG| :|STRING|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<SOUND-DURATION>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<SOUND-DURATION>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<SOUND-DURATION>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<SOUND-DURATION>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_sound_duration((char *)(~A));~%"
        (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC-REF| |CLM|::|ARG| :|STRING|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<SOUND-CHANS>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<SOUND-CHANS>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<SOUND-CHANS>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<SOUND-CHANS>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_sound_chans((char *)(~A));~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC-REF| |CLM|::|ARG| :|STRING|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<SOUND-DATA-FORMAT>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<SOUND-DATA-FORMAT>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<SOUND-DATA-FORMAT>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<SOUND-DATA-FORMAT>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_sound_sample_type((char *)(~A));~%"
        (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC-REF| |CLM|::|ARG| :|STRING|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<SOUND-DATA-LOCATION>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<SOUND-DATA-LOCATION>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<SOUND-DATA-LOCATION>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<SOUND-DATA-LOCATION>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_sound_data_location((char *)(~A));~%"
        (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC-REF| |CLM|::|ARG| :|STRING|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<SOUND-DATUM-SIZE>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<SOUND-DATUM-SIZE>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<SOUND-DATUM-SIZE>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<SOUND-DATUM-SIZE>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_sound_datum_size((char *)(~A));~%"
        (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC-REF| |CLM|::|ARG| :|STRING|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<SOUND-HEADER-TYPE>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<SOUND-HEADER-TYPE>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<SOUND-HEADER-TYPE>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<SOUND-HEADER-TYPE>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_sound_header_type((char *)(~A));~%"
        (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC-REF| |CLM|::|ARG| :|STRING|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<SOUND-LENGTH>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<SOUND-LENGTH>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<SOUND-LENGTH>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<SOUND-LENGTH>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_sound_length((char *)(~A));~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC-REF| |CLM|::|ARG| :|STRING|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<SOUND-SAMPLES>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<SOUND-SAMPLES>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<SOUND-SAMPLES>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<SOUND-SAMPLES>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_sound_samples((char *)(~A));~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC-REF| |CLM|::|ARG| :|STRING|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<SOUND-FRAMPLES>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<SOUND-FRAMPLES>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<SOUND-FRAMPLES>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<SOUND-FRAMPLES>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_sound_framples((char *)(~A));~%"
        (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC-REF| |CLM|::|ARG| :|STRING|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<SOUND-SRATE>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<SOUND-SRATE>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<SOUND-SRATE>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<SOUND-SRATE>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_sound_srate((char *)(~A));~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC-REF| |CLM|::|ARG| :|STRING|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<SOUND-COMMENT>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<SOUND-COMMENT>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<SOUND-COMMENT>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|FILE| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<SOUND-COMMENT>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  if (~A) free(~A);~%"
        (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|RES|))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_sound_comment(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|FILE|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|FILE|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|CIADR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|ILOC| |FFI|::|OFFSET|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|CRADR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|ILOC| |FFI|::|OFFSET|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<FRAMPLE2FILE>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<FRAMPLE2FILE>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<FRAMPLE2FILE>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|STREAM|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|PASS| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|INF| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<FRAMPLE2FILE>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  mus_frample_to_file(~A, ~A, ~A);~%"
        (|CLM|::|LC2| |COMMON-LISP|::|STREAM|)
        (|CLM|::|LC-NUM-REF| |CLM|::|PASS| :|INTEGER|)
        (|CLM|::|LC2| |CLM|::|INF|))
       |COMMON-LISP|::|NIL|)))))
  '(|COMMON-LISP|::|STREAM| |CLM|::|PASS| |CLM|::|INF|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<FRAMPLE2FRAMPLE>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<FRAMPLE2FRAMPLE>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<FRAMPLE2FRAMPLE>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|MX1| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|FR2| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|OUTF| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<FRAMPLE2FRAMPLE>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  mus_frample_to_frample(~A, CLM_ARR_SIZE(CLM_VAR_ADDR(~A)), ~A, CLM_ARR_SIZE(CLM_VAR_ADDR(~A)), ~A, CLM_ARR_SIZE(CLM_VAR_ADDR(~A)));~%"
        (|CLM|::|LC2| |CLM|::|MX1|)
        (|CLM|::|VARINFO-ILOC|
         (|COMMON-LISP|::|GETHASH| (|COMMON-LISP|::|SECOND| |CLM|::|MX1|)
          |CLM|::|VARS|))
        (|CLM|::|LC2| |CLM|::|FR2|)
        (|CLM|::|VARINFO-ILOC|
         (|COMMON-LISP|::|GETHASH| (|COMMON-LISP|::|SECOND| |CLM|::|FR2|)
          |CLM|::|VARS|))
        (|CLM|::|LC2| |CLM|::|OUTF|)
        (|CLM|::|VARINFO-ILOC|
         (|COMMON-LISP|::|GETHASH| (|COMMON-LISP|::|SECOND| |CLM|::|OUTF|)
          |CLM|::|VARS|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|MX1| |CLM|::|FR2| |CLM|::|OUTF|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<OSCIL?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<OSCIL?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<OSCIL?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<OSCIL?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = mus_is_oscil(~A);~%"
        (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<OSCIL>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<OSCIL>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<OSCIL>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|FM| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CLM|::|PM| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<OSCIL>|
       (|COMMON-LISP|::|LET*|
        ((|CLM|::|PM-IN-USE|
          (|COMMON-LISP|::|AND| |CLM|::|PM|
           (|COMMON-LISP|::|OR|
            (|COMMON-LISP|::|NOT| (|COMMON-LISP|::|CONSTANTP| |CLM|::|PM|))
            (|COMMON-LISP|::|NOT| (|COMMON-LISP|::|ZEROP| |CLM|::|PM|)))))
         (|CLM|::|FM-IN-USE|
          (|COMMON-LISP|::|AND| |CLM|::|FM|
           (|COMMON-LISP|::|OR|
            (|COMMON-LISP|::|NOT| (|COMMON-LISP|::|CONSTANTP| |CLM|::|FM|))
            (|COMMON-LISP|::|NOT| (|COMMON-LISP|::|ZEROP| |CLM|::|FM|)))))
         (|CLM|::|CNAME| (|CLM|::|LC2| |CLM|::|S|))
         (|CLM|::|RESNAME| (|CLM|::|LC2| |CLM|::|RESULT|)))
        (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  if (!(mus_is_oscil(~A))) {mus_error(0, \"oscil ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
          |CLM|::|CNAME| (|CLM|::|CLEAN-ARG| |CLM|::|S|) |CLM|::|CNAME|))
        (|COMMON-LISP|::|IF| |CLM|::|PM-IN-USE|
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  ~A = mus_oscil(~A, ~A, ~A);~80,1T/* (oscil ~A ~A ~A) */~%"
          |CLM|::|RESNAME| |CLM|::|CNAME| (|CLM|::|LC-NUM-REF| |CLM|::|FM|)
          (|CLM|::|LC-NUM-REF| |CLM|::|PM|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
          (|CLM|::|CLEAN-ARG| |CLM|::|FM|) (|CLM|::|CLEAN-ARG| |CLM|::|PM|))
         (|COMMON-LISP|::|IF| |CLM|::|FM-IN-USE|
          (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
           "  ~A = mus_oscil_fm(~A, ~A);~80,1T/* (oscil ~A ~A) */~%"
           |CLM|::|RESNAME| |CLM|::|CNAME| (|CLM|::|LC-NUM-REF| |CLM|::|FM|)
           (|CLM|::|CLEAN-ARG| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|FM|))
          (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
           "  ~A = mus_oscil_unmodulated(~A);~80,1T/* (oscil ~A) */~%"
           |CLM|::|RESNAME| |CLM|::|CNAME| (|CLM|::|CLEAN-ARG| |CLM|::|S|))))
        |COMMON-LISP|::|NIL|))))))
  '(|CLM|::|RESULT| |CLM|::|S| |COMMON-LISP|::|&OPTIONAL| |CLM|::|FM|
    |CLM|::|PM|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|LOAD-SW|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|GEN| |CLM|::|I| |CLM|::|R| |CLM|::|DATAI| |CLM|::|DATAR|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|UNLOAD-SW|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|GEN| |CLM|::|IADR| |CLM|::|RADR| |CLM|::|DATAI| |CLM|::|DATAR|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<SQUARE-WAVE?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<SQUARE-WAVE?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<SQUARE-WAVE?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<SQUARE-WAVE?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_is_square_wave(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<PULSE-TRAIN?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<PULSE-TRAIN?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<PULSE-TRAIN?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<PULSE-TRAIN?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_is_pulse_train(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<TRIANGLE-WAVE?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<TRIANGLE-WAVE?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<TRIANGLE-WAVE?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<TRIANGLE-WAVE?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_is_triangle_wave(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<SAWTOOTH-WAVE?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<SAWTOOTH-WAVE?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<SAWTOOTH-WAVE?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<SAWTOOTH-WAVE?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_is_sawtooth_wave(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<SQUARE-WAVE>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<SQUARE-WAVE>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<SQUARE-WAVE>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|FM| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<SQUARE-WAVE>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_square_wave(~A))) {mus_error(0, \"square-wave ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_square_wave(~A, ~A);~80,1T/* (square-wave ~A~A) */~%"
        (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|S|)
        (|COMMON-LISP|::|IF| |CLM|::|FM| (|CLM|::|LC-NUM-REF| |CLM|::|FM|)
         "0.0")
        (|CLM|::|CLEAN-ARG| |CLM|::|S|)
        (|COMMON-LISP|::|IF| |CLM|::|FM| (|CLM|::|CLEAN-ARG| |CLM|::|FM|) ""))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |COMMON-LISP|::|&OPTIONAL| |CLM|::|FM|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<PULSE-TRAIN>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<PULSE-TRAIN>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<PULSE-TRAIN>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|FM| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<PULSE-TRAIN>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_pulse_train(~A))) {mus_error(0, \"pulse-train ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_pulse_train(~A, ~A);~80,1T/* (pulse-train ~A~A) */~%"
        (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|S|)
        (|COMMON-LISP|::|IF| |CLM|::|FM| (|CLM|::|LC-NUM-REF| |CLM|::|FM|)
         "0.0")
        (|CLM|::|CLEAN-ARG| |CLM|::|S|)
        (|COMMON-LISP|::|IF| |CLM|::|FM| (|CLM|::|CLEAN-ARG| |CLM|::|FM|) ""))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |COMMON-LISP|::|&OPTIONAL| |CLM|::|FM|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<TRIANGLE-WAVE>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<TRIANGLE-WAVE>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<TRIANGLE-WAVE>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|FM| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<TRIANGLE-WAVE>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_triangle_wave(~A))) {mus_error(0, \"triangle-wave ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_triangle_wave(~A, ~A);~80,1T/* (triangle-wave ~A~A) */~%"
        (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|S|)
        (|COMMON-LISP|::|IF| |CLM|::|FM| (|CLM|::|LC-NUM-REF| |CLM|::|FM|)
         "0.0")
        (|CLM|::|CLEAN-ARG| |CLM|::|S|)
        (|COMMON-LISP|::|IF| |CLM|::|FM| (|CLM|::|CLEAN-ARG| |CLM|::|FM|) ""))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |COMMON-LISP|::|&OPTIONAL| |CLM|::|FM|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<SAWTOOTH-WAVE>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<SAWTOOTH-WAVE>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<SAWTOOTH-WAVE>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|FM| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<SAWTOOTH-WAVE>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_sawtooth_wave(~A))) {mus_error(0, \"sawtooth-wave ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_sawtooth_wave(~A, ~A);~80,1T/* (sawtooth-wave ~A~A) */~%"
        (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|S|)
        (|COMMON-LISP|::|IF| |CLM|::|FM| (|CLM|::|LC-NUM-REF| |CLM|::|FM|)
         "0.0")
        (|CLM|::|CLEAN-ARG| |CLM|::|S|)
        (|COMMON-LISP|::|IF| |CLM|::|FM| (|CLM|::|CLEAN-ARG| |CLM|::|FM|) ""))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |COMMON-LISP|::|&OPTIONAL| |CLM|::|FM|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<NCOS>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<NCOS>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<NCOS>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|FM| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<NCOS>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_ncos(~A))) {mus_error(0, \"ncos ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_ncos(~A, ~A);~80,1T/* (ncos ~A~A) */~%"
        (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|S|)
        (|COMMON-LISP|::|IF| |CLM|::|FM| (|CLM|::|LC-NUM-REF| |CLM|::|FM|)
         "0.0")
        (|CLM|::|CLEAN-ARG| |CLM|::|S|)
        (|COMMON-LISP|::|IF| |CLM|::|FM|
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| " ~A"
          (|CLM|::|CLEAN-ARG| |CLM|::|FM|))
         ""))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |COMMON-LISP|::|&OPTIONAL| |CLM|::|FM|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<NCOS?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<NCOS?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<NCOS?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<NCOS?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = mus_is_ncos(~A);~%"
        (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<NSIN>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<NSIN>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<NSIN>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|FM| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<NSIN>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_nsin(~A))) {mus_error(0, \"nsin ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_nsin(~A, ~A);~80,1T/* (nsin ~A~A) */~%"
        (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|S|)
        (|COMMON-LISP|::|IF| |CLM|::|FM| (|CLM|::|LC-NUM-REF| |CLM|::|FM|)
         "0.0")
        (|CLM|::|CLEAN-ARG| |CLM|::|S|)
        (|COMMON-LISP|::|IF| |CLM|::|FM|
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| " ~A"
          (|CLM|::|CLEAN-ARG| |CLM|::|FM|))
         ""))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |COMMON-LISP|::|&OPTIONAL| |CLM|::|FM|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<NSIN?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<NSIN?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<NSIN?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<NSIN?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = mus_is_nsin(~A);~%"
        (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<NRXYCOS>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<NRXYCOS>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<NRXYCOS>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|FM| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<NRXYCOS>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_nrxycos(~A))) {mus_error(0, \"nrxycos ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_nrxycos(~A, ~A);~80,1T/* (nrxycos ~A~A) */~%"
        (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|S|)
        (|COMMON-LISP|::|IF| |CLM|::|FM| (|CLM|::|LC-NUM-REF| |CLM|::|FM|)
         "0.0")
        (|CLM|::|CLEAN-ARG| |CLM|::|S|)
        (|COMMON-LISP|::|IF| |CLM|::|FM|
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| " ~A"
          (|CLM|::|CLEAN-ARG| |CLM|::|FM|))
         ""))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |COMMON-LISP|::|&OPTIONAL| |CLM|::|FM|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<NRXYCOS?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<NRXYCOS?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<NRXYCOS?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<NRXYCOS?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_is_nrxycos(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<NRXYSIN>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<NRXYSIN>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<NRXYSIN>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|FM| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<NRXYSIN>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_nrxysin(~A))) {mus_error(0, \"nrxysin ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_nrxysin(~A, ~A);~80,1T/* (nrxysin ~A~A) */~%"
        (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|S|)
        (|COMMON-LISP|::|IF| |CLM|::|FM| (|CLM|::|LC-NUM-REF| |CLM|::|FM|)
         "0.0")
        (|CLM|::|CLEAN-ARG| |CLM|::|S|)
        (|COMMON-LISP|::|IF| |CLM|::|FM|
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| " ~A"
          (|CLM|::|CLEAN-ARG| |CLM|::|FM|))
         ""))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |COMMON-LISP|::|&OPTIONAL| |CLM|::|FM|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<NRXYSIN?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<NRXYSIN?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<NRXYSIN?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<NRXYSIN?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_is_nrxysin(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<SSB-AM?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<SSB-AM?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<SSB-AM?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<SSB-AM?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = mus_is_ssb_am(~A);~%"
        (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<SSB-AM>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<SSB-AM>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<SSB-AM>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|INSIG| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CLM|::|FM| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<SSB-AM>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_ssb_am(~A))) {mus_error(0, \"ssb-am ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|LET*|
        ((|CLM|::|FM-IN-USE|
          (|COMMON-LISP|::|AND| |CLM|::|FM|
           (|COMMON-LISP|::|OR|
            (|COMMON-LISP|::|NOT| (|COMMON-LISP|::|CONSTANTP| |CLM|::|FM|))
            (|COMMON-LISP|::|NOT| (|COMMON-LISP|::|ZEROP| |CLM|::|FM|)))))
         (|CLM|::|CNAME| (|CLM|::|LC2| |CLM|::|S|))
         (|CLM|::|RESNAME| (|CLM|::|LC2| |CLM|::|RESULT|)))
        (|COMMON-LISP|::|IF| |CLM|::|FM-IN-USE|
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  ~A = mus_ssb_am(~A, ~A, ~A);~80,1T/* (ssb-am ~A ~A ~A) */~%"
          |CLM|::|RESNAME| |CLM|::|CNAME| (|CLM|::|LC-NUM-REF| |CLM|::|INSIG|)
          (|CLM|::|LC-NUM-REF| |CLM|::|FM|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
          (|CLM|::|CLEAN-ARG| |CLM|::|INSIG|) (|CLM|::|CLEAN-ARG| |CLM|::|FM|))
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  ~A = mus_ssb_am_unmodulated(~A, ~A);~80,1T/* (ssb-am ~A ~A) */~%"
          |CLM|::|RESNAME| |CLM|::|CNAME| (|CLM|::|LC-NUM-REF| |CLM|::|INSIG|)
          (|CLM|::|CLEAN-ARG| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|INSIG|)))
        |COMMON-LISP|::|NIL|))))))
  '(|CLM|::|RESULT| |CLM|::|S| |CLM|::|INSIG| |COMMON-LISP|::|&OPTIONAL|
    |CLM|::|FM|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|NOI-LOAD|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|S| |CLM|::|I| |CLM|::|R| |CLM|::|DATAI| |CLM|::|DATAR|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|NOI-UNLOAD|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|S| |CLM|::|IADR| |CLM|::|RADR| |CLM|::|DATAI| |CLM|::|DATAR|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<RAND?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<RAND?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<RAND?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<RAND?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = mus_is_rand(~A);~%"
        (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<RAND-INTERP?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<RAND-INTERP?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<RAND-INTERP?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<RAND-INTERP?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_is_rand_interp(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<RAND>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<RAND>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<RAND>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|FM| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<RAND>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_rand(~A))) {mus_error(0, \"rand ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = mus_rand(~A, ~A);~%"
        (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|S|)
        (|COMMON-LISP|::|IF| |CLM|::|FM| (|CLM|::|LC-NUM-REF| |CLM|::|FM|)
         "0.0"))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |COMMON-LISP|::|&OPTIONAL| |CLM|::|FM|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<RAND-INTERP>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<RAND-INTERP>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<RAND-INTERP>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|FM| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<RAND-INTERP>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_rand_interp(~A))) {mus_error(0, \"rand-interp ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_rand_interp(~A, ~A);~%" (|CLM|::|LC2| |CLM|::|RESULT|)
        (|CLM|::|LC2| |CLM|::|S|)
        (|COMMON-LISP|::|IF| |CLM|::|FM| (|CLM|::|LC-NUM-REF| |CLM|::|FM|)
         "0.0"))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |COMMON-LISP|::|&OPTIONAL| |CLM|::|FM|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<TABLE-LOOKUP>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<TABLE-LOOKUP>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<TABLE-LOOKUP>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|FM| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<TABLE-LOOKUP>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_table_lookup(~A))) {mus_error(0, \"table-lookup ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|IF| |CLM|::|FM|
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A = mus_table_lookup(~A, ~A);~%" (|CLM|::|LC2| |CLM|::|RESULT|)
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|LC-NUM-REF| |CLM|::|FM|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A = mus_table_lookup_unmodulated(~A);~%"
         (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|S|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |COMMON-LISP|::|&OPTIONAL| |CLM|::|FM|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<TABLE-LOOKUP?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<TABLE-LOOKUP?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<TABLE-LOOKUP?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<TABLE-LOOKUP?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_is_table_lookup(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ARRAY-INTERP>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ARRAY-INTERP>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ARRAY-INTERP>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|INDEX| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CLM|::|SIZE| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<ARRAY-INTERP>|
       (|COMMON-LISP|::|IF| (|COMMON-LISP|::|INTEGERP| |CLM|::|INDEX|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = ~A;~%"
         (|CLM|::|LC2| |CLM|::|RESULT|)
         (|CLM|::|REAL-ARRAY-REF| |CLM|::|S| |CLM|::|INDEX|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A = mus_array_interp(~A, ~A, ~A);~%"
         (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC-ARR-REF| |CLM|::|S|)
         (|CLM|::|LC-NUM-REF| |CLM|::|INDEX|)
         (|COMMON-LISP|::|IF| |CLM|::|SIZE|
          (|CLM|::|LC-NUM-REF| |CLM|::|SIZE| :|INTEGER|)
          (|CLM|::|ARRAY-SIZE| |CLM|::|S|))))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |CLM|::|INDEX| |COMMON-LISP|::|&OPTIONAL|
    |CLM|::|SIZE|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-INTERPOLATE>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-INTERPOLATE>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-INTERPOLATE>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 5. 7.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP|::|TYPE| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|S| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CLM|::|INDEX| (|COMMON-LISP|::|FIFTH| . #1#))
       (|CLM|::|SIZE|
        (|COMMON-LISP|::|CADR| . #2=((|COMMON-LISP|::|CDDDDR| . #1#))))
       (|CLM|::|YN1| (|COMMON-LISP|::|CADDR| . #2#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-INTERPOLATE>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_interpolate(~A, ~A, ~A, ~A, ~A);~%"
        (|CLM|::|LC2| |CLM|::|RESULT|)
        (|CLM|::|LC-NUM-REF| |COMMON-LISP|::|TYPE| :|INTEGER|)
        (|CLM|::|LC-ARR-REF| |CLM|::|S|) (|CLM|::|LC-NUM-REF| |CLM|::|INDEX|)
        (|COMMON-LISP|::|IF| |CLM|::|SIZE|
         (|CLM|::|LC-NUM-REF| |CLM|::|SIZE| :|INTEGER|)
         (|CLM|::|ARRAY-SIZE| |CLM|::|S|))
        (|COMMON-LISP|::|IF| |CLM|::|YN1| (|CLM|::|LC-NUM-REF| |CLM|::|YN1|)
         0.0f0))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |COMMON-LISP|::|TYPE| |CLM|::|S| |CLM|::|INDEX|
    |COMMON-LISP|::|&OPTIONAL| |CLM|::|SIZE| |CLM|::|YN1|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<FILE2ARRAY>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<FILE2ARRAY>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<FILE2ARRAY>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 6. 6.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|FILENAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|CHAN| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|START| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CLM|::|FRAMPLES| (|COMMON-LISP|::|FIFTH| . #1#))
       (|CLM|::|ARR| (|COMMON-LISP|::|CADR| (|COMMON-LISP|::|CDDDDR| . #1#))))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<FILE2ARRAY>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  mus_file_to_float_array((char *)(~A), ~A, ~A, ~A, ~A);~%"
        (|CLM|::|LC-REF| |CLM|::|FILENAME| :|STRING|)
        (|CLM|::|LC-NUM-REF| |CLM|::|CHAN| :|INTEGER|)
        (|CLM|::|LC-NUM-REF| |CLM|::|START| :|INTEGER|)
        (|CLM|::|LC-NUM-REF| |CLM|::|FRAMPLES| :|INTEGER|)
        (|CLM|::|LC-ARR-REF| |CLM|::|ARR|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|FILENAME| |CLM|::|CHAN| |CLM|::|START| |CLM|::|FRAMPLES|
    |CLM|::|ARR|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ARRAY2FILE>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ARRAY2FILE>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ARRAY2FILE>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 6. 6.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|FILENAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARR| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|SAMPS| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CLM|::|SRATE| (|COMMON-LISP|::|FIFTH| . #1#))
       (|CLM|::|CHANS|
        (|COMMON-LISP|::|CADR| (|COMMON-LISP|::|CDDDDR| . #1#))))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<ARRAY2FILE>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  mus_float_array_to_file((char *)(~A), ~A, ~A, (int)(~A), ~A);~%"
        (|CLM|::|LC-REF| |CLM|::|FILENAME| :|STRING|)
        (|CLM|::|LC-ARR-REF| |CLM|::|ARR|)
        (|CLM|::|LC-NUM-REF| |CLM|::|SAMPS| :|INTEGER|)
        (|CLM|::|LC-NUM-REF| |CLM|::|SRATE|)
        (|CLM|::|LC-NUM-REF| |CLM|::|CHANS| :|INTEGER|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|FILENAME| |CLM|::|ARR| |CLM|::|SAMPS| |CLM|::|SRATE|
    |CLM|::|CHANS|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ONE-POLE>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ONE-POLE>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ONE-POLE>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<ONE-POLE>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_one_pole(~A))) {mus_error(0, \"one-pole ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_one_pole(~A, ~A);~80,1T/* (one-pole ~A ~A) */~%"
        (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|S|)
        (|CLM|::|LC-NUM-REF| |CLM|::|ARG|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ONE-POLE?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ONE-POLE?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ONE-POLE?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<ONE-POLE?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_is_one_pole(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ONE-ZERO>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ONE-ZERO>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ONE-ZERO>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<ONE-ZERO>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_one_zero(~A))) {mus_error(0, \"one-zero ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_one_zero(~A, ~A);~80,1T/* (one-zero ~A ~A) */~%"
        (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|S|)
        (|CLM|::|LC-NUM-REF| |CLM|::|ARG|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ONE-ZERO?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ONE-ZERO?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ONE-ZERO?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<ONE-ZERO?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_is_one_zero(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<TWO-POLE>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<TWO-POLE>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<TWO-POLE>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<TWO-POLE>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_two_pole(~A))) {mus_error(0, \"two-pole ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_two_pole(~A, ~A);~80,1T/* (two-pole ~A ~A) */~%"
        (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|S|)
        (|CLM|::|LC-NUM-REF| |CLM|::|ARG|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<TWO-POLE?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<TWO-POLE?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<TWO-POLE?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<TWO-POLE?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_is_two_pole(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<TWO-ZERO>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<TWO-ZERO>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<TWO-ZERO>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<TWO-ZERO>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_two_zero(~A))) {mus_error(0, \"two-zero ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_two_zero(~A, ~A);~80,1T/* (two-zero ~A ~A) */~%"
        (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|S|)
        (|CLM|::|LC-NUM-REF| |CLM|::|ARG|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
        (|CLM|::|CLEAN-ARG| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<TWO-ZERO?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<TWO-ZERO?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<TWO-ZERO?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<TWO-ZERO?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_is_two_zero(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<FORMANT>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<FORMANT>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<FORMANT>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CLM|::|FREQ| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<FORMANT>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_formant(~A))) {mus_error(0, \"formant ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|IF| |CLM|::|FREQ|
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A = mus_formant_with_frequency(~A, ~A, ~A);~80,1T/* (formant ~A ~A ~A) */~%"
         (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|S|)
         (|CLM|::|LC-NUM-REF| |CLM|::|ARG|) (|CLM|::|LC-NUM-REF| |CLM|::|FREQ|)
         (|CLM|::|CLEAN-ARG| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|ARG|)
         (|CLM|::|CLEAN-ARG| |CLM|::|FREQ|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A = mus_formant(~A, ~A);~80,1T/* (formant ~A ~A) */~%"
         (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|S|)
         (|CLM|::|LC-NUM-REF| |CLM|::|ARG|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|CLEAN-ARG| |CLM|::|ARG|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |CLM|::|ARG| |COMMON-LISP|::|&OPTIONAL|
    |CLM|::|FREQ|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<FORMANT?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<FORMANT?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<FORMANT?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<FORMANT?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_is_formant(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<FIRMANT>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<FIRMANT>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<FIRMANT>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CLM|::|FREQ| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<FIRMANT>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_firmant(~A))) {mus_error(0, \"firmant ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|IF| |CLM|::|FREQ|
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A = mus_firmant_with_frequency(~A, ~A, ~A);~80,1T/* (firmant ~A ~A ~A) */~%"
         (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|S|)
         (|CLM|::|LC-NUM-REF| |CLM|::|ARG|) (|CLM|::|LC-NUM-REF| |CLM|::|FREQ|)
         (|CLM|::|CLEAN-ARG| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|ARG|)
         (|CLM|::|CLEAN-ARG| |CLM|::|FREQ|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A = mus_firmant(~A, ~A);~80,1T/* (firmant ~A ~A) */~%"
         (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|S|)
         (|CLM|::|LC-NUM-REF| |CLM|::|ARG|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|CLEAN-ARG| |CLM|::|ARG|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |CLM|::|ARG| |COMMON-LISP|::|&OPTIONAL|
    |CLM|::|FREQ|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<FIRMANT?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<FIRMANT?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<FIRMANT?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<FIRMANT?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_is_firmant(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<POLYSHAPE?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<POLYSHAPE?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<POLYSHAPE?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<POLYSHAPE?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_is_polyshape(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<POLYSHAPE>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<POLYSHAPE>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<POLYSHAPE>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|INDEX|
        (|COMMON-LISP|::|IF| (|COMMON-LISP|::|CDDDR| . #1#)
         (|COMMON-LISP|::|CADDDR| . #1#) #2=1.0f0))
       (|CLM|::|FM| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<POLYSHAPE>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_polyshape(~A))) {mus_error(0, \"polyshape ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|IF| |CLM|::|FM|
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A = mus_polyshape(~A, ~A, ~A);~80,1T/* (polyshape ~A ~A ~A) */~%"
         (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|S|)
         (|CLM|::|LC-NUM-REF| |CLM|::|INDEX|) (|CLM|::|LC-NUM-REF| |CLM|::|FM|)
         (|CLM|::|CLEAN-ARG| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|INDEX|)
         (|CLM|::|CLEAN-ARG| |CLM|::|FM|))
        (|COMMON-LISP|::|IF| |CLM|::|INDEX|
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  ~A = mus_polyshape_unmodulated(~A, ~A);~80,1T/* (polyshape ~A ~A) */~%"
          (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|S|)
          (|CLM|::|LC-NUM-REF| |CLM|::|INDEX|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
          (|CLM|::|CLEAN-ARG| |CLM|::|INDEX|))
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  ~A = mus_polyshape_no_input(~A);~80,1T/* (polyshape ~A) */~%"
          (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|S|)
          (|CLM|::|CLEAN-ARG| |CLM|::|S|))))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |COMMON-LISP|::|&OPTIONAL| (|CLM|::|INDEX| #2#)
    |CLM|::|FM|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<POLYWAVE?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<POLYWAVE?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<POLYWAVE?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<POLYWAVE?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_is_polywave(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<POLYWAVE>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<POLYWAVE>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<POLYWAVE>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|FM| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<POLYWAVE>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_polywave(~A))) {mus_error(0, \"polywave ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|IF| |CLM|::|FM|
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A = mus_polywave(~A, ~A);~80,1T/* (polywave ~A ~A) */~%"
         (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|S|)
         (|CLM|::|LC-NUM-REF| |CLM|::|FM|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|CLEAN-ARG| |CLM|::|FM|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A = mus_polywave_unmodulated(~A);~80,1T/* (polywave ~A) */~%"
         (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|S|)
         (|CLM|::|CLEAN-ARG| |CLM|::|S|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |COMMON-LISP|::|&OPTIONAL| |CLM|::|FM|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ASYMMETRIC-FM?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ASYMMETRIC-FM?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ASYMMETRIC-FM?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<ASYMMETRIC-FM?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_is_asymmetric_fm(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ASYMMETRIC-FM>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ASYMMETRIC-FM>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ASYMMETRIC-FM>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|INDEX| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CLM|::|FM| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<ASYMMETRIC-FM>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_asymmetric_fm(~A))) {mus_error(0, \"asymmetric-fm ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_asymmetric_fm(~A, ~A, ~A);~80,1T/* (asymmetric-fm ~A ~A~A) */~%"
        (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|S|)
        (|CLM|::|LC-NUM-REF| |CLM|::|INDEX|)
        (|COMMON-LISP|::|IF| |CLM|::|FM| (|CLM|::|LC-NUM-REF| |CLM|::|FM|)
         "0.0")
        (|CLM|::|CLEAN-ARG| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|INDEX|)
        (|COMMON-LISP|::|IF| |CLM|::|FM|
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| " ~A"
          (|CLM|::|CLEAN-ARG| |CLM|::|FM|))
         ""))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |CLM|::|INDEX| |COMMON-LISP|::|&OPTIONAL|
    |CLM|::|FM|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<OUT-ANY>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<OUT-ANY>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<OUT-ANY>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 6.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|PASS| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|VAL| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CLM|::|CHAN|
        (|COMMON-LISP|::|IF| #2=(|COMMON-LISP|::|CDDDDR| . #1#)
         (|COMMON-LISP|::|FIFTH| . #1#) 0.))
       (|COMMON-LISP|::|STREAM| (|COMMON-LISP|::|CADR| #2#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<OUT-ANY>|
       (|COMMON-LISP|::|IF| (|COMMON-LISP|::|NOT| |COMMON-LISP|::|STREAM|)
        (|COMMON-LISP|::|SETF| |COMMON-LISP|::|STREAM|
         (|CLM|::|CURRENT-VAR| '|CLM|::|*OUTPUT*|)))
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_output(~A))) {mus_error(0, \"output stream ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |COMMON-LISP|::|STREAM|)
         (|CLM|::|CLEAN-ARG| |COMMON-LISP|::|STREAM|)
         (|CLM|::|LC2| |COMMON-LISP|::|STREAM|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_out_any(~A, ~A, ~A, ~A);~%" (|CLM|::|LC2| |CLM|::|RESULT|)
        (|CLM|::|LC-NUM-REF| |CLM|::|PASS| :|INTEGER|)
        (|CLM|::|LC-NUM-REF| |CLM|::|VAL|)
        (|CLM|::|LC-NUM-REF| |CLM|::|CHAN| :|INTEGER|)
        (|CLM|::|LC2| |COMMON-LISP|::|STREAM|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|PASS| |CLM|::|VAL| |COMMON-LISP|::|&OPTIONAL|
    (|CLM|::|CHAN| 0.) |COMMON-LISP|::|STREAM|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-OUTPUT?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-OUTPUT?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-OUTPUT?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-OUTPUT?>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A = mus_is_output(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
         (|CLM|::|LC2| |CLM|::|GEN|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = 0;~%"
         (|CLM|::|LC2| |CLM|::|RES|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<IN-ANY>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<IN-ANY>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<IN-ANY>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 5. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|SAMP| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|CHAN| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CLM|::|I-STREAM| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<IN-ANY>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_input(~A))) {mus_error(0, \"input stream ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|I-STREAM|)
         (|CLM|::|CLEAN-ARG| |CLM|::|I-STREAM|)
         (|CLM|::|LC2| |CLM|::|I-STREAM|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_in_any(~A, ~A, ~A);~%" (|CLM|::|LC2| |CLM|::|RESULT|)
        (|CLM|::|LC-NUM-REF| |CLM|::|SAMP| :|INTEGER|)
        (|CLM|::|LC-NUM-REF| |CLM|::|CHAN| :|INTEGER|)
        (|CLM|::|LC2| |CLM|::|I-STREAM|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|SAMP| |CLM|::|CHAN| |CLM|::|I-STREAM|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<FILE2SAMPLE?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<FILE2SAMPLE?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<FILE2SAMPLE?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<FILE2SAMPLE?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_is_file_to_sample(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<FILE2SAMPLE>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<FILE2SAMPLE>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<FILE2SAMPLE>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 5. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|I-STREAM| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|SAMP| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CLM|::|CHAN| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<FILE2SAMPLE>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_file_to_sample(~A, ~A, ~A);~%"
        (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|I-STREAM|)
        (|CLM|::|LC-NUM-REF| |CLM|::|SAMP| :|INTEGER|)
        (|CLM|::|LC-NUM-REF| |CLM|::|CHAN| :|INTEGER|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|I-STREAM| |CLM|::|SAMP| |CLM|::|CHAN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-INPUT?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-INPUT?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-INPUT?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-INPUT?>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = mus_is_input(~A);~%"
         (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|GEN|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = 0;~%"
         (|CLM|::|LC2| |CLM|::|RES|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<FILE2FRAMPLE>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<FILE2FRAMPLE>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<FILE2FRAMPLE>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|I-STREAM|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|SAMP| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|OUTF| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<FILE2FRAMPLE>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  mus_file_to_frample(~A, ~A, ~A);~%" (|CLM|::|LC2| |CLM|::|I-STREAM|)
        (|CLM|::|LC-NUM-REF| |CLM|::|SAMP| :|INTEGER|)
        (|CLM|::|LC2| |CLM|::|OUTF|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|I-STREAM| |CLM|::|SAMP| |CLM|::|OUTF|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<READIN>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<READIN>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<READIN>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|RD| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<READIN>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_readin(~A))) {mus_error(0, \"readin ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|RD|) (|CLM|::|CLEAN-ARG| |CLM|::|RD|)
         (|CLM|::|LC2| |CLM|::|RD|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = mus_readin(~A);~%"
        (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|RD|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|RD|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<READIN?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<READIN?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<READIN?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<READIN?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = mus_is_readin(~A);~%"
        (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<LOCSIG-REF>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<LOCSIG-REF>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<LOCSIG-REF>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|LOC| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|CHAN| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<LOCSIG-REF>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_locsig(~A))) {mus_error(0, \"locsig ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|LOC|) (|CLM|::|CLEAN-ARG| |CLM|::|LOC|)
         (|CLM|::|LC2| |CLM|::|LOC|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_locsig_ref(~A,~A);~%" (|CLM|::|LC2| |CLM|::|RESULT|)
        (|CLM|::|LC2| |CLM|::|LOC|)
        (|CLM|::|LC-NUM-REF| |CLM|::|CHAN| :|INTEGER|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|LOC| |CLM|::|CHAN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<LOCSIG-REVERB-REF>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<LOCSIG-REVERB-REF>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<LOCSIG-REVERB-REF>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|LOC| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|CHAN| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<LOCSIG-REVERB-REF>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_locsig(~A))) {mus_error(0, \"locsig ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|LOC|) (|CLM|::|CLEAN-ARG| |CLM|::|LOC|)
         (|CLM|::|LC2| |CLM|::|LOC|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_locsig_reverb_ref(~A, ~A);~%"
        (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|LOC|)
        (|CLM|::|LC-NUM-REF| |CLM|::|CHAN| :|INTEGER|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|LOC| |CLM|::|CHAN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<LOCSIG-SET!>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<LOCSIG-SET!>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<LOCSIG-SET!>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 5. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|TYPE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|LOC| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|CHAN| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CLM|::|VAL| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<LOCSIG-SET!>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_locsig(~A))) {mus_error(0, \"locsig ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|LOC|) (|CLM|::|CLEAN-ARG| |CLM|::|LOC|)
         (|CLM|::|LC2| |CLM|::|LOC|)))
       (|COMMON-LISP|::|IF|
        (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+SETF+|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  mus_locsig_set(~A, ~A, ~A);~%" (|CLM|::|LC2| |CLM|::|LOC|)
         (|CLM|::|LC-NUM-REF| |CLM|::|CHAN| :|INTEGER|)
         (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  mus_locsig_set(~A, ~A, mus_locsig_ref(~A, ~A) ~A ~A);~%"
         (|CLM|::|LC2| |CLM|::|LOC|)
         (|CLM|::|LC-NUM-REF| |CLM|::|CHAN| :|INTEGER|)
         (|CLM|::|LC2| |CLM|::|LOC|)
         (|CLM|::|LC-NUM-REF| |CLM|::|CHAN| :|INTEGER|)
         (|COMMON-LISP|::|IF|
          (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+INCF+|) "+" "-")
         (|CLM|::|LC-NUM-REF| |CLM|::|VAL|)))
       |COMMON-LISP|::|NIL|)))))
  '(|COMMON-LISP|::|TYPE| |CLM|::|LOC| |CLM|::|CHAN| |CLM|::|VAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<LOCSIG-REVERB-SET!>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<LOCSIG-REVERB-SET!>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<LOCSIG-REVERB-SET!>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 5. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|TYPE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|LOC| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|CHAN| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CLM|::|VAL| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<LOCSIG-REVERB-SET!>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_locsig(~A))) {mus_error(0, \"locsig ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|LOC|) (|CLM|::|CLEAN-ARG| |CLM|::|LOC|)
         (|CLM|::|LC2| |CLM|::|LOC|)))
       (|COMMON-LISP|::|IF|
        (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+SETF+|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  mus_locsig_reverb_set(~A, ~A, ~A);~%" (|CLM|::|LC2| |CLM|::|LOC|)
         (|CLM|::|LC-NUM-REF| |CLM|::|CHAN| :|INTEGER|)
         (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  mus_locsig_reverb_set(~A, ~A, mus_locsig_reverb_ref(~A, ~A) ~A ~A);~%"
         (|CLM|::|LC2| |CLM|::|LOC|)
         (|CLM|::|LC-NUM-REF| |CLM|::|CHAN| :|INTEGER|)
         (|CLM|::|LC2| |CLM|::|LOC|)
         (|CLM|::|LC-NUM-REF| |CLM|::|CHAN| :|INTEGER|)
         (|COMMON-LISP|::|IF|
          (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+INCF+|) "+" "-")
         (|CLM|::|LC-NUM-REF| |CLM|::|VAL|)))
       |COMMON-LISP|::|NIL|)))))
  '(|COMMON-LISP|::|TYPE| |CLM|::|LOC| |CLM|::|CHAN| |CLM|::|VAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<LOCSIG?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<LOCSIG?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<LOCSIG?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<LOCSIG?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = mus_is_locsig(~A);~%"
        (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<LOCSIG>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<LOCSIG>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<LOCSIG>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 5. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|LOC| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|SAMP| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CLM|::|VAL| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<LOCSIG>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_locsig(~A))) {mus_error(0, \"locsig ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|LOC|) (|CLM|::|CLEAN-ARG| |CLM|::|LOC|)
         (|CLM|::|LC2| |CLM|::|LOC|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = clm_locsig(~A, ~A, ~A);~%" (|CLM|::|LC2| |CLM|::|RESULT|)
        (|CLM|::|LC2| |CLM|::|LOC|)
        (|CLM|::|LC-NUM-REF| |CLM|::|SAMP| :|INTEGER|)
        (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|LOC| |CLM|::|SAMP| |CLM|::|VAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MOVE-LOCSIG>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MOVE-LOCSIG>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MOVE-LOCSIG>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|LOC| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|DEGREE| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|DISTANCE| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MOVE-LOCSIG>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_locsig(~A))) {mus_error(0, \"locsig ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|LOC|) (|CLM|::|CLEAN-ARG| |CLM|::|LOC|)
         (|CLM|::|LC2| |CLM|::|LOC|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  mus_move_locsig(~A, ~A, ~A);~%" (|CLM|::|LC2| |CLM|::|LOC|)
        (|CLM|::|LC-NUM-REF| |CLM|::|DEGREE|)
        (|CLM|::|LC-NUM-REF| |CLM|::|DISTANCE|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|LOC| |CLM|::|DEGREE| |CLM|::|DISTANCE|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MOVE-SOUND?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MOVE-SOUND?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MOVE-SOUND?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MOVE-SOUND?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_is_move_sound(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MOVE-SOUND>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MOVE-SOUND>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MOVE-SOUND>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 5. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|LOC| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|SAMP| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CLM|::|VAL| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MOVE-SOUND>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_move_sound(~A))) {mus_error(0, \"move-sound ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|LOC|) (|CLM|::|CLEAN-ARG| |CLM|::|LOC|)
         (|CLM|::|LC2| |CLM|::|LOC|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_move_sound(~A, ~A, ~A);~%" (|CLM|::|LC2| |CLM|::|RESULT|)
        (|CLM|::|LC2| |CLM|::|LOC|)
        (|CLM|::|LC-NUM-REF| |CLM|::|SAMP| :|INTEGER|)
        (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|LOC| |CLM|::|SAMP| |CLM|::|VAL|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|MOVE-SOUND-ARRAY-MAKE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|GEN| |COMMON-LISP|::|STREAM| |CLM|::|NAME| |CLM|::|INDENT|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<WAVE-TRAIN>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<WAVE-TRAIN>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<WAVE-TRAIN>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|FM| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<WAVE-TRAIN>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_wave_train(~A))) {mus_error(0, \"wave-train ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|IF| |CLM|::|FM|
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A = mus_wave_train(~A, ~A);~%" (|CLM|::|LC2| |CLM|::|RESULT|)
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|LC-NUM-REF| |CLM|::|FM|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A = mus_wave_train_unmodulated(~A);~%"
         (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|S|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |COMMON-LISP|::|&OPTIONAL| |CLM|::|FM|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<WAVE-TRAIN?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<WAVE-TRAIN?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<WAVE-TRAIN?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<WAVE-TRAIN?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_is_wave_train(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<FILTER?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<FILTER?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<FILTER?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<FILTER?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = mus_is_filter(~A);~%"
        (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<FILTER>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<FILTER>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<FILTER>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|INVAL| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<FILTER>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_filter(~A))) {mus_error(0, \"filter ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_filter(~A, ~A);~%" (|CLM|::|LC2| |CLM|::|RESULT|)
        (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|LC-NUM-REF| |CLM|::|INVAL|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |CLM|::|INVAL|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<FIR-FILTER>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<FIR-FILTER>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<FIR-FILTER>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|INVAL| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<FIR-FILTER>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_fir_filter(~A))) {mus_error(0, \"fir-filter ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_fir_filter(~A, ~A);~%" (|CLM|::|LC2| |CLM|::|RESULT|)
        (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|LC-NUM-REF| |CLM|::|INVAL|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |CLM|::|INVAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<FIR-FILTER?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<FIR-FILTER?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<FIR-FILTER?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<FIR-FILTER?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_is_fir_filter(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<IIR-FILTER>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<IIR-FILTER>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<IIR-FILTER>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|INVAL| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<IIR-FILTER>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_iir_filter(~A))) {mus_error(0, \"iir-filter ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_iir_filter(~A, ~A);~%" (|CLM|::|LC2| |CLM|::|RESULT|)
        (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|LC-NUM-REF| |CLM|::|INVAL|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |CLM|::|INVAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<IIR-FILTER?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<IIR-FILTER?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<IIR-FILTER?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<IIR-FILTER?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_is_iir_filter(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<DELAY>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<DELAY>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<DELAY>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|INVAL| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CLM|::|PM| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<DELAY>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_delay(~A))) {mus_error(0, \"delay ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|IF| |CLM|::|PM|
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A = mus_delay(~A, ~A, ~A);~%" (|CLM|::|LC2| |CLM|::|RESULT|)
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|LC-NUM-REF| |CLM|::|INVAL|)
         (|CLM|::|LC-NUM-REF| |CLM|::|PM|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A = mus_delay_unmodulated(~A, ~A);~%"
         (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|S|)
         (|CLM|::|LC-NUM-REF| |CLM|::|INVAL|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |CLM|::|INVAL| |COMMON-LISP|::|&OPTIONAL|
    |CLM|::|PM|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<DELAY-TICK>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<DELAY-TICK>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<DELAY-TICK>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|INVAL| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<DELAY-TICK>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_delay(~A))) {mus_error(0, \"delay ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_delay_tick(~A, ~A);~%" (|CLM|::|LC2| |CLM|::|RESULT|)
        (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|LC-NUM-REF| |CLM|::|INVAL|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |CLM|::|INVAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<TAP>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<TAP>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<TAP>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|PM| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<TAP>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_delay(~A))) {mus_error(0, \"delay ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|IF| |CLM|::|PM|
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = mus_tap(~A, ~A);~%"
         (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|S|)
         (|CLM|::|LC-NUM-REF| |CLM|::|PM|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A = mus_tap_unmodulated(~A);~%" (|CLM|::|LC2| |CLM|::|RESULT|)
         (|CLM|::|LC2| |CLM|::|S|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |COMMON-LISP|::|&OPTIONAL| |CLM|::|PM|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<DELAY?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<DELAY?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<DELAY?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<DELAY?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = mus_is_delay(~A);~%"
        (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<COMB>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<COMB>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<COMB>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|INVAL| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CLM|::|PM| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<COMB>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_comb(~A))) {mus_error(0, \"comb ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|IF| |CLM|::|PM|
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A = mus_comb(~A, ~A, ~A);~%" (|CLM|::|LC2| |CLM|::|RESULT|)
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|LC-NUM-REF| |CLM|::|INVAL|)
         (|CLM|::|LC-NUM-REF| |CLM|::|PM|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A = mus_comb_unmodulated(~A, ~A);~%"
         (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|S|)
         (|CLM|::|LC-NUM-REF| |CLM|::|INVAL|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |CLM|::|INVAL| |COMMON-LISP|::|&OPTIONAL|
    |CLM|::|PM|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<COMB?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<COMB?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<COMB?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<COMB?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = mus_is_comb(~A);~%"
        (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<FILTERED-COMB>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<FILTERED-COMB>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<FILTERED-COMB>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|INVAL| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CLM|::|PM| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<FILTERED-COMB>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_filtered_comb(~A))) {mus_error(0, \"filtered-comb ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|IF| |CLM|::|PM|
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A = mus_filtered_comb(~A, ~A, ~A);~%"
         (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|S|)
         (|CLM|::|LC-NUM-REF| |CLM|::|INVAL|)
         (|CLM|::|LC-NUM-REF| |CLM|::|PM|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A = mus_filtered_comb_unmodulated(~A, ~A);~%"
         (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|S|)
         (|CLM|::|LC-NUM-REF| |CLM|::|INVAL|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |CLM|::|INVAL| |COMMON-LISP|::|&OPTIONAL|
    |CLM|::|PM|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<FILTERED-COMB?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<FILTERED-COMB?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<FILTERED-COMB?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<FILTERED-COMB?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_is_filtered_comb(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<NOTCH>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<NOTCH>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<NOTCH>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|INVAL| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CLM|::|PM| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<NOTCH>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_notch(~A))) {mus_error(0, \"notch ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|IF| |CLM|::|PM|
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A = mus_notch(~A, ~A, ~A);~%" (|CLM|::|LC2| |CLM|::|RESULT|)
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|LC-NUM-REF| |CLM|::|INVAL|)
         (|CLM|::|LC-NUM-REF| |CLM|::|PM|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A = mus_notch_unmodulated(~A, ~A);~%"
         (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|S|)
         (|CLM|::|LC-NUM-REF| |CLM|::|INVAL|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |CLM|::|INVAL| |COMMON-LISP|::|&OPTIONAL|
    |CLM|::|PM|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<NOTCH?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<NOTCH?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<NOTCH?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<NOTCH?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = mus_is_notch(~A);~%"
        (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ALL-PASS>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ALL-PASS>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ALL-PASS>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|INVAL| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CLM|::|PM| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<ALL-PASS>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_all_pass(~A))) {mus_error(0, \"all-pass ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|IF| |CLM|::|PM|
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A = mus_all_pass(~A, ~A, ~A);~%" (|CLM|::|LC2| |CLM|::|RESULT|)
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|LC-NUM-REF| |CLM|::|INVAL|)
         (|CLM|::|LC-NUM-REF| |CLM|::|PM|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A = mus_all_pass_unmodulated(~A, ~A);~%"
         (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|S|)
         (|CLM|::|LC-NUM-REF| |CLM|::|INVAL|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |CLM|::|INVAL| |COMMON-LISP|::|&OPTIONAL|
    |CLM|::|PM|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ALL-PASS?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ALL-PASS?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ALL-PASS?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<ALL-PASS?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_is_all_pass(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MOVING-AVERAGE>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MOVING-AVERAGE>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MOVING-AVERAGE>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|INVAL| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MOVING-AVERAGE>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_moving_average(~A))) {mus_error(0, \"moving-average ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_moving_average(~A, ~A);~%" (|CLM|::|LC2| |CLM|::|RESULT|)
        (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|LC-NUM-REF| |CLM|::|INVAL|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |CLM|::|INVAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MOVING-AVERAGE?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MOVING-AVERAGE?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MOVING-AVERAGE?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MOVING-AVERAGE?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_is_moving_average(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|LOAD-ENVELOPE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|ARR| |CLM|::|I| |CLM|::|R| |CLM|::|DATAI| |CLM|::|DATAR|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|UNLOAD-ENVELOPE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|I| |CLM|::|R| |CLM|::|DATAI| |CLM|::|DATAR| |CLM|::|STR|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ENV>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ENV>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ENV>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|E| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<ENV>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_env(~A))) {mus_error(0, \"env ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|E|) (|CLM|::|CLEAN-ARG| |CLM|::|E|)
         (|CLM|::|LC2| |CLM|::|E|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_env(~A);~80,1T/* (env ~A) */~%"
        (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC2| |CLM|::|E|)
        (|CLM|::|CLEAN-ARG| |CLM|::|E|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|E|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<RESTART-ENV>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<RESTART-ENV>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<RESTART-ENV>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|E| (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<RESTART-ENV>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_env(~A))) {mus_error(0, \"(restart-)env ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|E|) (|CLM|::|CLEAN-ARG| |CLM|::|E|)
         (|CLM|::|LC2| |CLM|::|E|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  mus_reset(~A);~%"
        (|CLM|::|LC2| |CLM|::|E|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|E|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ENV?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ENV?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ENV?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<ENV?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = mus_is_env(~A);~%"
        (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<ENV-INTERP>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<ENV-INTERP>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<ENV-INTERP>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|X| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|E| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CLM|::|BASE|
        (|COMMON-LISP|::|IF| (|COMMON-LISP|::|CDDDDR| . #1#)
         (|COMMON-LISP|::|FIFTH| . #1#) #2=1.0f0)))
      (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |CLM|::|BASE|))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<ENV-INTERP>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_env(~A))) {mus_error(0, \"env(-interp) ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|E|) (|CLM|::|CLEAN-ARG| |CLM|::|E|)
         (|CLM|::|LC2| |CLM|::|E|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_env_interp(~A, ~A);~80,1T/* (env-interp ~A ~A) */~%"
        (|CLM|::|LC2| |CLM|::|RESULT|) (|CLM|::|LC-NUM-REF| |CLM|::|X|)
        (|CLM|::|LC2| |CLM|::|E|) (|CLM|::|CLEAN-ARG| |CLM|::|X|)
        (|CLM|::|CLEAN-ARG| |CLM|::|E|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|X| |CLM|::|E| |COMMON-LISP|::|&OPTIONAL|
    (|CLM|::|BASE| #2#))))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<START-FUNCTION>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<START-FUNCTION>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<START-FUNCTION>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|CTR| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP|::|TYPE| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<START-FUNCTION>|
       (|COMMON-LISP|::|IF|
        (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+AS-NEEDED-INPUT+|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "static mus_float_t as_needed_~D(void *gen, int direction)~%"
         |CLM|::|CTR|)
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+AS-NEEDED-EDIT+|)
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "static int as_needed_~D(void *closure)~%" |CLM|::|CTR|)
         (|COMMON-LISP|::|IF|
          (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE|
           |CLM|::|+AS-NEEDED-ANALYZE+|)
          (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
           "static bool as_needed_~D(void *closure, mus_float_t (*input)(void *arg1, int direction))~%"
           |CLM|::|CTR|)
          (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
           "static mus_float_t as_needed_~D(void *closure)~%" |CLM|::|CTR|))))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "{~%")
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|CTR| |COMMON-LISP|::|TYPE|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<END-FUNCTION>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<END-FUNCTION>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<END-FUNCTION>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|VAR| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|CTR| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |CLM|::|CTR|))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<END-FUNCTION>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  return(~A);~%"
        (|COMMON-LISP|::|IF| (|COMMON-LISP|::|NUMBERP| |CLM|::|VAR|)
         |CLM|::|VAR| (|CLM|::|LC| |CLM|::|VAR|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "}~%")
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|VAR| |CLM|::|CTR|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<LAMBDA-ARG>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<LAMBDA-ARG>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<LAMBDA-ARG>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|VAR| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|CTR| (|COMMON-LISP|::|CADDR| . #1#))
       (|COMMON-LISP|::|TYPE| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |CLM|::|CTR|))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<LAMBDA-ARG>|
       (|COMMON-LISP|::|IF|
        (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+AS-NEEDED-INPUT+|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = direction;~%"
         (|CLM|::|LC2| |CLM|::|VAR|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = closure;~%"
         (|CLM|::|LC2| |CLM|::|VAR|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|VAR| |CLM|::|CTR| |COMMON-LISP|::|TYPE|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<CONVOLVE?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<CONVOLVE?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<CONVOLVE?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<CONVOLVE?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_is_convolve(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<CONVOLVE>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<CONVOLVE>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<CONVOLVE>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|FUNC| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |CLM|::|FUNC|))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<CONVOLVE>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_convolve(~A))) {mus_error(0, \"convolve ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_convolve(~A, NULL);~%" (|CLM|::|LC2| |CLM|::|RESULT|)
        (|CLM|::|LC2| |CLM|::|S|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |COMMON-LISP|::|&OPTIONAL| |CLM|::|FUNC|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<SRC?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<SRC?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<SRC?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<SRC?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = mus_is_src(~A);~%"
        (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<SRC>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<SRC>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<SRC>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|FM| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CLM|::|FUNC| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<SRC>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_src(~A))) {mus_error(0, \"src ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|LET*|
        ((|CLM|::|INFO|
          (|COMMON-LISP|::|GETHASH| (|COMMON-LISP|::|SECOND| |CLM|::|S|)
           |CLM|::|VARS|))
         (|CLM|::|CTR|
          (|COMMON-LISP|::|AND| |CLM|::|INFO|
           (|CLM|::|VARINFO-CTR| |CLM|::|INFO|)
           (|COMMON-LISP|::|CADR| (|CLM|::|VARINFO-CTR| |CLM|::|INFO|)))))
        (|COMMON-LISP|::|IF| |CLM|::|FM|
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  ~A = mus_src(~A, ~A, ~A);~%" (|CLM|::|LC2| |CLM|::|RESULT|)
          (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|LC-NUM-REF| |CLM|::|FM|)
          (|COMMON-LISP|::|IF| |CLM|::|FUNC|
           (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "as_needed_~A"
            |CLM|::|CTR|)
           "NULL"))
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  ~A = mus_src(~A, 0.0, ~A);~%" (|CLM|::|LC2| |CLM|::|RESULT|)
          (|CLM|::|LC2| |CLM|::|S|)
          (|COMMON-LISP|::|IF| |CLM|::|FUNC|
           (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "as_needed_~A"
            |CLM|::|CTR|)
           "NULL"))))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |COMMON-LISP|::|&OPTIONAL| |CLM|::|FM|
    |CLM|::|FUNC|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<GRANULATE?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<GRANULATE?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<GRANULATE?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<GRANULATE?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_is_granulate(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<GRANULATE>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<GRANULATE>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<GRANULATE>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|INPUT-FUNC| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CLM|::|EDIT-FUNC| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|DECLARE|
       (|COMMON-LISP|::|IGNORE| |CLM|::|INPUT-FUNC| |CLM|::|EDIT-FUNC|))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<GRANULATE>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_granulate(~A))) {mus_error(0, \"granulate ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_granulate(~A, NULL);~%" (|CLM|::|LC2| |CLM|::|RESULT|)
        (|CLM|::|LC2| |CLM|::|S|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |COMMON-LISP|::|&OPTIONAL| |CLM|::|INPUT-FUNC|
    |CLM|::|EDIT-FUNC|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-LOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-SIZE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-UNLOAD|
 #(5. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<PHASE-VOCODER?>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<PHASE-VOCODER?>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<PHASE-VOCODER?>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<PHASE-VOCODER?>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_is_phase_vocoder(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<PHASE-VOCODER>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<PHASE-VOCODER>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<PHASE-VOCODER>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 7.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RESULT|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|S| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|FUNC1| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CLM|::|FUNC2| (|COMMON-LISP|::|FIFTH| . #1#))
       (|CLM|::|FUNC3|
        (|COMMON-LISP|::|CADR| . #2=((|COMMON-LISP|::|CDDDDR| . #1#))))
       (|CLM|::|FUNC4| (|COMMON-LISP|::|CADDR| . #2#)))
      (|COMMON-LISP|::|DECLARE|
       (|COMMON-LISP|::|IGNORE| |CLM|::|FUNC1| |CLM|::|FUNC2| |CLM|::|FUNC3|
        |CLM|::|FUNC4|))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<PHASE-VOCODER>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_phase_vocoder(~A))) {mus_error(0, \"phase-vocoder ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|S|) (|CLM|::|CLEAN-ARG| |CLM|::|S|)
         (|CLM|::|LC2| |CLM|::|S|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_phase_vocoder(~A, NULL);~%" (|CLM|::|LC2| |CLM|::|RESULT|)
        (|CLM|::|LC2| |CLM|::|S|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RESULT| |CLM|::|S| |COMMON-LISP|::|&OPTIONAL| |CLM|::|FUNC1|
    |CLM|::|FUNC2| |CLM|::|FUNC3| |CLM|::|FUNC4|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-REFLECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLM|::|GEN-MAKE|
 #(6. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<PHASE-VOCODER-AMPS>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<PHASE-VOCODER-AMPS>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<PHASE-VOCODER-AMPS>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<PHASE-VOCODER-AMPS>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_phase_vocoder(~A))) {mus_error(0, \"phase-vocoder ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|GEN|) (|CLM|::|CLEAN-ARG| |CLM|::|GEN|)
         (|CLM|::|LC2| |CLM|::|GEN|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_phase_vocoder_amps(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|GEN|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<PHASE-VOCODER-AMP-INCREMENTS>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<PHASE-VOCODER-AMP-INCREMENTS>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<PHASE-VOCODER-AMP-INCREMENTS>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<PHASE-VOCODER-AMP-INCREMENTS>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_phase_vocoder(~A))) {mus_error(0, \"phase-vocoder ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|GEN|) (|CLM|::|CLEAN-ARG| |CLM|::|GEN|)
         (|CLM|::|LC2| |CLM|::|GEN|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_phase_vocoder_amp_increments(~A);~%"
        (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|GEN|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<PHASE-VOCODER-FREQS>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<PHASE-VOCODER-FREQS>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<PHASE-VOCODER-FREQS>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<PHASE-VOCODER-FREQS>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_phase_vocoder(~A))) {mus_error(0, \"phase-vocoder ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|GEN|) (|CLM|::|CLEAN-ARG| |CLM|::|GEN|)
         (|CLM|::|LC2| |CLM|::|GEN|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_phase_vocoder_freqs(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|GEN|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<PHASE-VOCODER-PHASES>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<PHASE-VOCODER-PHASES>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<PHASE-VOCODER-PHASES>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<PHASE-VOCODER-PHASES>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_phase_vocoder(~A))) {mus_error(0, \"phase-vocoder ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|GEN|) (|CLM|::|CLEAN-ARG| |CLM|::|GEN|)
         (|CLM|::|LC2| |CLM|::|GEN|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_is_phase_vocoderhases(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|GEN|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<PHASE-VOCODER-PHASE-INCREMENTS>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<PHASE-VOCODER-PHASE-INCREMENTS>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<PHASE-VOCODER-PHASE-INCREMENTS>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<PHASE-VOCODER-PHASE-INCREMENTS>|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|>| |CLM|::|*SAFETY*| 0.)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (!(mus_is_phase_vocoder(~A))) {mus_error(0, \"phase-vocoder ~(~A~) is %s\", mus_describe(~A)); goto RUN_ALL_DONE;}~%"
         (|CLM|::|LC2| |CLM|::|GEN|) (|CLM|::|CLEAN-ARG| |CLM|::|GEN|)
         (|CLM|::|LC2| |CLM|::|GEN|)))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_is_phase_vocoderhase_increments(~A);~%"
        (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|GEN|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|DEF-CLM-STRUCT|)
(|SYSTEM|::|%PUTD| '|CLM|::|DEF-CLM-STRUCT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|DEF-CLM-STRUCT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|NAME| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|FIELDS| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|DEF-CLM-STRUCT|
       `(|COMMON-LISP|::|EVAL-WHEN| (:|COMPILE-TOPLEVEL| :|LOAD-TOPLEVEL|)
         (|COMMON-LISP|::|PROGN|
          (|COMMON-LISP|::|DEFSTRUCT|
           (,|CLM|::|NAME| (:|TYPE| |COMMON-LISP|::|VECTOR|) :|NAMED|)
           ,@(|COMMON-LISP|::|LOOP| |CLM|::|FOR| |CLM|::|FLD| |CLM|::|IN|
              |CLM|::|FIELDS| |CLM|::|COLLECT|
              (|COMMON-LISP|::|IF| (|COMMON-LISP|::|LISTP| |CLM|::|FLD|)
               (|COMMON-LISP|::|IF|
                (|COMMON-LISP|::|NOT|
                 (|COMMON-LISP|::|SYMBOLP|
                  (|COMMON-LISP|::|SECOND| |CLM|::|FLD|)))
                |CLM|::|FLD|
                (|COMMON-LISP|::|IF|
                 (|COMMON-LISP|::|NOT|
                  (|COMMON-LISP|::|MEMBER|
                   (|COMMON-LISP|::|SECOND| |CLM|::|FLD|)
                   (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|INTEGER|
                    '|COMMON-LISP|::|FLOAT| '|COMMON-LISP|::|DOUBLE-FLOAT|
                    '|COMMON-LISP|::|REAL| '|COMMON-LISP|::|SHORT-FLOAT|
                    '|COMMON-LISP|::|SINGLE-FLOAT| '|COMMON-LISP|::|RATIONAL|
                    '|COMMON-LISP|::|NUMBER| '|COMMON-LISP|::|BIGNUM|
                    '|COMMON-LISP|::|FIXNUM|)))
                 (|COMMON-LISP|::|ERROR|
                  "~A is not a type def-clm-struct can handle"
                  (|COMMON-LISP|::|SECOND| |CLM|::|FLD|))
                 (|COMMON-LISP|::|FIRST| |CLM|::|FLD|)))
               |CLM|::|FLD|)))
          ,@(|COMMON-LISP|::|LOOP| |CLM|::|FOR| |CLM|::|FIELD| |CLM|::|IN|
             |CLM|::|FIELDS| |COMMON-LISP|::|AND| |CLM|::|I| |CLM|::|FROM| 1.
             |CLM|::|COLLECT|
             (|COMMON-LISP|::|LET|
              ((|CLM|::|FIELDNAME|
                (|COMMON-LISP|::|CONCATENATE| '|COMMON-LISP|::|STRING|
                 (|COMMON-LISP|::|SYMBOL-NAME| |CLM|::|NAME|) "-"
                 (|COMMON-LISP|::|SYMBOL-NAME|
                  (|COMMON-LISP|::|IF| (|COMMON-LISP|::|LISTP| |CLM|::|FIELD|)
                   (|COMMON-LISP|::|FIRST| |CLM|::|FIELD|) |CLM|::|FIELD|)))))
              `(|COMMON-LISP|::|PROGN|
                (|CLM|::|DEF-CLM-FUN|
                 (|COMMON-LISP|::|INTERN| ,|CLM|::|FIELDNAME|)
                 #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|VAR| |CLM|::|X|)
                    (|CLM|::|PACKAGE-OP| '|CLM|::|<AREF>| |CLM|::|VAR|
                     (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|AREF|
                      (|COMMON-LISP|::|CADR| |CLM|::|X|) ,|CLM|::|I|))))
                (|COMMON-LISP|::|PUSH|
                 (|COMMON-LISP|::|LIST|
                  (|COMMON-LISP|::|INTERN| ,|CLM|::|FIELDNAME|)
                  '|CLM|::|<SETF-AREF>| (|COMMON-LISP|::|LIST| ,|CLM|::|I|))
                 |CLM|::|SETF-FUNCTIONS|)))))))))))
  '(|CLM|::|NAME| |COMMON-LISP|::|&REST| |CLM|::|FIELDS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|DEF-CLM-FLOAT-STRUCT|)
(|SYSTEM|::|%PUTD| '|CLM|::|DEF-CLM-FLOAT-STRUCT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|DEF-CLM-FLOAT-STRUCT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|NAME| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|FIELDS| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|DEF-CLM-FLOAT-STRUCT|
       `(|COMMON-LISP|::|EVAL-WHEN| (:|COMPILE-TOPLEVEL| :|LOAD-TOPLEVEL|)
         (|COMMON-LISP|::|PROGN|
          (|COMMON-LISP|::|DEFSTRUCT|
           (,|CLM|::|NAME|
            (:|TYPE| (|COMMON-LISP|::|VECTOR| |COMMON-LISP|::|DOUBLE-FLOAT|)))
           ,@(|COMMON-LISP|::|LOOP| |CLM|::|FOR| |CLM|::|FLD| |CLM|::|IN|
              |CLM|::|FIELDS| |CLM|::|COLLECT|
              (|COMMON-LISP|::|IF| (|COMMON-LISP|::|LISTP| |CLM|::|FLD|)
               (|COMMON-LISP|::|IF|
                (|COMMON-LISP|::|NOT|
                 (|COMMON-LISP|::|SYMBOLP|
                  (|COMMON-LISP|::|SECOND| |CLM|::|FLD|)))
                |CLM|::|FLD|
                (|COMMON-LISP|::|IF|
                 (|COMMON-LISP|::|NOT|
                  (|COMMON-LISP|::|MEMBER|
                   (|COMMON-LISP|::|SECOND| |CLM|::|FLD|)
                   (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|FLOAT|
                    '|COMMON-LISP|::|DOUBLE-FLOAT| '|COMMON-LISP|::|REAL|
                    '|COMMON-LISP|::|SHORT-FLOAT|
                    '|COMMON-LISP|::|SINGLE-FLOAT| '|COMMON-LISP|::|NUMBER|)))
                 (|COMMON-LISP|::|ERROR|
                  "~A is not a type def-clm-float-struct can handle"
                  (|COMMON-LISP|::|SECOND| |CLM|::|FLD|))
                 (|COMMON-LISP|::|FIRST| |CLM|::|FLD|)))
               |CLM|::|FLD|)))
          ,@(|COMMON-LISP|::|LOOP| |CLM|::|FOR| |CLM|::|FIELD| |CLM|::|IN|
             |CLM|::|FIELDS| |COMMON-LISP|::|AND| |CLM|::|I| |CLM|::|FROM| 0.
             |CLM|::|COLLECT|
             (|COMMON-LISP|::|LET|
              ((|CLM|::|FIELDNAME|
                (|COMMON-LISP|::|CONCATENATE| '|COMMON-LISP|::|STRING|
                 (|COMMON-LISP|::|SYMBOL-NAME| |CLM|::|NAME|) "-"
                 (|COMMON-LISP|::|SYMBOL-NAME|
                  (|COMMON-LISP|::|IF| (|COMMON-LISP|::|LISTP| |CLM|::|FIELD|)
                   (|COMMON-LISP|::|FIRST| |CLM|::|FIELD|) |CLM|::|FIELD|)))))
              `(|COMMON-LISP|::|PROGN|
                (|CLM|::|DEF-CLM-FUN|
                 (|COMMON-LISP|::|INTERN| ,|CLM|::|FIELDNAME|)
                 #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|VAR| |CLM|::|X|)
                    (|CLM|::|PACKAGE-OP| '|CLM|::|<DOUBLE-AREF>| |CLM|::|VAR|
                     (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|AREF|
                      (|COMMON-LISP|::|CADR| |CLM|::|X|) ,|CLM|::|I|)
                     :|CLM-REAL|)))
                (|COMMON-LISP|::|PUSH|
                 (|COMMON-LISP|::|LIST|
                  (|COMMON-LISP|::|INTERN| ,|CLM|::|FIELDNAME|)
                  '|CLM|::|<SETF-DOUBLE-AREF>|
                  (|COMMON-LISP|::|LIST| ,|CLM|::|I|) :|CLM-REAL|)
                 |CLM|::|SETF-FUNCTIONS|)))))))))))
  '(|CLM|::|NAME| |COMMON-LISP|::|&REST| |CLM|::|FIELDS|)))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |CLM|::|*WITH-REFLECTION*|))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|RUN*|)
(|SYSTEM|::|%PUTD| '|CLM|::|RUN*|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|RUN*|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|VARS| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|BODY| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|RUN*|
       (|COMMON-LISP|::|SETF| |CLM|::|*WITH-REFLECTION*| |COMMON-LISP|::|T|)
       `(|COMMON-LISP|::|PROGN| (|CLM|::|RUN| ,|CLM|::|BODY|)
         (|COMMON-LISP|::|LET|
          ((|CLM|::|INSVARS|
            (|COMMON-LISP|::|GET| |CLM|::|*CLM-INS*| :|INS-VARS|)))
          ,@(|COMMON-LISP|::|LOOP| |CLM|::|FOR| |CLM|::|V| |CLM|::|IN|
             |CLM|::|VARS| |CLM|::|COLLECT|
             `(|COMMON-LISP|::|LET|
               ((|CLM|::|VAR|
                 (|COMMON-LISP|::|FIND|
                  (|COMMON-LISP|::|SYMBOL-NAME| ',|CLM|::|V|) |CLM|::|INSVARS|
                  :|TEST| #'|COMMON-LISP|::|STRING-EQUAL| :|KEY|
                  #'|COMMON-LISP|::|FIRST|)))
               (|COMMON-LISP|::|WHEN| |CLM|::|VAR|
                (|COMMON-LISP|::|IF|
                 (|COMMON-LISP|::|AND| (|COMMON-LISP|::|FOURTH| |CLM|::|VAR|)
                  (|COMMON-LISP|::|MEMBER|
                   (|COMMON-LISP|::|FOURTH| |CLM|::|VAR|)
                   (|COMMON-LISP|::|LIST| :|INTEGER| :|REAL| :|BOOLEAN|)))
                 (|COMMON-LISP|::|IF|
                  (|COMMON-LISP|::|EQ| (|COMMON-LISP|::|FOURTH| |CLM|::|VAR|)
                   :|INTEGER|)
                  (|COMMON-LISP|::|SETF| ,|CLM|::|V|
                   (|COMMON-LISP|::|AREF| (|CLM|::|CLM-DATAI|)
                    (|COMMON-LISP|::|SECOND| |CLM|::|VAR|)))
                  (|COMMON-LISP|::|IF|
                   (|COMMON-LISP|::|EQ| (|COMMON-LISP|::|FOURTH| |CLM|::|VAR|)
                    :|REAL|)
                   (|COMMON-LISP|::|SETF| ,|CLM|::|V|
                    (|COMMON-LISP|::|AREF| (|CLM|::|CLM-DATAR|)
                     (|COMMON-LISP|::|THIRD| |CLM|::|VAR|)))
                   (|COMMON-LISP|::|SETF| ,|CLM|::|V|
                    (|COMMON-LISP|::|NOT|
                     (|COMMON-LISP|::|=|
                      (|COMMON-LISP|::|AREF| (|CLM|::|CLM-DATAI|)
                       (|COMMON-LISP|::|SECOND| |CLM|::|VAR|))
                      0.)))))
                 (|COMMON-LISP|::|LET|
                  ((|CLM|::|VAL|
                    (|CLM|::|GEN-UNLOAD|
                     (|CLM|::|RUN-TYPE->CLASS|
                      (|COMMON-LISP|::|AREF| (|CLM|::|CLM-DATAI|)
                       (|COMMON-LISP|::|SECOND| |CLM|::|VAR|)))
                     (|COMMON-LISP|::|SECOND| |CLM|::|VAR|)
                     (|COMMON-LISP|::|THIRD| |CLM|::|VAR|) (|CLM|::|CLM-DATAI|)
                     (|CLM|::|CLM-DATAR|))))
                  (|COMMON-LISP|::|WHEN| |CLM|::|VAL|
                   (|COMMON-LISP|::|SETF| ,|CLM|::|V|
                    |CLM|::|VAL|))))))))))))))
  '(|CLM|::|VARS| |CLM|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GENERATOR?|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-FREQUENCY>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-FREQUENCY>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-FREQUENCY>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-FREQUENCY>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A = mus_frequency(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
         (|CLM|::|LC2| |CLM|::|GEN|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = 0.0;~%"
         (|CLM|::|LC2| |CLM|::|RES|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-SET-FREQUENCY>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-SET-FREQUENCY>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-SET-FREQUENCY>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|TYPE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|VAL| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-SET-FREQUENCY>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+SETF+|)
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_set_frequency(~A, ~A);~%" (|CLM|::|LC2| |CLM|::|GEN|)
          (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_set_frequency(~A, mus_frequency(~A) ~A ~A);~%"
          (|CLM|::|LC2| |CLM|::|GEN|) (|CLM|::|LC2| |CLM|::|GEN|)
          (|COMMON-LISP|::|IF|
           (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+INCF+|) "+" "-")
          (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))))
       |COMMON-LISP|::|NIL|)))))
  '(|COMMON-LISP|::|TYPE| |CLM|::|GEN| |CLM|::|VAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-PHASE>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-PHASE>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-PHASE>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-PHASE>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = mus_phase(~A);~%"
         (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|GEN|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = 0.0;~%"
         (|CLM|::|LC2| |CLM|::|RES|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-SET-PHASE>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-SET-PHASE>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-SET-PHASE>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|TYPE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|VAL| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-SET-PHASE>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+SETF+|)
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_set_phase(~A, ~A);~%" (|CLM|::|LC2| |CLM|::|GEN|)
          (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_set_phase(~A, mus_phase(~A) ~A ~A);~%"
          (|CLM|::|LC2| |CLM|::|GEN|) (|CLM|::|LC2| |CLM|::|GEN|)
          (|COMMON-LISP|::|IF|
           (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+INCF+|) "+" "-")
          (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))))
       |COMMON-LISP|::|NIL|)))))
  '(|COMMON-LISP|::|TYPE| |CLM|::|GEN| |CLM|::|VAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-SCALER>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-SCALER>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-SCALER>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-SCALER>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = mus_scaler(~A);~%"
         (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|GEN|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = 0.0;~%"
         (|CLM|::|LC2| |CLM|::|RES|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-SET-SCALER>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-SET-SCALER>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-SET-SCALER>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|TYPE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|VAL| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-SET-SCALER>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+SETF+|)
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_set_scaler(~A, ~A);~%" (|CLM|::|LC2| |CLM|::|GEN|)
          (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_set_scaler(~A, mus_scaler(~A) ~A ~A);~%"
          (|CLM|::|LC2| |CLM|::|GEN|) (|CLM|::|LC2| |CLM|::|GEN|)
          (|COMMON-LISP|::|IF|
           (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+INCF+|) "+" "-")
          (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))))
       |COMMON-LISP|::|NIL|)))))
  '(|COMMON-LISP|::|TYPE| |CLM|::|GEN| |CLM|::|VAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-OFFSET>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-OFFSET>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-OFFSET>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-OFFSET>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = mus_offset(~A);~%"
         (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|GEN|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = 0.0;~%"
         (|CLM|::|LC2| |CLM|::|RES|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-RESET>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-RESET>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-RESET>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |CLM|::|RES|))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-RESET>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  mus_reset(~A);~%"
         (|CLM|::|LC2| |CLM|::|GEN|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-INCREMENT>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-INCREMENT>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-INCREMENT>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-INCREMENT>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A = mus_increment(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
         (|CLM|::|LC2| |CLM|::|GEN|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = 0.0;~%"
         (|CLM|::|LC2| |CLM|::|RES|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-SET-INCREMENT>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-SET-INCREMENT>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-SET-INCREMENT>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|TYPE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|VAL| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-SET-INCREMENT>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+SETF+|)
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_set_increment(~A, ~A);~%" (|CLM|::|LC2| |CLM|::|GEN|)
          (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_set_increment(~A, mus_increment(~A) ~A ~A);~%"
          (|CLM|::|LC2| |CLM|::|GEN|) (|CLM|::|LC2| |CLM|::|GEN|)
          (|COMMON-LISP|::|IF|
           (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+INCF+|) "+" "-")
          (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))))
       |COMMON-LISP|::|NIL|)))))
  '(|COMMON-LISP|::|TYPE| |CLM|::|GEN| |CLM|::|VAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-LENGTH>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-LENGTH>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-LENGTH>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-LENGTH>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = mus_length(~A);~%"
         (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|GEN|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = 0;~%"
         (|CLM|::|LC2| |CLM|::|RES|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-SET-LENGTH>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-SET-LENGTH>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-SET-LENGTH>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|TYPE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|VAL| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-SET-LENGTH>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+SETF+|)
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_set_length(~A, ~A);~%" (|CLM|::|LC2| |CLM|::|GEN|)
          (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_set_length(~A, mus_length(~A) ~A ~A);~%"
          (|CLM|::|LC2| |CLM|::|GEN|) (|CLM|::|LC2| |CLM|::|GEN|)
          (|COMMON-LISP|::|IF|
           (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+INCF+|) "+" "-")
          (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))))
       |COMMON-LISP|::|NIL|)))))
  '(|COMMON-LISP|::|TYPE| |CLM|::|GEN| |CLM|::|VAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-RAMP>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-RAMP>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-RAMP>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-RAMP>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = mus_ramp(~A);~%"
         (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|GEN|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = 0.0;~%"
         (|CLM|::|LC2| |CLM|::|RES|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-SET-RAMP>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-SET-RAMP>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-SET-RAMP>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|TYPE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|VAL| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-SET-RAMP>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+SETF+|)
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  mus_set_ramp(~A, ~A);~%"
          (|CLM|::|LC2| |CLM|::|GEN|) (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_set_ramp(~A, mus_ramp(~A) ~A ~A);~%"
          (|CLM|::|LC2| |CLM|::|GEN|) (|CLM|::|LC2| |CLM|::|GEN|)
          (|COMMON-LISP|::|IF|
           (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+INCF+|) "+" "-")
          (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))))
       |COMMON-LISP|::|NIL|)))))
  '(|COMMON-LISP|::|TYPE| |CLM|::|GEN| |CLM|::|VAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-INTERP-TYPE>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-INTERP-TYPE>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-INTERP-TYPE>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-INTERP-TYPE>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A = mus_interp_type(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
         (|CLM|::|LC2| |CLM|::|GEN|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = 0;~%"
         (|CLM|::|LC2| |CLM|::|RES|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-A0>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-A0>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-A0>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-A0>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A = mus_xcoeff(~A, 0);~%" (|CLM|::|LC2| |CLM|::|RES|)
         (|CLM|::|LC2| |CLM|::|GEN|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = 0.0;~%"
         (|CLM|::|LC2| |CLM|::|RES|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-SET-A0>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-SET-A0>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-SET-A0>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|TYPE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|VAL| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-SET-A0>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+SETF+|)
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_set_xcoeff(~A, 0, ~A);~%" (|CLM|::|LC2| |CLM|::|GEN|)
          (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_set_xcoeff(~A, 0, mus_xcoeff(~A, 0) ~A ~A);~%"
          (|CLM|::|LC2| |CLM|::|GEN|) (|CLM|::|LC2| |CLM|::|GEN|)
          (|COMMON-LISP|::|IF|
           (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+INCF+|) "+" "-")
          (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))))
       |COMMON-LISP|::|NIL|)))))
  '(|COMMON-LISP|::|TYPE| |CLM|::|GEN| |CLM|::|VAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-A1>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-A1>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-A1>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-A1>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A = mus_xcoeff(~A, 1);~%" (|CLM|::|LC2| |CLM|::|RES|)
         (|CLM|::|LC2| |CLM|::|GEN|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = 0.0;~%"
         (|CLM|::|LC2| |CLM|::|RES|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-SET-A1>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-SET-A1>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-SET-A1>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|TYPE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|VAL| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-SET-A1>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+SETF+|)
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_set_xcoeff(~A, 1, ~A);~%" (|CLM|::|LC2| |CLM|::|GEN|)
          (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_set_xcoeff(~A, 1, mus_xcoeff(~A, 1) ~A ~A);~%"
          (|CLM|::|LC2| |CLM|::|GEN|) (|CLM|::|LC2| |CLM|::|GEN|)
          (|COMMON-LISP|::|IF|
           (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+INCF+|) "+" "-")
          (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))))
       |COMMON-LISP|::|NIL|)))))
  '(|COMMON-LISP|::|TYPE| |CLM|::|GEN| |CLM|::|VAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-A2>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-A2>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-A2>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-A2>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A = mus_xcoeff(~A, 2);~%" (|CLM|::|LC2| |CLM|::|RES|)
         (|CLM|::|LC2| |CLM|::|GEN|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = 0.0;~%"
         (|CLM|::|LC2| |CLM|::|RES|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-SET-A2>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-SET-A2>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-SET-A2>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|TYPE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|VAL| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-SET-A2>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+SETF+|)
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_set_xcoeff(~A, 2, ~A);~%" (|CLM|::|LC2| |CLM|::|GEN|)
          (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_set_xcoeff(~A, 2, mus_xcoeff(~A, 2) ~A ~A);~%"
          (|CLM|::|LC2| |CLM|::|GEN|) (|CLM|::|LC2| |CLM|::|GEN|)
          (|COMMON-LISP|::|IF|
           (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+INCF+|) "+" "-")
          (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))))
       |COMMON-LISP|::|NIL|)))))
  '(|COMMON-LISP|::|TYPE| |CLM|::|GEN| |CLM|::|VAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-B1>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-B1>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-B1>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-B1>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A = mus_ycoeff(~A, 1);~%" (|CLM|::|LC2| |CLM|::|RES|)
         (|CLM|::|LC2| |CLM|::|GEN|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = 0.0;~%"
         (|CLM|::|LC2| |CLM|::|RES|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-SET-B1>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-SET-B1>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-SET-B1>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|TYPE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|VAL| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-SET-B1>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+SETF+|)
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_set_ycoeff(~A, 1, ~A);~%" (|CLM|::|LC2| |CLM|::|GEN|)
          (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_set_ycoeff(~A, 1, mus_ycoeff(~A, 1) ~A ~A);~%"
          (|CLM|::|LC2| |CLM|::|GEN|) (|CLM|::|LC2| |CLM|::|GEN|)
          (|COMMON-LISP|::|IF|
           (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+INCF+|) "+" "-")
          (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))))
       |COMMON-LISP|::|NIL|)))))
  '(|COMMON-LISP|::|TYPE| |CLM|::|GEN| |CLM|::|VAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-B2>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-B2>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-B2>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-B2>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A = mus_ycoeff(~A, 2);~%" (|CLM|::|LC2| |CLM|::|RES|)
         (|CLM|::|LC2| |CLM|::|GEN|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = 0.0;~%"
         (|CLM|::|LC2| |CLM|::|RES|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-SET-B2>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-SET-B2>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-SET-B2>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|TYPE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|VAL| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-SET-B2>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+SETF+|)
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_set_ycoeff(~A, 2, ~A);~%" (|CLM|::|LC2| |CLM|::|GEN|)
          (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_set_ycoeff(~A, 2, mus_xcoeff(~A, 2) ~A ~A);~%"
          (|CLM|::|LC2| |CLM|::|GEN|) (|CLM|::|LC2| |CLM|::|GEN|)
          (|COMMON-LISP|::|IF|
           (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+INCF+|) "+" "-")
          (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))))
       |COMMON-LISP|::|NIL|)))))
  '(|COMMON-LISP|::|TYPE| |CLM|::|GEN| |CLM|::|VAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-SET-XCOEFF>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-SET-XCOEFF>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-SET-XCOEFF>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 5. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|TYPE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|INDEX| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CLM|::|VAL| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-SET-XCOEFF>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+SETF+|)
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_set_xcoeff(~A, ~A, ~A);~%" (|CLM|::|LC2| |CLM|::|GEN|)
          (|CLM|::|LC-NUM-REF| |CLM|::|INDEX| :|INTEGER|)
          (|CLM|::|LC-NUM-REF| |CLM|::|VAL| :|REAL|))
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_set_xcoeff(~A, ~A, mus_xcoeff(~A, ~A) ~A ~A);~%"
          (|CLM|::|LC2| |CLM|::|GEN|)
          (|CLM|::|LC-NUM-REF| |CLM|::|INDEX| :|INTEGER|)
          (|CLM|::|LC2| |CLM|::|GEN|)
          (|CLM|::|LC-NUM-REF| |CLM|::|INDEX| :|INTEGER|)
          (|COMMON-LISP|::|IF|
           (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+INCF+|) "+" "-")
          (|CLM|::|LC-NUM-REF| |CLM|::|VAL| :|REAL|))))
       |COMMON-LISP|::|NIL|)))))
  '(|COMMON-LISP|::|TYPE| |CLM|::|GEN| |CLM|::|INDEX| |CLM|::|VAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-SET-YCOEFF>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-SET-YCOEFF>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-SET-YCOEFF>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 5. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|TYPE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|INDEX| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CLM|::|VAL| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-SET-YCOEFF>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+SETF+|)
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_set_ycoeff(~A, ~A, ~A);~%" (|CLM|::|LC2| |CLM|::|GEN|)
          (|CLM|::|LC-NUM-REF| |CLM|::|INDEX| :|INTEGER|)
          (|CLM|::|LC-NUM-REF| |CLM|::|VAL| :|REAL|))
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_set_ycoeff(~A, ~A, mus_ycoeff(~A, ~A) ~A ~A);~%"
          (|CLM|::|LC2| |CLM|::|GEN|)
          (|CLM|::|LC-NUM-REF| |CLM|::|INDEX| :|INTEGER|)
          (|CLM|::|LC2| |CLM|::|GEN|)
          (|CLM|::|LC-NUM-REF| |CLM|::|INDEX| :|INTEGER|)
          (|COMMON-LISP|::|IF|
           (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+INCF+|) "+" "-")
          (|CLM|::|LC-NUM-REF| |CLM|::|VAL| :|REAL|))))
       |COMMON-LISP|::|NIL|)))))
  '(|COMMON-LISP|::|TYPE| |CLM|::|GEN| |CLM|::|INDEX| |CLM|::|VAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-LOCATION>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-LOCATION>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-LOCATION>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-LOCATION>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = mus_location(~A);~%"
         (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|GEN|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = 0;~%"
         (|CLM|::|LC2| |CLM|::|RES|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-SET-LOCATION>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-SET-LOCATION>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-SET-LOCATION>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|TYPE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|VAL| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-SET-LOCATION>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+SETF+|)
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_set_location(~A, ~A);~%" (|CLM|::|LC2| |CLM|::|GEN|)
          (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_set_location(~A, mus_location(~A) ~A ~A);~%"
          (|CLM|::|LC2| |CLM|::|GEN|) (|CLM|::|LC2| |CLM|::|GEN|)
          (|COMMON-LISP|::|IF|
           (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+INCF+|) "+" "-")
          (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))))
       |COMMON-LISP|::|NIL|)))))
  '(|COMMON-LISP|::|TYPE| |CLM|::|GEN| |CLM|::|VAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-CHANNEL>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-CHANNEL>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-CHANNEL>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-CHANNEL>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = mus_channel(~A);~%"
         (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|GEN|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = 0;~%"
         (|CLM|::|LC2| |CLM|::|RES|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-CHANNELS>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-CHANNELS>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-CHANNELS>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-CHANNELS>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = mus_channels(~A);~%"
         (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|GEN|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = 1;~%"
         (|CLM|::|LC2| |CLM|::|RES|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-ORDER>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-ORDER>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-ORDER>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-ORDER>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = mus_order(~A);~%"
         (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|GEN|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = 0;~%"
         (|CLM|::|LC2| |CLM|::|RES|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-WIDTH>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-WIDTH>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-WIDTH>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-WIDTH>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = mus_width(~A);~%"
         (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|GEN|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = 0;~%"
         (|CLM|::|LC2| |CLM|::|RES|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-SET-WIDTH>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-SET-WIDTH>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-SET-WIDTH>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|TYPE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|VAL| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-SET-WIDTH>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+SETF+|)
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_set_width(~A, ~A);~%" (|CLM|::|LC2| |CLM|::|GEN|)
          (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_set_width(~A, mus_width(~A) ~A ~A);~%"
          (|CLM|::|LC2| |CLM|::|GEN|) (|CLM|::|LC2| |CLM|::|GEN|)
          (|COMMON-LISP|::|IF|
           (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+INCF+|) "+" "-")
          (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))))
       |COMMON-LISP|::|NIL|)))))
  '(|COMMON-LISP|::|TYPE| |CLM|::|GEN| |CLM|::|VAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-HOP>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-HOP>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-HOP>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-HOP>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = mus_hop(~A);~%"
         (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|GEN|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = 0;~%"
         (|CLM|::|LC2| |CLM|::|RES|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-SET-HOP>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-SET-HOP>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-SET-HOP>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|TYPE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|VAL| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-SET-HOP>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+SETF+|)
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  mus_set_hop(~A, ~A);~%"
          (|CLM|::|LC2| |CLM|::|GEN|) (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_set_hop(~A, mus_hop(~A) ~A ~A);~%" (|CLM|::|LC2| |CLM|::|GEN|)
          (|CLM|::|LC2| |CLM|::|GEN|)
          (|COMMON-LISP|::|IF|
           (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+INCF+|) "+" "-")
          (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))))
       |COMMON-LISP|::|NIL|)))))
  '(|COMMON-LISP|::|TYPE| |CLM|::|GEN| |CLM|::|VAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-EQUAL>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-EQUAL>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-EQUAL>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN1| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|GEN2| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-EQUAL>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = mus_equal(~A, ~A);~%"
        (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|GEN1|)
        (|CLM|::|LC2| |CLM|::|GEN2|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN1| |CLM|::|GEN2|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-DESCRIBE>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-DESCRIBE>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-DESCRIBE>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-DESCRIBE>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  if (~A) free(~A);~%"
        (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|RES|))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = strdup(mus_describe(~A));~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|GEN|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-NAME>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-NAME>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-NAME>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-NAME>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = (char *)mus_name(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|GEN|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-FILE-NAME>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-FILE-NAME>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-FILE-NAME>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-FILE-NAME>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = mus_file_name(~A);~%"
        (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|GEN|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-HEADER-TYPE-NAME>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-HEADER-TYPE-NAME>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-HEADER-TYPE-NAME>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-HEADER-TYPE-NAME>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = (char *)mus_header_type_name(~A);~%"
        (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-DATA-FORMAT-NAME>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-DATA-FORMAT-NAME>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-DATA-FORMAT-NAME>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-DATA-FORMAT-NAME>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = (char *)mus_sample_type_name(~A);~%"
        (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|ARG|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<STRING=>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<STRING=>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<STRING=>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG1| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|ARG2| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<STRING=>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        " ~A = (strcmp(~A, ~A) == 0);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC-STR-REF| |CLM|::|ARG1|)
        (|CLM|::|LC-STR-REF| |CLM|::|ARG2|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG1| |CLM|::|ARG2|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<STRING-EQUAL>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<STRING-EQUAL>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<STRING-EQUAL>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|ARG1| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|ARG2| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<STRING-EQUAL>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        " ~A = (strcasecmp(~A, ~A) == 0);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC-STR-REF| |CLM|::|ARG1|)
        (|CLM|::|LC-STR-REF| |CLM|::|ARG2|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|ARG1| |CLM|::|ARG2|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-DATA>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-DATA>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-DATA>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-DATA>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = mus_data(~A);~%"
        (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|GEN|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-XCOEFFS>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-XCOEFFS>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-XCOEFFS>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-XCOEFFS>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = mus_xcoeffs(~A);~%"
        (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|GEN|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-YCOEFFS>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-YCOEFFS>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-YCOEFFS>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-YCOEFFS>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = mus_ycoeffs(~A);~%"
        (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|GEN|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-XCOEFF>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-XCOEFF>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-XCOEFF>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|INDEX| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-XCOEFF>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_xcoeff(~A, ~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|GEN|)
        (|CLM|::|LC-NUM-REF| |CLM|::|INDEX| :|INTEGER|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN| |CLM|::|INDEX|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-YCOEFF>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-YCOEFF>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-YCOEFF>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|INDEX| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-YCOEFF>|
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  ~A = mus_ycoeff(~A, ~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
        (|CLM|::|LC2| |CLM|::|GEN|)
        (|CLM|::|LC-NUM-REF| |CLM|::|INDEX| :|INTEGER|))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN| |CLM|::|INDEX|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-FEEDFORWARD>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-FEEDFORWARD>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-FEEDFORWARD>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-FEEDFORWARD>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A = mus_feedforward(~A);~%" (|CLM|::|LC2| |CLM|::|RES|)
         (|CLM|::|LC2| |CLM|::|GEN|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = 0.0;~%"
         (|CLM|::|LC2| |CLM|::|RES|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-SET-FEEDFORWARD>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-SET-FEEDFORWARD>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-SET-FEEDFORWARD>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|TYPE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|VAL| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-SET-FEEDFORWARD>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+SETF+|)
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_set_feedforward(~A, ~A);~%" (|CLM|::|LC2| |CLM|::|GEN|)
          (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_set_feedforward(~A, mus_feedforward(~A) ~A ~A);~%"
          (|CLM|::|LC2| |CLM|::|GEN|) (|CLM|::|LC2| |CLM|::|GEN|)
          (|COMMON-LISP|::|IF|
           (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+INCF+|) "+" "-")
          (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))))
       |COMMON-LISP|::|NIL|)))))
  '(|COMMON-LISP|::|TYPE| |CLM|::|GEN| |CLM|::|VAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-FEEDBACK>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-FEEDBACK>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-FEEDBACK>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|RES| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-FEEDBACK>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = mus_feedback(~A);~%"
         (|CLM|::|LC2| |CLM|::|RES|) (|CLM|::|LC2| |CLM|::|GEN|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ~A = 0.0;~%"
         (|CLM|::|LC2| |CLM|::|RES|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|RES| |CLM|::|GEN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<MUS-SET-FEEDBACK>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<MUS-SET-FEEDBACK>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<MUS-SET-FEEDBACK>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|TYPE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|GEN| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|VAL| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<MUS-SET-FEEDBACK>|
       (|COMMON-LISP|::|IF| (|CLM|::|GENERATOR?| |CLM|::|GEN|)
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+SETF+|)
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_set_feedback(~A, ~A);~%" (|CLM|::|LC2| |CLM|::|GEN|)
          (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_set_feedback(~A, mus_feedback(~A) ~A ~A);~%"
          (|CLM|::|LC2| |CLM|::|GEN|) (|CLM|::|LC2| |CLM|::|GEN|)
          (|COMMON-LISP|::|IF|
           (|COMMON-LISP|::|=| |COMMON-LISP|::|TYPE| |CLM|::|+INCF+|) "+" "-")
          (|CLM|::|LC-NUM-REF| |CLM|::|VAL|))))
       |COMMON-LISP|::|NIL|)))))
  '(|COMMON-LISP|::|TYPE| |CLM|::|GEN| |CLM|::|VAL|)))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |CLM|::|*C-PROC*|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |CLM|::|*LISP-PROC*|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |CLM|::|DAT-R|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |CLM|::|DAT-I|))
(|SYSTEM|::|C-DEFUN| '|CLM|::|METHOD-TYPE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLOS|::|METHOD|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|UNCHAIN-VARIABLE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLM|::|LST|)))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |CLM|::|VARIABLE-LOAD-LIST|))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<START>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<START>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<START>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|END| (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<START>|
       (|COMMON-LISP|::|SETF| |CLM|::|DAT-R| |CLM|::|+FLOAT-BLOCK-SIZE+|)
       (|COMMON-LISP|::|SETF| |CLM|::|DAT-I| |CLM|::|+INT-BLOCK-SIZE+|)
       (|COMMON-LISP|::|CLRHASH| |CLM|::|C-NAMES|)
       (|COMMON-LISP|::|CLRHASH| |CLM|::|VARIABLE-NAME|)
       (|COMMON-LISP|::|SETF| |CLM|::|VARIABLE-LOAD-LIST| |COMMON-LISP|::|NIL|)
       (|COMMON-LISP|::|MAPHASH|
        #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|KEY| |CLM|::|LST|)
           (|CLM|::|UNCHAIN-VARIABLE| |CLM|::|LST|)
           (|COMMON-LISP|::|WHEN|
            (|COMMON-LISP|::|AND|
             (|COMMON-LISP|::|NULL| (|CLM|::|VARINFO-TYPE| |CLM|::|LST|))
             (|CLM|::|VARINFO-REFD| |CLM|::|LST|))
            (|COMMON-LISP|::|SETF| (|CLM|::|VARINFO-ILOC| |CLM|::|LST|)
             |CLM|::|DAT-I|)
            (|COMMON-LISP|::|SETF| (|CLM|::|VARINFO-RLOC| |CLM|::|LST|)
             |CLM|::|DAT-R|)
            (|COMMON-LISP|::|IF|
             (|COMMON-LISP|::|NOT| (|CLM|::|VARINFO-TEMP| |CLM|::|LST|))
             (|COMMON-LISP|::|PUSH|
              (|COMMON-LISP|::|LIST| |CLM|::|KEY| |CLM|::|DAT-I| |CLM|::|DAT-R|
               |COMMON-LISP|::|NIL|)
              |CLM|::|VARIABLE-LOAD-LIST|))
            (|COMMON-LISP|::|INCF| |CLM|::|DAT-I|
             (|COMMON-LISP|::|*| 2. (|CLM|::|VARINFO-MAX-DEPTH| |CLM|::|LST|)))
            (|COMMON-LISP|::|INCF| |CLM|::|DAT-R|
             (|CLM|::|VARINFO-MAX-DEPTH| |CLM|::|LST|))))
        |CLM|::|VARS|)
       (|COMMON-LISP|::|LET*|
        ((|CLM|::|INTS| |COMMON-LISP|::|NIL|)
         (|CLM|::|BOOLS| |COMMON-LISP|::|NIL|)
         (|CLM|::|FLOATS| |COMMON-LISP|::|NIL|)
         (|CLM|::|FLOAT-ARRAYS| |COMMON-LISP|::|NIL|)
         (|CLM|::|DOUBLE-ARRAYS| |COMMON-LISP|::|NIL|)
         (|CLM|::|INTEGER-ARRAYS| |COMMON-LISP|::|NIL|)
         (|CLM|::|STRS| |COMMON-LISP|::|NIL|)
         (|CLM|::|GENS| |COMMON-LISP|::|NIL|)
         (|CLM|::|GEN-ARRAYS| |COMMON-LISP|::|NIL|)
         (|CLM|::|GOT-GLOBALS| |COMMON-LISP|::|NIL|)
         (|CLM|::|G-INTS| |COMMON-LISP|::|NIL|)
         (|CLM|::|G-BOOLS| |COMMON-LISP|::|NIL|)
         (|CLM|::|G-FLOATS| |COMMON-LISP|::|NIL|)
         (|CLM|::|G-FLOAT-ARRAYS| |COMMON-LISP|::|NIL|)
         (|CLM|::|G-INTEGER-ARRAYS| |COMMON-LISP|::|NIL|)
         (|CLM|::|G-DOUBLE-ARRAYS| |COMMON-LISP|::|NIL|)
         (|CLM|::|G-STRS| |COMMON-LISP|::|NIL|)
         (|CLM|::|G-GENS| |COMMON-LISP|::|NIL|)
         (|CLM|::|G-GEN-ARRAYS| |COMMON-LISP|::|NIL|)
         (|CLM|::|LCOOP|
          (|COMMON-LISP|::|AND| |CLM|::|LOOP-VAR|
           (|CLM|::|LC| |CLM|::|LOOP-VAR|)))
         (|CLM|::|LOOPV|
          (|COMMON-LISP|::|AND| |CLM|::|LOOP-VAR|
           (|COMMON-LISP|::|GETHASH| |CLM|::|LOOP-VAR| |CLM|::|VARS|))))
        (|COMMON-LISP|::|WHEN| |CLM|::|LOOP-VAR|
         (|COMMON-LISP|::|SETF| (|CLM|::|VARINFO-REFD| |CLM|::|LOOPV|)
          |COMMON-LISP|::|T|)
         (|COMMON-LISP|::|SETF| (|CLM|::|VARINFO-TEMP| |CLM|::|LOOPV|)
          |COMMON-LISP|::|T|)
         (|COMMON-LISP|::|SETF| (|CLM|::|VARINFO-TYPE| |CLM|::|LOOPV|)
          :|INTEGER|))
        (|COMMON-LISP|::|IF| |CLM|::|*CLM-REPORT-UNTYPED-VARS*|
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|T| "~%untyped variables: "))
        (|COMMON-LISP|::|MAPHASH|
         #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|KEY| |CLM|::|LST|)
            (|COMMON-LISP|::|WHEN| (|CLM|::|VARINFO-REFD| |CLM|::|LST|)
             (|COMMON-LISP|::|LET|
              ((|CLM|::|DEPTH| (|CLM|::|VARINFO-MAX-DEPTH| |CLM|::|LST|)))
              (|COMMON-LISP|::|IF| |CLM|::|*CLM-REPORT-UNTYPED-VARS*|
               (|COMMON-LISP|::|IF|
                (|COMMON-LISP|::|AND|
                 (|COMMON-LISP|::|NOT| (|CLM|::|VARINFO-TYPE| |CLM|::|LST|))
                 (|COMMON-LISP|::|NOT|
                  (|CLM|::|VARINFO-GEN-TYPE| |CLM|::|LST|)))
                (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|T| "~A "
                 |CLM|::|KEY|)))
              (|COMMON-LISP|::|COND|
               ((|COMMON-LISP|::|EQ| (|CLM|::|VARINFO-TYPE| |CLM|::|LST|)
                 :|REAL|)
                (|COMMON-LISP|::|SETF| (|CLM|::|VARINFO-RLOC| |CLM|::|LST|)
                 |CLM|::|DAT-R|)
                (|COMMON-LISP|::|PUSH|
                 (|COMMON-LISP|::|LIST| |CLM|::|KEY| 0. |CLM|::|DAT-R| :|REAL|)
                 |CLM|::|VARIABLE-LOAD-LIST|)
                (|COMMON-LISP|::|IF| (|CLM|::|VARINFO-GLOBAL| |CLM|::|LST|)
                 (|COMMON-LISP|::|PUSH| (|CLM|::|LC| |CLM|::|KEY|)
                  |CLM|::|G-FLOATS|)
                 (|COMMON-LISP|::|PUSH| (|CLM|::|LC| |CLM|::|KEY|)
                  |CLM|::|FLOATS|))
                (|COMMON-LISP|::|INCF| |CLM|::|DAT-R| |CLM|::|DEPTH|))
               ((|COMMON-LISP|::|MEMBER| (|CLM|::|VARINFO-TYPE| |CLM|::|LST|)
                 '(:|INTEGER| :|BIGNUM|))
                (|COMMON-LISP|::|SETF| (|CLM|::|VARINFO-ILOC| |CLM|::|LST|)
                 |CLM|::|DAT-I|)
                (|COMMON-LISP|::|IF|
                 (|COMMON-LISP|::|NOT| (|CLM|::|VARINFO-TEMP| |CLM|::|LST|))
                 (|COMMON-LISP|::|PUSH|
                  (|COMMON-LISP|::|LIST| |CLM|::|KEY| |CLM|::|DAT-I| 0.
                   :|INTEGER|)
                  |CLM|::|VARIABLE-LOAD-LIST|))
                (|COMMON-LISP|::|IF| (|CLM|::|VARINFO-GLOBAL| |CLM|::|LST|)
                 (|COMMON-LISP|::|PUSH| (|CLM|::|LC| |CLM|::|KEY|)
                  |CLM|::|G-INTS|)
                 (|COMMON-LISP|::|PUSH| (|CLM|::|LC| |CLM|::|KEY|)
                  |CLM|::|INTS|))
                (|COMMON-LISP|::|INCF| |CLM|::|DAT-I|
                 (|COMMON-LISP|::|*| 2. |CLM|::|DEPTH|)))
               ((|COMMON-LISP|::|EQ| (|CLM|::|VARINFO-TYPE| |CLM|::|LST|)
                 :|BOOLEAN|)
                (|COMMON-LISP|::|SETF| (|CLM|::|VARINFO-ILOC| |CLM|::|LST|)
                 |CLM|::|DAT-I|)
                (|COMMON-LISP|::|IF|
                 (|COMMON-LISP|::|NOT| (|CLM|::|VARINFO-TEMP| |CLM|::|LST|))
                 (|COMMON-LISP|::|PUSH|
                  (|COMMON-LISP|::|LIST| |CLM|::|KEY| |CLM|::|DAT-I| 0.
                   :|BOOLEAN|)
                  |CLM|::|VARIABLE-LOAD-LIST|))
                (|COMMON-LISP|::|IF| (|CLM|::|VARINFO-GLOBAL| |CLM|::|LST|)
                 (|COMMON-LISP|::|PUSH| (|CLM|::|LC| |CLM|::|KEY|)
                  |CLM|::|G-BOOLS|)
                 (|COMMON-LISP|::|PUSH| (|CLM|::|LC| |CLM|::|KEY|)
                  |CLM|::|BOOLS|))
                (|COMMON-LISP|::|INCF| |CLM|::|DAT-I|
                 (|COMMON-LISP|::|*| 2. |CLM|::|DEPTH|)))
               ((|COMMON-LISP|::|EQ| (|CLM|::|VARINFO-TYPE| |CLM|::|LST|)
                 :|CLM-REAL|)
                (|COMMON-LISP|::|IF| (|CLM|::|VARINFO-GLOBAL| |CLM|::|LST|)
                 (|COMMON-LISP|::|PUSH| (|CLM|::|LC| |CLM|::|KEY|)
                  |CLM|::|G-FLOATS|)
                 (|COMMON-LISP|::|PUSH| (|CLM|::|LC| |CLM|::|KEY|)
                  |CLM|::|FLOATS|)))
               ((|COMMON-LISP|::|EQ| (|CLM|::|VARINFO-TYPE| |CLM|::|LST|)
                 :|CLM-INTEGER|)
                (|COMMON-LISP|::|IF| (|CLM|::|VARINFO-GLOBAL| |CLM|::|LST|)
                 (|COMMON-LISP|::|PUSH| (|CLM|::|LC| |CLM|::|KEY|)
                  |CLM|::|G-INTS|)
                 (|COMMON-LISP|::|PUSH| (|CLM|::|LC| |CLM|::|KEY|)
                  |CLM|::|INTS|)))
               ((|COMMON-LISP|::|EQ| (|CLM|::|VARINFO-TYPE| |CLM|::|LST|)
                 :|CLM-BOOLEAN|)
                (|COMMON-LISP|::|IF| (|CLM|::|VARINFO-GLOBAL| |CLM|::|LST|)
                 (|COMMON-LISP|::|PUSH| (|CLM|::|LC| |CLM|::|KEY|)
                  |CLM|::|G-BOOLS|)
                 (|COMMON-LISP|::|PUSH| (|CLM|::|LC| |CLM|::|KEY|)
                  |CLM|::|BOOLS|)))
               ((|COMMON-LISP|::|EQ| (|CLM|::|VARINFO-TYPE| |CLM|::|LST|)
                 :|STRING|)
                (|COMMON-LISP|::|IF|
                 (|COMMON-LISP|::|NOT| (|CLM|::|VARINFO-TEMP| |CLM|::|LST|))
                 (|COMMON-LISP|::|PROGN|
                  (|COMMON-LISP|::|PUSH|
                   (|COMMON-LISP|::|LIST| |CLM|::|KEY| |CLM|::|DAT-I| 0.
                    :|STRING|)
                   |CLM|::|VARIABLE-LOAD-LIST|)
                  (|COMMON-LISP|::|SETF| (|CLM|::|VARINFO-ILOC| |CLM|::|LST|)
                   |CLM|::|DAT-I|)))
                (|COMMON-LISP|::|IF| (|CLM|::|VARINFO-GLOBAL| |CLM|::|LST|)
                 (|COMMON-LISP|::|PUSH| (|CLM|::|LC| |CLM|::|KEY|)
                  |CLM|::|G-STRS|)
                 (|COMMON-LISP|::|PUSH| (|CLM|::|LC| |CLM|::|KEY|)
                  |CLM|::|STRS|))
                (|COMMON-LISP|::|INCF| |CLM|::|DAT-I| |CLM|::|DEPTH|))
               ((|COMMON-LISP|::|EQ| (|CLM|::|VARINFO-TYPE| |CLM|::|LST|)
                 :|FLOAT-ARRAY|)
                (|COMMON-LISP|::|IF| (|CLM|::|VARINFO-GLOBAL| |CLM|::|LST|)
                 (|COMMON-LISP|::|PUSH| (|CLM|::|LC| |CLM|::|KEY|)
                  |CLM|::|G-FLOAT-ARRAYS|)
                 (|COMMON-LISP|::|PUSH| (|CLM|::|LC| |CLM|::|KEY|)
                  |CLM|::|FLOAT-ARRAYS|)))
               ((|COMMON-LISP|::|EQ| (|CLM|::|VARINFO-TYPE| |CLM|::|LST|)
                 :|DOUBLE-ARRAY|)
                (|COMMON-LISP|::|IF|
                 (|COMMON-LISP|::|NOT| (|CLM|::|VARINFO-TEMP| |CLM|::|LST|))
                 (|COMMON-LISP|::|PROGN|
                  (|COMMON-LISP|::|PUSH|
                   (|COMMON-LISP|::|LIST| |CLM|::|KEY| |CLM|::|DAT-I| 0.
                    :|DOUBLE-ARRAY|)
                   |CLM|::|VARIABLE-LOAD-LIST|)
                  (|COMMON-LISP|::|SETF| (|CLM|::|VARINFO-ILOC| |CLM|::|LST|)
                   |CLM|::|DAT-I|)
                  (|COMMON-LISP|::|INCF| |CLM|::|DAT-I|
                   (|COMMON-LISP|::|*| 2. |CLM|::|DEPTH|))))
                (|COMMON-LISP|::|IF| (|CLM|::|VARINFO-GLOBAL| |CLM|::|LST|)
                 (|COMMON-LISP|::|PUSH| (|CLM|::|LC| |CLM|::|KEY|)
                  |CLM|::|G-DOUBLE-ARRAYS|)
                 (|COMMON-LISP|::|PUSH| (|CLM|::|LC| |CLM|::|KEY|)
                  |CLM|::|DOUBLE-ARRAYS|)))
               ((|COMMON-LISP|::|EQ| (|CLM|::|VARINFO-TYPE| |CLM|::|LST|)
                 :|INTEGER-ARRAY|)
                (|COMMON-LISP|::|IF|
                 (|COMMON-LISP|::|NOT| (|CLM|::|VARINFO-TEMP| |CLM|::|LST|))
                 (|COMMON-LISP|::|PROGN|
                  (|COMMON-LISP|::|PUSH|
                   (|COMMON-LISP|::|LIST| |CLM|::|KEY| |CLM|::|DAT-I| 0.
                    :|INTEGER-ARRAY|)
                   |CLM|::|VARIABLE-LOAD-LIST|)
                  (|COMMON-LISP|::|SETF| (|CLM|::|VARINFO-ILOC| |CLM|::|LST|)
                   |CLM|::|DAT-I|)
                  (|COMMON-LISP|::|INCF| |CLM|::|DAT-I|
                   (|COMMON-LISP|::|*| 2. |CLM|::|DEPTH|))))
                (|COMMON-LISP|::|IF| (|CLM|::|VARINFO-GLOBAL| |CLM|::|LST|)
                 (|COMMON-LISP|::|PUSH| (|CLM|::|LC| |CLM|::|KEY|)
                  |CLM|::|G-INTEGER-ARRAYS|)
                 (|COMMON-LISP|::|PUSH| (|CLM|::|LC| |CLM|::|KEY|)
                  |CLM|::|INTEGER-ARRAYS|)))
               ((|COMMON-LISP|::|EQ| (|CLM|::|VARINFO-TYPE| |CLM|::|LST|)
                 :|MUS-ANY|)
                (|COMMON-LISP|::|IF| (|CLM|::|VARINFO-GLOBAL| |CLM|::|LST|)
                 (|COMMON-LISP|::|PUSH| (|CLM|::|LC| |CLM|::|KEY|)
                  |CLM|::|G-GENS|)
                 (|COMMON-LISP|::|PUSH| (|CLM|::|LC| |CLM|::|KEY|)
                  |CLM|::|GENS|)))
               (|COMMON-LISP|::|T|
                (|COMMON-LISP|::|IF| (|CLM|::|VARINFO-GEN-TYPE| |CLM|::|LST|)
                 (|COMMON-LISP|::|IF|
                  (|COMMON-LISP|::|EQ| (|CLM|::|VARINFO-GEN-TYPE| |CLM|::|LST|)
                   :|MUS-ANY-ARRAY|)
                  (|COMMON-LISP|::|IF| (|CLM|::|VARINFO-GLOBAL| |CLM|::|LST|)
                   (|COMMON-LISP|::|PUSH| (|CLM|::|LC| |CLM|::|KEY|)
                    |CLM|::|G-GEN-ARRAYS|)
                   (|COMMON-LISP|::|PUSH| (|CLM|::|LC| |CLM|::|KEY|)
                    |CLM|::|GEN-ARRAYS|))
                  (|COMMON-LISP|::|PROGN|
                   (|COMMON-LISP|::|IF|
                    (|COMMON-LISP|::|EQ|
                     (|CLM|::|VARINFO-GEN-TYPE| |CLM|::|LST|) :|MUS-ANY|)
                    (|COMMON-LISP|::|IF|
                     (|COMMON-LISP|::|OR|
                      (|COMMON-LISP|::|EQ| |CLM|::|KEY| '|CLM|::|*OUTPUT*|)
                      (|COMMON-LISP|::|EQ| |CLM|::|KEY| '|CLM|::|*REVERB*|))
                     (|COMMON-LISP|::|SETF|
                      (|CLM|::|VARINFO-GEN-TYPE| |CLM|::|LST|)
                      '|CLM|::|FRAMPLE->FILE|)
                     (|COMMON-LISP|::|IF|
                      (|COMMON-LISP|::|NOT|
                       (|CLM|::|VARINFO-TEMP| |CLM|::|LST|))
                      (|COMMON-LISP|::|WARN| "unknown global gen: ~A"
                       |CLM|::|KEY|))))
                   (|COMMON-LISP|::|IF| (|CLM|::|VARINFO-GLOBAL| |CLM|::|LST|)
                    (|COMMON-LISP|::|PUSH| (|CLM|::|LC| |CLM|::|KEY|)
                     |CLM|::|G-GENS|)
                    (|COMMON-LISP|::|PUSH| (|CLM|::|LC| |CLM|::|KEY|)
                     |CLM|::|GENS|))))))))))
         |CLM|::|VARS|)
        (|COMMON-LISP|::|IF| |CLM|::|*CLM-REPORT-UNTYPED-VARS*|
         (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|T| "~%~%"))
        (|COMMON-LISP|::|WHEN|
         (|COMMON-LISP|::|OR| |CLM|::|G-INTS| |CLM|::|G-FLOATS|
          |CLM|::|G-FLOAT-ARRAYS| |CLM|::|G-STRS| |CLM|::|G-GENS|
          |CLM|::|G-GEN-ARRAYS| |CLM|::|G-BOOLS| |CLM|::|G-DOUBLE-ARRAYS|
          |CLM|::|G-INTEGER-ARRAYS|)
         (|COMMON-LISP|::|SETF| |CLM|::|GOT-GLOBALS| |COMMON-LISP|::|T|)
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "/* variables used by anonymous \"as-needed\" functions */~%")
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "static int *clm_int = NULL;~%")
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "static double *clm_double = NULL;~%"))
        (|COMMON-LISP|::|IF| |CLM|::|G-INTS|
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "static mus_long_t~{ ~A~^,~};~%" |CLM|::|G-INTS|))
        (|COMMON-LISP|::|IF| |CLM|::|G-BOOLS|
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "static bool~{ ~A~^,~};~%"
          |CLM|::|G-BOOLS|))
        (|COMMON-LISP|::|IF| |CLM|::|G-FLOATS|
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "static double~{ ~A~^,~};~%" |CLM|::|G-FLOATS|))
        (|COMMON-LISP|::|IF| |CLM|::|G-FLOAT-ARRAYS|
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "static double~{ *~A = NULL~^,~};~%" |CLM|::|G-FLOAT-ARRAYS|))
        (|COMMON-LISP|::|IF| |CLM|::|G-DOUBLE-ARRAYS|
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "static double~{ *~A = NULL~^,~};~%" |CLM|::|G-DOUBLE-ARRAYS|))
        (|COMMON-LISP|::|IF| |CLM|::|G-INTEGER-ARRAYS|
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "static int~{ *~A = NULL~^,~};~%" |CLM|::|G-INTEGER-ARRAYS|))
        (|COMMON-LISP|::|IF| |CLM|::|G-STRS|
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "static char~{ *~A = NULL~^,~};~%" |CLM|::|G-STRS|))
        (|COMMON-LISP|::|IF| |CLM|::|G-GENS|
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "static mus_any~{ *~A = NULL~^,~};~%" |CLM|::|G-GENS|))
        (|COMMON-LISP|::|IF| |CLM|::|G-GEN-ARRAYS|
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "static mus_any~{ **~A_array = NULL~^,~};~%" |CLM|::|G-GEN-ARRAYS|))
        (|COMMON-LISP|::|IF| (|COMMON-LISP|::|>| |CLM|::|FUNCTION-CTR| 0.)
         (|COMMON-LISP|::|LOOP| |CLM|::|FOR| |CLM|::|FUNC| |CLM|::|IN|
          |CLM|::|*AS-NEEDED-FUNCTION-TYPES*| |COMMON-LISP|::|DO|
          (|COMMON-LISP|::|LET|
           ((|COMMON-LISP|::|TYPE| (|COMMON-LISP|::|CAR| |CLM|::|FUNC|))
            (|CLM|::|CTR| (|COMMON-LISP|::|CADR| |CLM|::|FUNC|)))
           (|COMMON-LISP|::|IF| |CLM|::|*CLM-DEBUG*|
            (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|T| "func ~A ~A~%"
             |COMMON-LISP|::|TYPE| |CLM|::|CTR|))
           (|COMMON-LISP|::|IF|
            (|COMMON-LISP|::|EQ| |COMMON-LISP|::|TYPE| :|INPUT|)
            (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
             "static mus_float_t as_needed_~D(void *gen, int direction);~%"
             |CLM|::|CTR|)
            (|COMMON-LISP|::|IF|
             (|COMMON-LISP|::|EQ| |COMMON-LISP|::|TYPE| :|EDIT|)
             (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
              "static int as_needed_~D(void *closure);~%" |CLM|::|CTR|)
             (|COMMON-LISP|::|IF|
              (|COMMON-LISP|::|EQ| |COMMON-LISP|::|TYPE| :|ANALYZE|)
              (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
               "static bool as_needed_~D(void *closure, mus_float_t (*input)(void *arg1, int direction));~%"
               |CLM|::|CTR|)
              (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
               "static mus_float_t as_needed_~D(void *closure);~%"
               |CLM|::|CTR|)))))))
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|OR| |CLM|::|G-INTS| |CLM|::|G-FLOATS| |CLM|::|G-GENS|
          |CLM|::|G-GEN-ARRAYS| |CLM|::|G-STRS| |CLM|::|G-FLOAT-ARRAYS|
          |CLM|::|G-DOUBLE-ARRAYS| |CLM|::|G-INTEGER-ARRAYS|
          (|COMMON-LISP|::|>| |CLM|::|FUNCTION-CTR| 0.))
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "~%"))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "~Aint ~A (double *~Aclm_double, int datar_len, int *~Aclm_int, int datai_len)~%{~%"
         "" |CLM|::|*C-PROC*|
         (|COMMON-LISP|::|IF| |CLM|::|GOT-GLOBALS| "incoming_" "")
         (|COMMON-LISP|::|IF| |CLM|::|GOT-GLOBALS| "incoming_" ""))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  /* The _clm_* variables are temporary values generated by the run macro */~%")
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  void (*old_SIGINT)(int);~%")
        (|COMMON-LISP|::|IF| |CLM|::|INTS|
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  mus_long_t~{ ~A~^,~};~%"
          |CLM|::|INTS|))
        (|COMMON-LISP|::|IF| |CLM|::|BOOLS|
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  bool~{ ~A~^,~};~%"
          |CLM|::|BOOLS|))
        (|COMMON-LISP|::|IF| |CLM|::|STRS|
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  char~{ *~A = NULL~^,~};~%" |CLM|::|STRS|))
        (|COMMON-LISP|::|IF| |CLM|::|FLOATS|
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  double~{ ~A~^,~};~%"
          |CLM|::|FLOATS|))
        (|COMMON-LISP|::|IF| |CLM|::|FLOAT-ARRAYS|
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  double~{ *~A = NULL~^,~};~%" |CLM|::|FLOAT-ARRAYS|))
        (|COMMON-LISP|::|IF| |CLM|::|DOUBLE-ARRAYS|
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  double~{ *~A = NULL~^,~};~%" |CLM|::|DOUBLE-ARRAYS|))
        (|COMMON-LISP|::|IF| |CLM|::|INTEGER-ARRAYS|
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  int~{ *~A = NULL~^,~};~%" |CLM|::|INTEGER-ARRAYS|))
        (|COMMON-LISP|::|IF| |CLM|::|GENS|
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_any~{ *~A = NULL~^,~};~%" |CLM|::|GENS|))
        (|COMMON-LISP|::|IF| |CLM|::|GEN-ARRAYS|
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  mus_any~{ **~A_array = NULL~^,~};~%" |CLM|::|GEN-ARRAYS|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  void *all_gens = NULL;~%")
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  mus_long_t clm_beg, clm_end;~%")
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "  ")
        (|COMMON-LISP|::|MAPHASH|
         #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|KEY| |CLM|::|VAL|)
            (|COMMON-LISP|::|LET*|
             ((|CLM|::|C-NAME| (|CLM|::|LC| |CLM|::|KEY|)))
             (|COMMON-LISP|::|IF|
              (|COMMON-LISP|::|EQ| (|CLM|::|VARINFO-TYPE| |CLM|::|VAL|)
               :|INTEGER|)
              (|COMMON-LISP|::|IF| (|CLM|::|VARINFO-ILOC| |CLM|::|VAL|)
               (|COMMON-LISP|::|PROGN|
                (|COMMON-LISP|::|IF| (|CLM|::|VARINFO-SHADOWED| |CLM|::|VAL|)
                 (|COMMON-LISP|::|LOOP| |CLM|::|FOR| |CLM|::|I| |CLM|::|FROM|
                  1. |CLM|::|BELOW| (|CLM|::|VARINFO-MAX-DEPTH| |CLM|::|VAL|)
                  |COMMON-LISP|::|DO|
                  (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
                   "mus_long_t ~A_~A; " |CLM|::|C-NAME| |CLM|::|I|)))))
              (|COMMON-LISP|::|IF|
               (|COMMON-LISP|::|EQ| (|CLM|::|VARINFO-TYPE| |CLM|::|VAL|)
                :|REAL|)
               (|COMMON-LISP|::|IF| (|CLM|::|VARINFO-RLOC| |CLM|::|VAL|)
                (|COMMON-LISP|::|PROGN|
                 (|COMMON-LISP|::|IF| (|CLM|::|VARINFO-SHADOWED| |CLM|::|VAL|)
                  (|COMMON-LISP|::|LOOP| |CLM|::|FOR| |CLM|::|I| |CLM|::|FROM|
                   1. |CLM|::|BELOW| (|CLM|::|VARINFO-MAX-DEPTH| |CLM|::|VAL|)
                   |COMMON-LISP|::|DO|
                   (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "double ~A_~A; "
                    |CLM|::|C-NAME| |CLM|::|I|)))))))))
         |CLM|::|VARS|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "~%")
        (|COMMON-LISP|::|IF| |CLM|::|GOT-GLOBALS|
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  clm_int = incoming_clm_int;~%  clm_double = incoming_clm_double;~%"))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  all_gens = clm_make_genbag();~%")
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  clm_beg = clm_to_mus_long_t(clm_int, ~D);~%" |CLM|::|+CLM-BEG+|)
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  clm_end = clm_to_mus_long_t(clm_int, ~D);~%" |CLM|::|+CLM-END+|)
        (|COMMON-LISP|::|MAPHASH|
         #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|KEY| |CLM|::|VAL|)
            (|COMMON-LISP|::|LET*|
             ((|CLM|::|C-NAME| (|CLM|::|LC| |CLM|::|KEY|)))
             (|COMMON-LISP|::|IF|
              (|COMMON-LISP|::|AND|
               (|COMMON-LISP|::|NULL| (|CLM|::|VARINFO-TYPE| |CLM|::|VAL|))
               (|CLM|::|VARINFO-REFD| |CLM|::|VAL|))
              (|COMMON-LISP|::|IF|
               (|COMMON-LISP|::|AND| (|CLM|::|VARINFO-GEN-TYPE| |CLM|::|VAL|)
                (|COMMON-LISP|::|NOT|
                 (|COMMON-LISP|::|EQ| (|CLM|::|VARINFO-GEN-TYPE| |CLM|::|VAL|)
                  :|MUS-ANY|))
                (|COMMON-LISP|::|NOT|
                 (|COMMON-LISP|::|EQ| (|CLM|::|VARINFO-GEN-TYPE| |CLM|::|VAL|)
                  :|MUS-ANY-ARRAY|))
                (|CLM|::|VARINFO-GLOBAL| |CLM|::|VAL|)
                (|COMMON-LISP|::|NOT| (|CLM|::|VARINFO-CTR| |CLM|::|VAL|)))
               (|COMMON-LISP|::|PROGN|
                (|CLM|::|GEN-MAKE-1| (|CLM|::|VARINFO-GEN-TYPE| |CLM|::|VAL|)
                 |CLM|::|*C-FILE*| |CLM|::|C-NAME|
                 (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "~D"
                  (|CLM|::|VARINFO-ILOC| |CLM|::|VAL|))
                 "  " (|CLM|::|VARINFO-CTR| |CLM|::|VAL|))
                (|COMMON-LISP|::|SETF| (|CLM|::|VARINFO-LOADED| |CLM|::|VAL|)
                 |COMMON-LISP|::|T|))))))
         |CLM|::|VARS|)
        (|COMMON-LISP|::|MAPHASH|
         #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|KEY| |CLM|::|VAL|)
            (|COMMON-LISP|::|LET*|
             ((|CLM|::|C-NAME| (|CLM|::|LC| |CLM|::|KEY|)))
             (|COMMON-LISP|::|COND|
              ((|COMMON-LISP|::|EQ| (|CLM|::|VARINFO-TYPE| |CLM|::|VAL|)
                :|INTEGER|)
               (|COMMON-LISP|::|IF| (|CLM|::|VARINFO-ILOC| |CLM|::|VAL|)
                (|COMMON-LISP|::|PROGN|
                 (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
                  "  ~A = clm_int[~D];~%" |CLM|::|C-NAME|
                  (|CLM|::|VARINFO-ILOC| |CLM|::|VAL|))
                 (|COMMON-LISP|::|IF| (|CLM|::|VARINFO-SHADOWED| |CLM|::|VAL|)
                  (|COMMON-LISP|::|LOOP| |CLM|::|FOR| |CLM|::|I| |CLM|::|FROM|
                   1. |CLM|::|BELOW| (|CLM|::|VARINFO-MAX-DEPTH| |CLM|::|VAL|)
                   |COMMON-LISP|::|DO|
                   (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
                    "  ~A_~A = clm_int[~D];~%" |CLM|::|C-NAME| |CLM|::|I|
                    (|COMMON-LISP|::|+| |CLM|::|I|
                     (|CLM|::|VARINFO-ILOC| |CLM|::|VAL|))))))))
              ((|COMMON-LISP|::|EQ| (|CLM|::|VARINFO-TYPE| |CLM|::|VAL|)
                :|BOOLEAN|)
               (|COMMON-LISP|::|IF| (|CLM|::|VARINFO-ILOC| |CLM|::|VAL|)
                (|COMMON-LISP|::|PROGN|
                 (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
                  "  ~A = (bool)clm_int[~D];~%" |CLM|::|C-NAME|
                  (|CLM|::|VARINFO-ILOC| |CLM|::|VAL|))
                 (|COMMON-LISP|::|IF| (|CLM|::|VARINFO-SHADOWED| |CLM|::|VAL|)
                  (|COMMON-LISP|::|LOOP| |CLM|::|FOR| |CLM|::|I| |CLM|::|FROM|
                   1. |CLM|::|BELOW| (|CLM|::|VARINFO-MAX-DEPTH| |CLM|::|VAL|)
                   |COMMON-LISP|::|DO|
                   (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
                    "  ~A_~A = (bool)clm_int[~D];~%" |CLM|::|C-NAME| |CLM|::|I|
                    (|COMMON-LISP|::|+| |CLM|::|I|
                     (|CLM|::|VARINFO-ILOC| |CLM|::|VAL|))))))))
              ((|COMMON-LISP|::|EQ| (|CLM|::|VARINFO-TYPE| |CLM|::|VAL|)
                :|REAL|)
               (|COMMON-LISP|::|IF| (|CLM|::|VARINFO-RLOC| |CLM|::|VAL|)
                (|COMMON-LISP|::|PROGN|
                 (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
                  "  ~A = clm_double[~D];~%" |CLM|::|C-NAME|
                  (|CLM|::|VARINFO-RLOC| |CLM|::|VAL|))
                 (|COMMON-LISP|::|IF| (|CLM|::|VARINFO-SHADOWED| |CLM|::|VAL|)
                  (|COMMON-LISP|::|LOOP| |CLM|::|FOR| |CLM|::|I| |CLM|::|FROM|
                   1. |CLM|::|BELOW| (|CLM|::|VARINFO-MAX-DEPTH| |CLM|::|VAL|)
                   |COMMON-LISP|::|DO|
                   (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
                    "  ~A_~A = clm_double[~D];~%" |CLM|::|C-NAME| |CLM|::|I|
                    (|COMMON-LISP|::|+| |CLM|::|I|
                     (|CLM|::|VARINFO-RLOC| |CLM|::|VAL|))))))))
              ((|COMMON-LISP|::|EQ| (|CLM|::|VARINFO-TYPE| |CLM|::|VAL|)
                :|BIGNUM|)
               (|COMMON-LISP|::|IF| (|CLM|::|VARINFO-ILOC| |CLM|::|VAL|)
                (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
                 "  ~A = clm_to_mus_long_t(clm_int, ~D);~%" |CLM|::|C-NAME|
                 (|CLM|::|VARINFO-ILOC| |CLM|::|VAL|))))
              ((|COMMON-LISP|::|EQ| (|CLM|::|VARINFO-TYPE| |CLM|::|VAL|)
                :|STRING|)
               (|COMMON-LISP|::|IF| (|CLM|::|VARINFO-ILOC| |CLM|::|VAL|)
                (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
                 "  if (CLM_VAR_TYPE(~A) != CLM_NO_TYPE) ~A = (char *)(clm_int + clm_int[~A + 1] + 2);~%"
                 (|CLM|::|VARINFO-ILOC| |CLM|::|VAL|) |CLM|::|C-NAME|
                 (|CLM|::|VARINFO-ILOC| |CLM|::|VAL|))))
              ((|COMMON-LISP|::|EQ| (|CLM|::|VARINFO-TYPE| |CLM|::|VAL|)
                :|DOUBLE-ARRAY|)
               (|COMMON-LISP|::|IF| (|CLM|::|VARINFO-ILOC| |CLM|::|VAL|)
                (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
                 "  if (CLM_VAR_TYPE(~A) != CLM_NO_TYPE) ~A = (double *)(clm_double + CLM_ARR_RBLOCK(CLM_VAR_ADDR(~A)));~%"
                 (|CLM|::|VARINFO-ILOC| |CLM|::|VAL|) |CLM|::|C-NAME|
                 (|CLM|::|VARINFO-ILOC| |CLM|::|VAL|))))
              ((|COMMON-LISP|::|EQ| (|CLM|::|VARINFO-TYPE| |CLM|::|VAL|)
                :|INTEGER-ARRAY|)
               (|COMMON-LISP|::|IF| (|CLM|::|VARINFO-ILOC| |CLM|::|VAL|)
                (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
                 "  if (CLM_VAR_TYPE(~A) != CLM_NO_TYPE) ~A = (int *)(clm_int + CLM_ARR_IBLOCK(CLM_VAR_ADDR(~A)));~%"
                 (|CLM|::|VARINFO-ILOC| |CLM|::|VAL|) |CLM|::|C-NAME|
                 (|CLM|::|VARINFO-ILOC| |CLM|::|VAL|))))
              (|COMMON-LISP|::|T|
               (|COMMON-LISP|::|IF|
                (|COMMON-LISP|::|AND|
                 (|COMMON-LISP|::|NULL| (|CLM|::|VARINFO-TYPE| |CLM|::|VAL|))
                 (|CLM|::|VARINFO-REFD| |CLM|::|VAL|))
                (|COMMON-LISP|::|IF| (|CLM|::|VARINFO-GEN-TYPE| |CLM|::|VAL|)
                 (|COMMON-LISP|::|PROGN|
                  (|COMMON-LISP|::|IF| |CLM|::|*CLM-DEBUG*|
                   (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|T| "make ~A?~%"
                    |CLM|::|VAL|))
                  (|COMMON-LISP|::|IF|
                   (|COMMON-LISP|::|NOT|
                    (|COMMON-LISP|::|EQ|
                     (|CLM|::|VARINFO-GEN-TYPE| |CLM|::|VAL|) :|MUS-ANY|))
                   (|COMMON-LISP|::|IF|
                    (|COMMON-LISP|::|EQ|
                     (|CLM|::|VARINFO-GEN-TYPE| |CLM|::|VAL|) :|MUS-ANY-ARRAY|)
                    (|COMMON-LISP|::|PROGN|
                     (|COMMON-LISP|::|IF| |CLM|::|*CLM-DEBUG*|
                      (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|T|
                       "making gen array~%"))
                     (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
                      "  #define ~A ~D~%  #define ~A_r ~D~%" |CLM|::|C-NAME|
                      (|CLM|::|VARINFO-ILOC| |CLM|::|VAL|) |CLM|::|C-NAME|
                      (|CLM|::|VARINFO-RLOC| |CLM|::|VAL|))
                     (|CLM|::|GEN-ARRAY-MAKE| |CLM|::|KEY| |CLM|::|VAL|))
                    (|COMMON-LISP|::|IF|
                     (|COMMON-LISP|::|NOT|
                      (|CLM|::|VARINFO-LOADED| |CLM|::|VAL|))
                     (|CLM|::|GEN-MAKE-1|
                      (|CLM|::|VARINFO-GEN-TYPE| |CLM|::|VAL|)
                      |CLM|::|*C-FILE*| |CLM|::|C-NAME|
                      (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "~D"
                       (|CLM|::|VARINFO-ILOC| |CLM|::|VAL|))
                      "  " (|CLM|::|VARINFO-CTR| |CLM|::|VAL|))))))
                 (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
                  "  #define ~A ~D~%  #define ~A_r ~D~%" |CLM|::|C-NAME|
                  (|CLM|::|VARINFO-ILOC| |CLM|::|VAL|) |CLM|::|C-NAME|
                  (|CLM|::|VARINFO-RLOC| |CLM|::|VAL|))))))))
         |CLM|::|VARS|)
        (|COMMON-LISP|::|IF| |CLM|::|END|
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  if (clm_beg > clm_end) return(1);~%"))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  got_sigint = 0; old_SIGINT = clm_signal(SIGINT, sig_err); ~80,1T/* trap SIGINT */~%")
        (|COMMON-LISP|::|IF| |CLM|::|LOOP-VAR|
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  ~A = clm_beg; ~80,1T/* pass counter */~%" |CLM|::|LCOOP|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "~%SAMPLE_LOOP_BEGIN:~%")
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  if (got_sigint != 0) {clm_int[~D] = (int)got_sigint; goto RUN_ALL_DONE;}~%"
         |CLM|::|+CLM-INTERRUPTED+|)
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|AND| |CLM|::|END| |CLM|::|LOOP-VAR|)
         (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
          "  if (~A > clm_end) {~A = clm_end; goto RUN_ALL_DONE;}~%"
          |CLM|::|LCOOP| |CLM|::|LCOOP|)))
       |COMMON-LISP|::|NIL|)))))
  '(|CLM|::|END|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|GET-VAR-SIZES|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|I| |CLM|::|R| |CLM|::|VALLIST|)))
(|SYSTEM|::|C-DEFUN| '|CLM|::|PV|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|C-DEFUN| '|CLM|::|LOAD-VARS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CLM|::|I| |CLM|::|R| |CLM|::|VARLIST| |CLM|::|VALLIST| |CLM|::|DATAI|
    |CLM|::|DATAR|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<END-1>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<END-1>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<END-1>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 1. 1.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*| |COMMON-LISP|::|NIL|
      (|COMMON-LISP|::|BLOCK| |CLM|::|<END-1>|
       (|COMMON-LISP|::|IF| |CLM|::|LOOP-VAR|
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
         "  ~A++;~80,1T/* increment pass counter and loop */~%goto SAMPLE_LOOP_BEGIN;~%~%"
         (|CLM|::|LC| |CLM|::|LOOP-VAR|))
        (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "goto RUN_ALL_DONE;~%~%"))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "RUN_ALL_DONE:~%")
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  clm_signal(SIGINT,old_SIGINT);~%")
       (|COMMON-LISP|::|IF| |CLM|::|*WITH-REFLECTION*|
        (|COMMON-LISP|::|MAPHASH|
         #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|KEY| |CLM|::|VAL|)
            (|COMMON-LISP|::|LET*|
             ((|CLM|::|C-NAME| (|CLM|::|LC| |CLM|::|KEY|)))
             (|COMMON-LISP|::|IF|
              (|COMMON-LISP|::|NOT| (|CLM|::|VARINFO-SHADOWED| |CLM|::|VAL|))
              (|COMMON-LISP|::|IF|
               (|COMMON-LISP|::|AND|
                (|COMMON-LISP|::|OR|
                 (|COMMON-LISP|::|EQ| (|CLM|::|VARINFO-TYPE| |CLM|::|VAL|)
                  :|INTEGER|)
                 (|COMMON-LISP|::|EQ| (|CLM|::|VARINFO-TYPE| |CLM|::|VAL|)
                  :|BOOLEAN|))
                (|CLM|::|VARINFO-ILOC| |CLM|::|VAL|))
               (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
                "  clm_int[~D] = ~A;~%" (|CLM|::|VARINFO-ILOC| |CLM|::|VAL|)
                |CLM|::|C-NAME|)
               (|COMMON-LISP|::|IF|
                (|COMMON-LISP|::|AND|
                 (|COMMON-LISP|::|EQ| (|CLM|::|VARINFO-TYPE| |CLM|::|VAL|)
                  :|REAL|)
                 (|CLM|::|VARINFO-RLOC| |CLM|::|VAL|))
                (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
                 "  clm_double[~D] = ~A;~%"
                 (|CLM|::|VARINFO-RLOC| |CLM|::|VAL|) |CLM|::|C-NAME|)
                (|COMMON-LISP|::|IF|
                 (|COMMON-LISP|::|AND| (|CLM|::|VARINFO-GEN-TYPE| |CLM|::|VAL|)
                  (|COMMON-LISP|::|NOT|
                   (|COMMON-LISP|::|EQ|
                    (|CLM|::|VARINFO-GEN-TYPE| |CLM|::|VAL|) :|MUS-ANY|))
                  (|COMMON-LISP|::|NOT|
                   (|COMMON-LISP|::|EQ|
                    (|CLM|::|VARINFO-GEN-TYPE| |CLM|::|VAL|) :|MUS-ANY-ARRAY|))
                  (|COMMON-LISP|::|NOT|
                   (|COMMON-LISP|::|EQ| (|CLM|::|VARINFO-TYPE| |CLM|::|VAL|)
                    :|BIGNUM|))
                  (|COMMON-LISP|::|>=| (|CLM|::|VARINFO-DEPTH| |CLM|::|VAL|)
                   0.))
                 (|CLM|::|GEN-REFLECT-1|
                  (|CLM|::|VARINFO-GEN-TYPE| |CLM|::|VAL|) |CLM|::|KEY|
                  |CLM|::|VAL|)))))))
         |CLM|::|VARS|))
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
        "  if (all_gens) clm_free_genbag(all_gens);~%")
       (|COMMON-LISP|::|MAPHASH|
        #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|KEY| |CLM|::|LST|)
           (|COMMON-LISP|::|WHEN| (|CLM|::|VARINFO-REFD| |CLM|::|LST|)
            (|COMMON-LISP|::|IF|
             (|COMMON-LISP|::|EQ| (|CLM|::|VARINFO-GEN-TYPE| |CLM|::|LST|)
              :|MUS-ANY-ARRAY|)
             (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*|
              "  if (~A_array) free(~A_array);~%" (|CLM|::|LC| |CLM|::|KEY|)
              (|CLM|::|LC| |CLM|::|KEY|)))))
        |CLM|::|VARS|)
       (|COMMON-LISP|::|FORMAT| |CLM|::|*C-FILE*| "~%  return(1);~%}~%~%")
       (|COMMON-LISP|::|SETF| |CLM|::|*SAFETY*| 0.) |COMMON-LISP|::|NIL|)))))
  '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CLM|::|<END-2>|)
(|SYSTEM|::|%PUTD| '|CLM|::|<END-2>|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CLM|::|<END-2>|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CLM|::|BEG| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CLM|::|END| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLM|::|END-SPECIFIED| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CLM|::|<END-2>|
       `(|COMMON-LISP|::|LET|
         ((|CLM|::|VARDATA|
           (|COMMON-LISP|::|LIST|
            ,@(|COMMON-LISP|::|MAP| '|COMMON-LISP|::|LIST|
               #'(|COMMON-LISP|::|LAMBDA| (|CLM|::|VAR|)
                  (|COMMON-LISP|::|LET|
                   ((|CLM|::|LST|
                     (|COMMON-LISP|::|GETHASH|
                      (|COMMON-LISP|::|FIRST| |CLM|::|VAR|) |CLM|::|VARS|)))
                   (|COMMON-LISP|::|IF|
                    (|COMMON-LISP|::|MINUSP|
                     (|CLM|::|VARINFO-DEPTH| |CLM|::|LST|))
                    :|LOCAL| (|COMMON-LISP|::|FIRST| |CLM|::|VAR|))))
               |CLM|::|VARIABLE-LOAD-LIST|))))
         (|COMMON-LISP|::|MULTIPLE-VALUE-BIND|
          (|CLM|::|*CLM-DATAI-LEN*| |CLM|::|*CLM-DATAR-LEN*|)
          (|CLM|::|GET-VAR-SIZES| ,|CLM|::|DAT-I| ,|CLM|::|DAT-R|
           |CLM|::|VARDATA|)
          (|COMMON-LISP|::|LET|
           ((|CLM|::|*CLM-BEG*|
             (|COMMON-LISP|::|FLOOR|
              (|COMMON-LISP|::|+| ,|CLM|::|BEG| |CLM|::|*OFFSET*|)))
            (|CLM|::|*CLM-END*|
             (|COMMON-LISP|::|AND| (|COMMON-LISP|::|NUMBERP| ,|CLM|::|END|)
              (|COMMON-LISP|::|FLOOR|
               (|COMMON-LISP|::|+| ,|CLM|::|END| |CLM|::|*OFFSET*|))))
            (|CLM|::|*CLM-DATAI*|
             (|CLM|::|MAKE-INTEGER-ARRAY| |CLM|::|*CLM-DATAI-LEN*|
              :|INITIAL-ELEMENT| 0.))
            (|CLM|::|*CLM-DATAR*|
             (|CLM|::|MAKE-DOUBLE-ARRAY| |CLM|::|*CLM-DATAR-LEN*|)))
           (|CLM|::|LOAD-VARS| ,|CLM|::|DAT-I| ,|CLM|::|DAT-R|
            ',|CLM|::|VARIABLE-LOAD-LIST| |CLM|::|VARDATA| |CLM|::|*CLM-DATAI*|
            |CLM|::|*CLM-DATAR*|)
           (|CLM|::|TO-BIGNUM| |CLM|::|*CLM-BEG*| |CLM|::|*CLM-DATAI*|
            |CLM|::|+CLM-BEG+|)
           (|CLM|::|TO-BIGNUM| (|COMMON-LISP|::|OR| |CLM|::|*CLM-END*| 0.)
            |CLM|::|*CLM-DATAI*| |CLM|::|+CLM-END+|)
           (|COMMON-LISP|::|IF|
            (|COMMON-LISP|::|AND| ,|CLM|::|END-SPECIFIED|
             (|COMMON-LISP|::|<| |CLM|::|*CLM-END*| |CLM|::|*CLM-BEG*|))
            (|COMMON-LISP|::|WARN| "end time < begin time: ~A from ~A to ~A?"
             ',|CLM|::|*LISP-PROC*| |CLM|::|*CLM-BEG*| |CLM|::|*CLM-END*|))
           (|COMMON-LISP|::|IF| |CLM|::|*CLM-DEBUG*|
            (|COMMON-LISP|::|PRINT|
             (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL|
              "(~A ~A~%  ~A~%  ~A ~A ~A)" ',|CLM|::|*C-PROC*|
              |CLM|::|*CLM-BEG*| |CLM|::|*CLM-END*| |CLM|::|*CLM-DATAR*|
              |CLM|::|*CLM-DATAI*| |CLM|::|*CLM-DATAR-LEN*|)))
           (|COMMON-LISP|::|SETF|
            (|COMMON-LISP|::|GET| |CLM|::|*CLM-INS*| :|DATAI|)
            |CLM|::|*CLM-DATAI*|)
           (|COMMON-LISP|::|SETF|
            (|COMMON-LISP|::|GET| |CLM|::|*CLM-INS*| :|DATAR|)
            |CLM|::|*CLM-DATAR*|)
           (|COMMON-LISP|::|SETF| |CLM|::|CLM-LAST-BEGIN-TIME|
            (|COMMON-LISP|::|MAX| |CLM|::|CLM-LAST-BEGIN-TIME|
             |CLM|::|*CLM-BEG*|))
           (|COMMON-LISP|::|PROGN|
            (|COMMON-LISP|::|TAGBODY|
             (|COMMON-LISP|::|RESTART-CASE|
              (,|CLM|::|*C-PROC*| |CLM|::|*CLM-DATAR*| |CLM|::|*CLM-DATAR-LEN*|
               |CLM|::|*CLM-DATAI*| |CLM|::|*CLM-DATAI-LEN*|)
              (|COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| :|REPORT|
               "try to exit current note cleanly and go on."
               (|COMMON-LISP|::|GO| |CLM|::|NOTE-ALL-DONE|)))
             |CLM|::|NOTE-ALL-DONE|))
           (|COMMON-LISP|::|IF|
            (|COMMON-LISP|::|NOT|
             (|COMMON-LISP|::|ZEROP|
              (|COMMON-LISP|::|AREF| |CLM|::|*CLM-DATAI*|
               |CLM|::|+CLM-INTERRUPTED+|)))
            (|COMMON-LISP|::|IF|
             (|COMMON-LISP|::|NOT|
              (|COMMON-LISP|::|=|
               (|COMMON-LISP|::|AREF| |CLM|::|*CLM-DATAI*|
                |CLM|::|+CLM-INTERRUPTED+|)
               -1.))
             (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|T| "interrupted: ~A"
              (|COMMON-LISP|::|AREF| |CLM|::|*CLM-DATAI*|
               |CLM|::|+CLM-INTERRUPTED+|))
             (|COMMON-LISP|::|ERROR| "error called within run")))))))))))
  '(|CLM|::|BEG| |CLM|::|END| |CLM|::|END-SPECIFIED|)))
